{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_timelock",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "approveStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedStrategies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "converters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "earn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "inCaseStrategyTokenGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "revokeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "setStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_timelock",
          "type": "address"
        }
      ],
      "name": "setTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaults",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
    "15": "interfaces/IConverter.sol",
    "17": "interfaces/IStrategy.sol",
    "2": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Address.sol",
    "5": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/math/SafeMath.sol",
    "6": "contracts/Controller.sol"
  },
  "ast": {
    "absolutePath": "contracts/Controller.sol",
    "exportedSymbols": {
      "Address": [
        3933
      ],
      "Controller": [
        473
      ],
      "IConverter": [
        4255
      ],
      "IERC20": [
        3413
      ],
      "IStrategy": [
        4340
      ],
      "SafeERC20": [
        3637
      ],
      "SafeMath": [
        4245
      ]
    },
    "id": 474,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 3414,
        "src": "57:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 3638,
        "src": "114:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 3934,
        "src": "180:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 4246,
        "src": "232:57:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IStrategy.sol",
        "file": "../interfaces/IStrategy.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 4341,
        "src": "290:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IConverter.sol",
        "file": "../interfaces/IConverter.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 4256,
        "src": "328:38:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Controller",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 473,
        "linearizedBaseContracts": [
          473
        ],
        "name": "Controller",
        "nameLocation": "377:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "id": 8,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3637,
              "src": "398:9:6"
            },
            "nodeType": "UsingForDirective",
            "src": "392:27:6",
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3413,
                "src": "412:6:6"
              },
              "referencedDeclaration": 3413,
              "src": "412:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3413",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 14,
            "libraryName": {
              "id": 12,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3933,
              "src": "428:7:6"
            },
            "nodeType": "UsingForDirective",
            "src": "422:26:6",
            "typeName": {
              "id": 13,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "440:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 17,
            "libraryName": {
              "id": 15,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4245,
              "src": "457:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "451:27:6",
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "470:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "5aa6e675",
            "id": 19,
            "mutability": "mutable",
            "name": "governance",
            "nameLocation": "496:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "481:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "481:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61d027b3",
            "id": 21,
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "525:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "510:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "510:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d33219b4",
            "id": 23,
            "mutability": "mutable",
            "name": "timelock",
            "nameLocation": "552:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "537:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 22,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "537:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a622ee7c",
            "id": 27,
            "mutability": "mutable",
            "name": "vaults",
            "nameLocation": "600:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "565:41:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "573:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "565:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "584:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "39ebf823",
            "id": 31,
            "mutability": "mutable",
            "name": "strategies",
            "nameLocation": "645:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "610:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "618:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "610:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "629:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e4f2494d",
            "id": 37,
            "mutability": "mutable",
            "name": "converters",
            "nameLocation": "714:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "659:65:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "667:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "659:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 35,
                "keyType": {
                  "id": 33,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "686:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "678:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 34,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "697:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a1578b6a",
            "id": 43,
            "mutability": "mutable",
            "name": "approvedStrategies",
            "nameLocation": "780:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "728:70:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 42,
              "keyType": {
                "id": 38,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "736:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "728:44:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 41,
                "keyType": {
                  "id": 39,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "755:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "747:24:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 40,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "766:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "890:87:6",
              "statements": [
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "896:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "909:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "896:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "896:24:6"
                },
                {
                  "expression": {
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56,
                      "name": "timelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "926:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57,
                      "name": "_timelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "937:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "926:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "926:20:6"
                },
                {
                  "expression": {
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "952:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "963:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "952:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "952:20:6"
                }
              ]
            },
            "id": 65,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "_governance",
                  "nameLocation": "828:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "820:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "_timelock",
                  "nameLocation": "853:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "845:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nameLocation": "876:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "868:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "814:75:6"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "890:0:6"
            },
            "scope": 473,
            "src": "803:174:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1030:85:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 71,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1044:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1044:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 73,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1058:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1044:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21676f7665726e616e6365",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1070:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1036:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:48:6"
                },
                {
                  "expression": {
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1090:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 79,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1101:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1090:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:20:6"
                }
              ]
            },
            "functionSelector": "f0f44260",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTreasury",
            "nameLocation": "990:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nameLocation": "1010:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1002:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1001:19:6"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1030:0:6"
            },
            "scope": 473,
            "src": "981:134:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1172:89:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 89,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1186:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1186:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 91,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1200:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1186:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21676f7665726e616e6365",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1212:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 88,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1178:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:48:6"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1232:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "1245:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1232:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:24:6"
                }
              ]
            },
            "functionSelector": "ab033ea9",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nameLocation": "1128:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_governance",
                  "nameLocation": "1150:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1142:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1141:21:6"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:0:6"
            },
            "scope": 473,
            "src": "1119:142:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "1314:81:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 107,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1328:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1328:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 109,
                          "name": "timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1342:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1328:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2174696d656c6f636b",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1352:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb82509d96d62c4e8b21c124fe440acb090faf3cfe2da2cbb908bc4875829ddf",
                          "typeString": "literal_string \"!timelock\""
                        },
                        "value": "!timelock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb82509d96d62c4e8b21c124fe440acb090faf3cfe2da2cbb908bc4875829ddf",
                          "typeString": "literal_string \"!timelock\""
                        }
                      ],
                      "id": 106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1320:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1320:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1320:44:6"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 114,
                      "name": "timelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1370:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 115,
                      "name": "_timelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1381:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1370:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:20:6"
                }
              ]
            },
            "functionSelector": "bdacb303",
            "id": 119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTimelock",
            "nameLocation": "1274:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_timelock",
                  "nameLocation": "1294:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1286:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:19:6"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1314:0:6"
            },
            "scope": 473,
            "src": "1265:130:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "1458:140:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 127,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1472:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1472:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 129,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1486:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1472:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21676f7665726e616e6365",
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1498:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1464:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 135,
                            "name": "vaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1526:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 137,
                          "indexExpression": {
                            "id": 136,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1533:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1526:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1552:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1544:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 138,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1544:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1544:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1526:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7661756c74",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1556:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23c14fceac7676b670aa56866076586ea1ce15ddcf19208ec6346cf748dffbee",
                          "typeString": "literal_string \"vault\""
                        },
                        "value": "vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23c14fceac7676b670aa56866076586ea1ce15ddcf19208ec6346cf748dffbee",
                          "typeString": "literal_string \"vault\""
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1518:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1518:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:46:6"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 146,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1570:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 148,
                      "indexExpression": {
                        "id": 147,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1577:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1570:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "_vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "1587:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1570:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:23:6"
                }
              ]
            },
            "functionSelector": "714ccf7b",
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVault",
            "nameLocation": "1408:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1425:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1417:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "1441:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1433:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1416:32:6"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1458:0:6"
            },
            "scope": 473,
            "src": "1399:199:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1671:105:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 161,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1685:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1685:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 163,
                          "name": "timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1699:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1685:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2174696d656c6f636b",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1709:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb82509d96d62c4e8b21c124fe440acb090faf3cfe2da2cbb908bc4875829ddf",
                          "typeString": "literal_string \"!timelock\""
                        },
                        "value": "!timelock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb82509d96d62c4e8b21c124fe440acb090faf3cfe2da2cbb908bc4875829ddf",
                          "typeString": "literal_string \"!timelock\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1677:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1677:44:6"
                },
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 168,
                          "name": "approvedStrategies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1727:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 171,
                        "indexExpression": {
                          "id": 169,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "1746:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1727:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 172,
                      "indexExpression": {
                        "id": 170,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "1754:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1727:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1767:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1727:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:44:6"
                }
              ]
            },
            "functionSelector": "c494448e",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveStrategy",
            "nameLocation": "1611:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1635:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1627:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "1651:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1643:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1643:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1626:35:6"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1671:0:6"
            },
            "scope": 473,
            "src": "1602:174:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "1848:189:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 185,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1862:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1862:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 187,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1876:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1862:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21676f7665726e616e6365",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1888:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1854:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 193,
                            "name": "strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "1916:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 195,
                          "indexExpression": {
                            "id": 194,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "1927:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1916:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 196,
                          "name": "_strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "1938:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1916:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f74207265766f6b6520616374697665207374726174656779",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1949:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1013bdb0d6e0563c6995a4ff330588c2596756817cb800432497a70f50ea33ef",
                          "typeString": "literal_string \"cannot revoke active strategy\""
                        },
                        "value": "cannot revoke active strategy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1013bdb0d6e0563c6995a4ff330588c2596756817cb800432497a70f50ea33ef",
                          "typeString": "literal_string \"cannot revoke active strategy\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1908:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:73:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:73:6"
                },
                {
                  "expression": {
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 201,
                          "name": "approvedStrategies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1987:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 204,
                        "indexExpression": {
                          "id": 202,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "2006:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1987:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 205,
                      "indexExpression": {
                        "id": 203,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "2014:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1987:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2027:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1987:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1987:45:6"
                }
              ]
            },
            "functionSelector": "590bbb60",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeStrategy",
            "nameLocation": "1789:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1812:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "1804:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1804:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "1828:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "1820:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1820:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1803:35:6"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:6"
            },
            "scope": 473,
            "src": "1780:257:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "2106:292:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 218,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2120:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2120:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 220,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "2134:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2120:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21676f7665726e616e6365",
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2146:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2112:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 226,
                              "name": "approvedStrategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "2174:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 228,
                            "indexExpression": {
                              "id": 227,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "2193:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2174:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 230,
                          "indexExpression": {
                            "id": 229,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2201:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2174:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2215:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2174:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21617070726f766564",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2221:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f6bac7f5dd75efb272c5b21704dc40d091497f9cb075b4b46542d96164a7bf9",
                          "typeString": "literal_string \"!approved\""
                        },
                        "value": "!approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f6bac7f5dd75efb272c5b21704dc40d091497f9cb075b4b46542d96164a7bf9",
                          "typeString": "literal_string \"!approved\""
                        }
                      ],
                      "id": 225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2166:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2166:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2166:67:6"
                },
                {
                  "assignments": [
                    237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 237,
                      "mutability": "mutable",
                      "name": "_current",
                      "nameLocation": "2247:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 262,
                      "src": "2239:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 236,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2239:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 241,
                  "initialValue": {
                    "baseExpression": {
                      "id": 238,
                      "name": "strategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2258:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 240,
                    "indexExpression": {
                      "id": 239,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2269:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2258:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2239:37:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 242,
                      "name": "_current",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "2286:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2306:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2298:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2298:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2298:10:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2286:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 255,
                  "nodeType": "IfStatement",
                  "src": "2282:76:6",
                  "trueBody": {
                    "id": 254,
                    "nodeType": "Block",
                    "src": "2310:48:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 249,
                                  "name": "_current",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 237,
                                  "src": "2328:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 248,
                                "name": "IStrategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4340,
                                "src": "2318:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IStrategy_$4340_$",
                                  "typeString": "type(contract IStrategy)"
                                }
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2318:19:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$4340",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4305,
                            "src": "2318:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2318:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 253,
                        "nodeType": "ExpressionStatement",
                        "src": "2318:33:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 256,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2363:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "id": 257,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "2374:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2363:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 259,
                      "name": "_strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2384:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2363:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:30:6"
                }
              ]
            },
            "functionSelector": "72cb5d97",
            "id": 263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategy",
            "nameLocation": "2050:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2070:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2062:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2062:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "2086:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2078:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2078:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2061:35:6"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2106:0:6"
            },
            "scope": 473,
            "src": "2041:357:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "2458:455:6",
              "statements": [
                {
                  "assignments": [
                    271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 271,
                      "mutability": "mutable",
                      "name": "_strategy",
                      "nameLocation": "2472:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 337,
                      "src": "2464:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 270,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2464:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 275,
                  "initialValue": {
                    "baseExpression": {
                      "id": 272,
                      "name": "strategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2484:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 274,
                    "indexExpression": {
                      "id": 273,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "2495:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2484:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2464:38:6"
                },
                {
                  "assignments": [
                    277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 277,
                      "mutability": "mutable",
                      "name": "_want",
                      "nameLocation": "2516:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 337,
                      "src": "2508:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 276,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2508:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 283,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 279,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "2534:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 278,
                          "name": "IStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4340,
                          "src": "2524:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStrategy_$4340_$",
                            "typeString": "type(contract IStrategy)"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2524:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$4340",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "want",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4272,
                      "src": "2524:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2524:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2508:43:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 284,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "2561:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 285,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "2570:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2561:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 329,
                    "nodeType": "Block",
                    "src": "2811:62:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 325,
                              "name": "_strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 271,
                              "src": "2847:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 326,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "2858:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 322,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 265,
                                  "src": "2826:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 321,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3413,
                                "src": "2819:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3413_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2819:14:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3413",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3444,
                            "src": "2819:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3413_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3413_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2819:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 328,
                        "nodeType": "ExpressionStatement",
                        "src": "2819:47:6"
                      }
                    ]
                  },
                  "id": 330,
                  "nodeType": "IfStatement",
                  "src": "2557:316:6",
                  "trueBody": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "2578:227:6",
                    "statements": [
                      {
                        "assignments": [
                          288
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 288,
                            "mutability": "mutable",
                            "name": "converter",
                            "nameLocation": "2594:9:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 320,
                            "src": "2586:17:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 287,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2586:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 294,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 289,
                              "name": "converters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "2606:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 291,
                            "indexExpression": {
                              "id": 290,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "2617:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2606:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 293,
                          "indexExpression": {
                            "id": 292,
                            "name": "_want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "2625:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2606:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2586:45:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 299,
                              "name": "converter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 288,
                              "src": "2667:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 300,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "2678:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 296,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 265,
                                  "src": "2646:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 295,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3413,
                                "src": "2639:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3413_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2639:14:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3413",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3444,
                            "src": "2639:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3413_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3413_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2639:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 302,
                        "nodeType": "ExpressionStatement",
                        "src": "2639:47:6"
                      },
                      {
                        "expression": {
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 303,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 267,
                            "src": "2694:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 308,
                                "name": "_strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "2734:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 305,
                                    "name": "converter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 288,
                                    "src": "2715:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 304,
                                  "name": "IConverter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4255,
                                  "src": "2704:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IConverter_$4255_$",
                                    "typeString": "type(contract IConverter)"
                                  }
                                },
                                "id": 306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2704:21:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConverter_$4255",
                                  "typeString": "contract IConverter"
                                }
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "convert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4254,
                              "src": "2704:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) external returns (uint256)"
                              }
                            },
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2704:40:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2694:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 311,
                        "nodeType": "ExpressionStatement",
                        "src": "2694:50:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 316,
                              "name": "_strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 271,
                              "src": "2779:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 317,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "2790:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 313,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 277,
                                  "src": "2759:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 312,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3413,
                                "src": "2752:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3413_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2752:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3413",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3444,
                            "src": "2752:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3413_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3413_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2752:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "2752:46:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 332,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "2888:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 331,
                          "name": "IStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4340,
                          "src": "2878:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStrategy_$4340_$",
                            "typeString": "type(contract IStrategy)"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2878:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$4340",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4280,
                      "src": "2878:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2878:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "2878:30:6"
                }
              ]
            },
            "functionSelector": "b02bf4b9",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earn",
            "nameLocation": "2411:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2424:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2416:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2440:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2432:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2432:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2415:33:6"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2458:0:6"
            },
            "scope": 473,
            "src": "2402:511:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 353,
              "nodeType": "Block",
              "src": "2986:59:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 346,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "3009:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 348,
                            "indexExpression": {
                              "id": 347,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 340,
                              "src": "3020:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3009:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 345,
                          "name": "IStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4340,
                          "src": "2999:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStrategy_$4340_$",
                            "typeString": "type(contract IStrategy)"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2999:29:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$4340",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4310,
                      "src": "2999:39:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2999:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 344,
                  "id": 352,
                  "nodeType": "Return",
                  "src": "2992:48:6"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2926:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 340,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2944:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "2936:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2936:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2935:16:6"
            },
            "returnParameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "2975:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2975:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2974:9:6"
            },
            "scope": 473,
            "src": "2917:128:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "3095:108:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 360,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3109:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3109:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 362,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "3123:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3109:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21676f7665726e616e6365",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3135:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 359,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3101:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "3101:48:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 368,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "3165:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 370,
                            "indexExpression": {
                              "id": 369,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "3176:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3165:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 367,
                          "name": "IStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4340,
                          "src": "3155:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStrategy_$4340_$",
                            "typeString": "type(contract IStrategy)"
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3155:29:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$4340",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4305,
                      "src": "3155:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3155:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "3155:43:6"
                }
              ]
            },
            "functionSelector": "fa09e630",
            "id": 376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nameLocation": "3058:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3078:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "3070:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3070:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3069:16:6"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3095:0:6"
            },
            "scope": 473,
            "src": "3049:154:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "3279:113:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 384,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3293:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3293:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 386,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "3307:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3293:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21676f7665726e616e6365",
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3319:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 383,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3285:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3285:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "3285:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 395,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3367:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3367:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 397,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "3379:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 392,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "3346:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 391,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3413,
                          "src": "3339:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3413_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3339:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3413",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3444,
                      "src": "3339:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3413_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3413_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3339:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "3339:48:6"
                }
              ]
            },
            "functionSelector": "c6d758cb",
            "id": 401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inCaseTokensGetStuck",
            "nameLocation": "3216:20:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3245:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "3237:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3237:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3261:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "3253:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3253:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3236:33:6"
            },
            "returnParameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3279:0:6"
            },
            "scope": 473,
            "src": "3207:185:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 423,
              "nodeType": "Block",
              "src": "3481:102:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 409,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3495:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3495:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 411,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "3509:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3495:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21676f7665726e616e6365",
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3521:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3487:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3487:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "3487:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 420,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "3571:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 417,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "3551:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 416,
                          "name": "IStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4340,
                          "src": "3541:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStrategy_$4340_$",
                            "typeString": "type(contract IStrategy)"
                          }
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3541:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$4340",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4292,
                      "src": "3541:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3541:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "3541:37:6"
                }
              ]
            },
            "functionSelector": "197baa6d",
            "id": 424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inCaseStrategyTokenGetStuck",
            "nameLocation": "3405:27:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "3441:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
                  "src": "3433:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3460:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
                  "src": "3452:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3452:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3432:35:6"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3481:0:6"
            },
            "scope": 473,
            "src": "3396:187:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "3647:111:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 432,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3661:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3661:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 434,
                            "name": "vaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "3675:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 436,
                          "indexExpression": {
                            "id": 435,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "3682:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3675:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3661:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "217661756c74",
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3691:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3653:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3653:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "3653:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 447,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "3745:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 442,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "3716:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 444,
                            "indexExpression": {
                              "id": 443,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 426,
                              "src": "3727:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3716:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 441,
                          "name": "IStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4340,
                          "src": "3706:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStrategy_$4340_$",
                            "typeString": "type(contract IStrategy)"
                          }
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3706:29:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$4340",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4297,
                      "src": "3706:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3706:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "3706:47:6"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3596:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3613:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "3605:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3605:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3629:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "3621:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3621:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3604:33:6"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3647:0:6"
            },
            "scope": 473,
            "src": "3587:171:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "3868:581:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 461,
                          "name": "_target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 453,
                          "src": "3882:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3901:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3893:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3893:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3893:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3882:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21746172676574",
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3905:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21d12b38281a7dcc140df15effc4f5ceb848993cc7a60e973dc005a8b67557b1",
                          "typeString": "literal_string \"!target\""
                        },
                        "value": "!target"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21d12b38281a7dcc140df15effc4f5ceb848993cc7a60e973dc005a8b67557b1",
                          "typeString": "literal_string \"!target\""
                        }
                      ],
                      "id": 460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3874:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3874:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "3874:41:6"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3970:475:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3978:94:6",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "gas",
                                    "nodeType": "YulIdentifier",
                                    "src": "4012:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4012:5:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4019:4:6",
                                  "type": "",
                                  "value": "5000"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "4008:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4008:16:6"
                            },
                            {
                              "name": "_target",
                              "nodeType": "YulIdentifier",
                              "src": "4026:7:6"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "_data",
                                  "nodeType": "YulIdentifier",
                                  "src": "4039:5:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4046:4:6",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4035:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4035:16:6"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "_data",
                                  "nodeType": "YulIdentifier",
                                  "src": "4059:5:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4053:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4053:12:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4067:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4070:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "3995:12:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3995:77:6"
                        },
                        "variables": [
                          {
                            "name": "succeeded",
                            "nodeType": "YulTypedName",
                            "src": "3982:9:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4079:28:6",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "4091:14:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4091:16:6"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "4083:4:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4114:23:6",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4132:4:6",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4126:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4126:11:6"
                        },
                        "variableNames": [
                          {
                            "name": "response",
                            "nodeType": "YulIdentifier",
                            "src": "4114:8:6"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4151:4:6",
                              "type": "",
                              "value": "0x40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "response",
                                  "nodeType": "YulIdentifier",
                                  "src": "4161:8:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "size",
                                              "nodeType": "YulIdentifier",
                                              "src": "4183:4:6"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4189:4:6",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4179:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4179:15:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4196:4:6",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4175:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4175:26:6"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4207:4:6",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "4203:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4203:9:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "4171:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4171:42:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4157:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4157:57:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4144:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4144:71:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4144:71:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "response",
                              "nodeType": "YulIdentifier",
                              "src": "4229:8:6"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "4239:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4222:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4222:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4222:22:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "response",
                                  "nodeType": "YulIdentifier",
                                  "src": "4270:8:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4280:4:6",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4266:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4266:19:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4287:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "4290:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "4251:14:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4251:44:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4251:44:6"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4342:97:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "response",
                                            "nodeType": "YulIdentifier",
                                            "src": "4407:8:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4417:4:6",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4403:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4403:19:6"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "4424:4:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "4396:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4396:33:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4396:33:6"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "4335:104:6",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4340:1:6",
                              "type": "",
                              "value": "1"
                            }
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "name": "succeeded",
                              "nodeType": "YulIdentifier",
                              "src": "4316:9:6"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "4309:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4309:17:6"
                        },
                        "nodeType": "YulSwitch",
                        "src": "4302:137:6"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 455,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4039:5:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 455,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4059:5:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 453,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4026:7:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 458,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4114:8:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 458,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4161:8:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 458,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4229:8:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 458,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4270:8:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 458,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4407:8:6",
                      "valueSize": 1
                    }
                  ],
                  "id": 470,
                  "nodeType": "InlineAssembly",
                  "src": "3961:484:6"
                }
              ]
            },
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_execute",
            "nameLocation": "3771:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "3788:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "3780:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3780:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "3810:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "3797:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3779:37:6"
            },
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "response",
                  "nameLocation": "3856:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "3843:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3843:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3842:23:6"
            },
            "scope": 473,
            "src": "3762:687:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 474,
        "src": "368:4083:6",
        "usedErrors": []
      }
    ],
    "src": "32:4420:6"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161116638038061116683398101604081905261002f9161008d565b600080546001600160a01b039485166001600160a01b0319918216179091556002805493851693821693909317909255600180549190931691161790556100d0565b80516001600160a01b038116811461008857600080fd5b919050565b6000806000606084860312156100a257600080fd5b6100ab84610071565b92506100b960208501610071565b91506100c760408501610071565b90509250925092565b611087806100df6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063ab033ea9116100ad578063d33219b411610071578063d33219b4146102d2578063e4f2494d146102e5578063f0f4426014610319578063f3fef3a31461032c578063fa09e6301461033f57600080fd5b8063ab033ea914610273578063b02bf4b914610286578063bdacb30314610299578063c494448e146102ac578063c6d758cb146102bf57600080fd5b806370a08231116100f457806370a08231146101c5578063714ccf7b146101e657806372cb5d97146101f9578063a1578b6a1461020c578063a622ee7c1461024a57600080fd5b8063197baa6d1461013157806339ebf82314610146578063590bbb601461018c5780635aa6e6751461019f57806361d027b3146101b2575b600080fd5b61014461013f366004610ed3565b610352565b005b61016f610154366004610f0c565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61014461019a366004610ed3565b6103e5565b60005461016f906001600160a01b031681565b60015461016f906001600160a01b031681565b6101d86101d3366004610f0c565b6104ad565b604051908152602001610183565b6101446101f4366004610ed3565b610539565b610144610207366004610ed3565b6105e1565b61023a61021a366004610ed3565b600660209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610183565b61016f610258366004610f0c565b6003602052600090815260409020546001600160a01b031681565b610144610281366004610f0c565b610736565b610144610294366004610f29565b610782565b6101446102a7366004610f0c565b610961565b6101446102ba366004610ed3565b6109c9565b6101446102cd366004610f29565b610a43565b60025461016f906001600160a01b031681565b61016f6102f3366004610ed3565b60056020908152600092835260408084209091529082529020546001600160a01b031681565b610144610327366004610f0c565b610a85565b61014461033a366004610f29565b610ad1565b61014461034d366004610f0c565b610b64565b6000546001600160a01b031633146103855760405162461bcd60e51b815260040161037c90610f55565b60405180910390fd5b6040516351cff8d960e01b81526001600160a01b0382811660048301528316906351cff8d9906024015b600060405180830381600087803b1580156103c957600080fd5b505af11580156103dd573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331461040f5760405162461bcd60e51b815260040161037c90610f55565b6001600160a01b038281166000908152600460205260409020548116908216141561047c5760405162461bcd60e51b815260206004820152601d60248201527f63616e6e6f74207265766f6b6520616374697665207374726174656779000000604482015260640161037c565b6001600160a01b0391821660009081526006602090815260408083209390941682529190915220805460ff19169055565b6001600160a01b03808216600090815260046020818152604080842054815163722713f760e01b815291519495169363722713f7938281019392829003018186803b1580156104fb57600080fd5b505afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105339190610f7a565b92915050565b6000546001600160a01b031633146105635760405162461bcd60e51b815260040161037c90610f55565b6001600160a01b0382811660009081526003602052604090205416156105b35760405162461bcd60e51b81526020600482015260056024820152641d985d5b1d60da1b604482015260640161037c565b6001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b0316331461060b5760405162461bcd60e51b815260040161037c90610f55565b6001600160a01b0380831660009081526006602090815260408083209385168352929052205460ff1615156001146106715760405162461bcd60e51b815260206004820152600960248201526808585c1c1c9bdd995960ba1b604482015260640161037c565b6001600160a01b0380831660009081526004602052604090205416801561070757806001600160a01b031663853828b66040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106cd57600080fd5b505af11580156106e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107059190610f7a565b505b506001600160a01b03918216600090815260046020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031633146107605760405162461bcd60e51b815260040161037c90610f55565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038083166000908152600460208181526040808420548151631f1fcd5160e01b815291519516948593631f1fcd51938382019390929190829003018186803b1580156107d457600080fd5b505afa1580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c9190610f93565b9050836001600160a01b0316816001600160a01b0316146108f4576001600160a01b03808516600081815260056020908152604080832086861684529091529020549091169061085d908286610c18565b60405163def2489b60e01b81526001600160a01b03848116600483015282169063def2489b90602401602060405180830381600087803b1580156108a057600080fd5b505af11580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d89190610f7a565b93506108ee6001600160a01b0383168486610c18565b50610908565b6109086001600160a01b0385168385610c18565b816001600160a01b031663d0e30db06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561094357600080fd5b505af1158015610957573d6000803e3d6000fd5b5050505050505050565b6002546001600160a01b031633146109a75760405162461bcd60e51b81526020600482015260096024820152682174696d656c6f636b60b81b604482015260640161037c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b03163314610a0f5760405162461bcd60e51b81526020600482015260096024820152682174696d656c6f636b60b81b604482015260640161037c565b6001600160a01b0391821660009081526006602090815260408083209390941682529190915220805460ff19166001179055565b6000546001600160a01b03163314610a6d5760405162461bcd60e51b815260040161037c90610f55565b610a816001600160a01b0383163383610c18565b5050565b6000546001600160a01b03163314610aaf5760405162461bcd60e51b815260040161037c90610f55565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03828116600090815260036020526040902054163314610b235760405162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015260640161037c565b6001600160a01b03828116600090815260046020819052604091829020549151632e1a7d4d60e01b8152908101849052911690632e1a7d4d906024016103af565b6000546001600160a01b03163314610b8e5760405162461bcd60e51b815260040161037c90610f55565b6001600160a01b03808216600090815260046020818152604080842054815163429c145b60e11b8152915195169463853828b69482850194919283900390910190829087803b158015610be057600080fd5b505af1158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a819190610f7a565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c6a908490610c6f565b505050565b6000610cc4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d419092919063ffffffff16565b805190915015610c6a5780806020019051810190610ce29190610fb0565b610c6a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161037c565b6060610d508484600085610d5a565b90505b9392505050565b606082471015610dbb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161037c565b843b610e095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161037c565b600080866001600160a01b03168587604051610e259190611002565b60006040518083038185875af1925050503d8060008114610e62576040519150601f19603f3d011682016040523d82523d6000602084013e610e67565b606091505b5091509150610e77828286610e82565b979650505050505050565b60608315610e91575081610d53565b825115610ea15782518084602001fd5b8160405162461bcd60e51b815260040161037c919061101e565b6001600160a01b0381168114610ed057600080fd5b50565b60008060408385031215610ee657600080fd5b8235610ef181610ebb565b91506020830135610f0181610ebb565b809150509250929050565b600060208284031215610f1e57600080fd5b8135610d5381610ebb565b60008060408385031215610f3c57600080fd5b8235610f4781610ebb565b946020939093013593505050565b6020808252600b908201526a21676f7665726e616e636560a81b604082015260600190565b600060208284031215610f8c57600080fd5b5051919050565b600060208284031215610fa557600080fd5b8151610d5381610ebb565b600060208284031215610fc257600080fd5b81518015158114610d5357600080fd5b60005b83811015610fed578181015183820152602001610fd5565b83811115610ffc576000848401525b50505050565b60008251611014818460208701610fd2565b9190910192915050565b602081526000825180602084015261103d816040850160208701610fd2565b601f01601f1916919091016040019291505056fea2646970667358221220cb056cbce67c2c4e2a7217d3c7c1b64cb7903d2752a86a532c593d164eeba06264736f6c63430008090033",
  "bytecodeSha1": "861bcabd9cf28a05873326bf438f91b04b3a1f5a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "Controller",
  "coverageMap": {
    "branches": {
      "1": {},
      "15": {},
      "17": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "59": [
            3550,
            3571,
            false
          ],
          "60": [
            3679,
            3709,
            true
          ]
        }
      },
      "3": {
        "Address._verifyCallResult": {
          "57": [
            7226,
            7233,
            false
          ],
          "58": [
            7367,
            7388,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "56": [
            4759,
            4789,
            true
          ]
        }
      },
      "5": {},
      "6": {
        "Controller.approveStrategy": {
          "51": [
            1685,
            1707,
            true
          ]
        },
        "Controller.earn": {
          "49": [
            2561,
            2576,
            false
          ]
        },
        "Controller.inCaseStrategyTokenGetStuck": {
          "40": [
            3495,
            3519,
            true
          ]
        },
        "Controller.inCaseTokensGetStuck": {
          "52": [
            3293,
            3317,
            true
          ]
        },
        "Controller.revokeStrategy": {
          "41": [
            1862,
            1886,
            true
          ],
          "42": [
            1916,
            1947,
            true
          ]
        },
        "Controller.setGovernance": {
          "48": [
            1186,
            1210,
            true
          ]
        },
        "Controller.setStrategy": {
          "45": [
            2120,
            2144,
            true
          ],
          "46": [
            2174,
            2219,
            true
          ],
          "47": [
            2286,
            2308,
            false
          ]
        },
        "Controller.setTimelock": {
          "50": [
            1328,
            1350,
            true
          ]
        },
        "Controller.setTreasury": {
          "53": [
            1044,
            1068,
            true
          ]
        },
        "Controller.setVault": {
          "43": [
            1472,
            1496,
            true
          ],
          "44": [
            1526,
            1554,
            true
          ]
        },
        "Controller.withdraw": {
          "54": [
            3661,
            3689,
            true
          ]
        },
        "Controller.withdrawAll": {
          "55": [
            3109,
            3133,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {},
      "15": {},
      "17": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "33": [
            3671,
            3756
          ]
        },
        "SafeERC20.safeTransfer": {
          "32": [
            716,
            802
          ]
        }
      },
      "3": {
        "Address._verifyCallResult": {
          "38": [
            7249,
            7266
          ],
          "39": [
            7757,
            7777
          ]
        },
        "Address.functionCall": {
          "34": [
            3700,
            3759
          ]
        },
        "Address.functionCallWithValue": {
          "35": [
            4751,
            4832
          ],
          "36": [
            4842,
            4902
          ],
          "37": [
            5057,
            5116
          ]
        }
      },
      "5": {},
      "6": {
        "Controller.approveStrategy": {
          "22": [
            1677,
            1721
          ],
          "23": [
            1727,
            1771
          ]
        },
        "Controller.balanceOf": {
          "5": [
            2992,
            3040
          ]
        },
        "Controller.earn": {
          "15": [
            2639,
            2686
          ],
          "16": [
            2694,
            2744
          ],
          "17": [
            2752,
            2798
          ],
          "18": [
            2819,
            2866
          ],
          "19": [
            2878,
            2908
          ]
        },
        "Controller.inCaseStrategyTokenGetStuck": {
          "0": [
            3487,
            3535
          ],
          "1": [
            3541,
            3578
          ]
        },
        "Controller.inCaseTokensGetStuck": {
          "24": [
            3285,
            3333
          ],
          "25": [
            3339,
            3387
          ]
        },
        "Controller.revokeStrategy": {
          "2": [
            1854,
            1902
          ],
          "3": [
            1908,
            1981
          ],
          "4": [
            1987,
            2032
          ]
        },
        "Controller.setGovernance": {
          "13": [
            1178,
            1226
          ],
          "14": [
            1232,
            1256
          ]
        },
        "Controller.setStrategy": {
          "9": [
            2112,
            2160
          ],
          "10": [
            2166,
            2233
          ],
          "11": [
            2318,
            2351
          ],
          "12": [
            2363,
            2393
          ]
        },
        "Controller.setTimelock": {
          "20": [
            1320,
            1364
          ],
          "21": [
            1370,
            1390
          ]
        },
        "Controller.setTreasury": {
          "26": [
            1036,
            1084
          ],
          "27": [
            1090,
            1110
          ]
        },
        "Controller.setVault": {
          "6": [
            1464,
            1512
          ],
          "7": [
            1518,
            1564
          ],
          "8": [
            1570,
            1593
          ]
        },
        "Controller.withdraw": {
          "28": [
            3653,
            3700
          ],
          "29": [
            3706,
            3753
          ]
        },
        "Controller.withdrawAll": {
          "30": [
            3101,
            3149
          ],
          "31": [
            3155,
            3198
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Address",
    "IConverter",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC20",
    "IStrategy",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063ab033ea9116100ad578063d33219b411610071578063d33219b4146102d2578063e4f2494d146102e5578063f0f4426014610319578063f3fef3a31461032c578063fa09e6301461033f57600080fd5b8063ab033ea914610273578063b02bf4b914610286578063bdacb30314610299578063c494448e146102ac578063c6d758cb146102bf57600080fd5b806370a08231116100f457806370a08231146101c5578063714ccf7b146101e657806372cb5d97146101f9578063a1578b6a1461020c578063a622ee7c1461024a57600080fd5b8063197baa6d1461013157806339ebf82314610146578063590bbb601461018c5780635aa6e6751461019f57806361d027b3146101b2575b600080fd5b61014461013f366004610ed3565b610352565b005b61016f610154366004610f0c565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61014461019a366004610ed3565b6103e5565b60005461016f906001600160a01b031681565b60015461016f906001600160a01b031681565b6101d86101d3366004610f0c565b6104ad565b604051908152602001610183565b6101446101f4366004610ed3565b610539565b610144610207366004610ed3565b6105e1565b61023a61021a366004610ed3565b600660209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610183565b61016f610258366004610f0c565b6003602052600090815260409020546001600160a01b031681565b610144610281366004610f0c565b610736565b610144610294366004610f29565b610782565b6101446102a7366004610f0c565b610961565b6101446102ba366004610ed3565b6109c9565b6101446102cd366004610f29565b610a43565b60025461016f906001600160a01b031681565b61016f6102f3366004610ed3565b60056020908152600092835260408084209091529082529020546001600160a01b031681565b610144610327366004610f0c565b610a85565b61014461033a366004610f29565b610ad1565b61014461034d366004610f0c565b610b64565b6000546001600160a01b031633146103855760405162461bcd60e51b815260040161037c90610f55565b60405180910390fd5b6040516351cff8d960e01b81526001600160a01b0382811660048301528316906351cff8d9906024015b600060405180830381600087803b1580156103c957600080fd5b505af11580156103dd573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331461040f5760405162461bcd60e51b815260040161037c90610f55565b6001600160a01b038281166000908152600460205260409020548116908216141561047c5760405162461bcd60e51b815260206004820152601d60248201527f63616e6e6f74207265766f6b6520616374697665207374726174656779000000604482015260640161037c565b6001600160a01b0391821660009081526006602090815260408083209390941682529190915220805460ff19169055565b6001600160a01b03808216600090815260046020818152604080842054815163722713f760e01b815291519495169363722713f7938281019392829003018186803b1580156104fb57600080fd5b505afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105339190610f7a565b92915050565b6000546001600160a01b031633146105635760405162461bcd60e51b815260040161037c90610f55565b6001600160a01b0382811660009081526003602052604090205416156105b35760405162461bcd60e51b81526020600482015260056024820152641d985d5b1d60da1b604482015260640161037c565b6001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b0316331461060b5760405162461bcd60e51b815260040161037c90610f55565b6001600160a01b0380831660009081526006602090815260408083209385168352929052205460ff1615156001146106715760405162461bcd60e51b815260206004820152600960248201526808585c1c1c9bdd995960ba1b604482015260640161037c565b6001600160a01b0380831660009081526004602052604090205416801561070757806001600160a01b031663853828b66040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106cd57600080fd5b505af11580156106e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107059190610f7a565b505b506001600160a01b03918216600090815260046020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031633146107605760405162461bcd60e51b815260040161037c90610f55565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038083166000908152600460208181526040808420548151631f1fcd5160e01b815291519516948593631f1fcd51938382019390929190829003018186803b1580156107d457600080fd5b505afa1580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c9190610f93565b9050836001600160a01b0316816001600160a01b0316146108f4576001600160a01b03808516600081815260056020908152604080832086861684529091529020549091169061085d908286610c18565b60405163def2489b60e01b81526001600160a01b03848116600483015282169063def2489b90602401602060405180830381600087803b1580156108a057600080fd5b505af11580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d89190610f7a565b93506108ee6001600160a01b0383168486610c18565b50610908565b6109086001600160a01b0385168385610c18565b816001600160a01b031663d0e30db06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561094357600080fd5b505af1158015610957573d6000803e3d6000fd5b5050505050505050565b6002546001600160a01b031633146109a75760405162461bcd60e51b81526020600482015260096024820152682174696d656c6f636b60b81b604482015260640161037c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b03163314610a0f5760405162461bcd60e51b81526020600482015260096024820152682174696d656c6f636b60b81b604482015260640161037c565b6001600160a01b0391821660009081526006602090815260408083209390941682529190915220805460ff19166001179055565b6000546001600160a01b03163314610a6d5760405162461bcd60e51b815260040161037c90610f55565b610a816001600160a01b0383163383610c18565b5050565b6000546001600160a01b03163314610aaf5760405162461bcd60e51b815260040161037c90610f55565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03828116600090815260036020526040902054163314610b235760405162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015260640161037c565b6001600160a01b03828116600090815260046020819052604091829020549151632e1a7d4d60e01b8152908101849052911690632e1a7d4d906024016103af565b6000546001600160a01b03163314610b8e5760405162461bcd60e51b815260040161037c90610f55565b6001600160a01b03808216600090815260046020818152604080842054815163429c145b60e11b8152915195169463853828b69482850194919283900390910190829087803b158015610be057600080fd5b505af1158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a819190610f7a565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c6a908490610c6f565b505050565b6000610cc4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d419092919063ffffffff16565b805190915015610c6a5780806020019051810190610ce29190610fb0565b610c6a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161037c565b6060610d508484600085610d5a565b90505b9392505050565b606082471015610dbb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161037c565b843b610e095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161037c565b600080866001600160a01b03168587604051610e259190611002565b60006040518083038185875af1925050503d8060008114610e62576040519150601f19603f3d011682016040523d82523d6000602084013e610e67565b606091505b5091509150610e77828286610e82565b979650505050505050565b60608315610e91575081610d53565b825115610ea15782518084602001fd5b8160405162461bcd60e51b815260040161037c919061101e565b6001600160a01b0381168114610ed057600080fd5b50565b60008060408385031215610ee657600080fd5b8235610ef181610ebb565b91506020830135610f0181610ebb565b809150509250929050565b600060208284031215610f1e57600080fd5b8135610d5381610ebb565b60008060408385031215610f3c57600080fd5b8235610f4781610ebb565b946020939093013593505050565b6020808252600b908201526a21676f7665726e616e636560a81b604082015260600190565b600060208284031215610f8c57600080fd5b5051919050565b600060208284031215610fa557600080fd5b8151610d5381610ebb565b600060208284031215610fc257600080fd5b81518015158114610d5357600080fd5b60005b83811015610fed578181015183820152602001610fd5565b83811115610ffc576000848401525b50505050565b60008251611014818460208701610fd2565b9190910192915050565b602081526000825180602084015261103d816040850160208701610fd2565b601f01601f1916919091016040019291505056fea2646970667358221220cb056cbce67c2c4e2a7217d3c7c1b64cb7903d2752a86a532c593d164eeba06264736f6c63430008090033",
  "deployedSourceMap": "368:4083:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3396:187;;;;;;:::i;:::-;;:::i;:::-;;610:45;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;610:45:6;;;;;;-1:-1:-1;;;;;959:32:19;;;941:51;;929:2;914:18;610:45:6;;;;;;;;1780:257;;;;;;:::i;:::-;;:::i;481:25::-;;;;;-1:-1:-1;;;;;481:25:6;;;510:23;;;;;-1:-1:-1;;;;;510:23:6;;;2917:128;;;;;;:::i;:::-;;:::i;:::-;;;1149:25:19;;;1137:2;1122:18;2917:128:6;1003:177:19;1399:199:6;;;;;;:::i;:::-;;:::i;2041:357::-;;;;;;:::i;:::-;;:::i;728:70::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1350:14:19;;1343:22;1325:41;;1313:2;1298:18;728:70:6;1185:187:19;565:41:6;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;565:41:6;;;1119:142;;;;;;:::i;:::-;;:::i;2402:511::-;;;;;;:::i;:::-;;:::i;1265:130::-;;;;;;:::i;:::-;;:::i;1602:174::-;;;;;;:::i;:::-;;:::i;3207:185::-;;;;;;:::i;:::-;;:::i;537:23::-;;;;;-1:-1:-1;;;;;537:23:6;;;659:65;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;659:65:6;;;981:134;;;;;;:::i;:::-;;:::i;3587:171::-;;;;;;:::i;:::-;;:::i;3049:154::-;;;;;;:::i;:::-;;:::i;3396:187::-;3509:10;;-1:-1:-1;;;;;3509:10:6;3495;:24;3487:48;;;;-1:-1:-1;;;3487:48:6;;;;;;;:::i;:::-;;;;;;;;;3541:37;;-1:-1:-1;;;3541:37:6;;-1:-1:-1;;;;;959:32:19;;;3541:37:6;;;941:51:19;3541:29:6;;;;;914:18:19;;3541:37:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3396:187;;:::o;1780:257::-;1876:10;;-1:-1:-1;;;;;1876:10:6;1862;:24;1854:48;;;;-1:-1:-1;;;1854:48:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;1916:18:6;;;;;;;:10;:18;;;;;;;;:31;;;;;1908:73;;;;-1:-1:-1;;;1908:73:6;;2239:2:19;1908:73:6;;;2221:21:19;2278:2;2258:18;;;2251:30;2317:31;2297:18;;;2290:59;2366:18;;1908:73:6;2037:353:19;1908:73:6;-1:-1:-1;;;;;1987:26:6;;;2027:5;1987:26;;;:18;:26;;;;;;;;:37;;;;;;;;;;;:45;;-1:-1:-1;;1987:45:6;;;1780:257::o;2917:128::-;-1:-1:-1;;;;;3009:18:6;;;2975:7;3009:18;;;:10;:18;;;;;;;;;2999:41;;-1:-1:-1;;;2999:41:6;;;;2975:7;;3009:18;;2999:39;;:41;;;;3009:18;2999:41;;;;;3009:18;2999:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2992:48;2917:128;-1:-1:-1;;2917:128:6:o;1399:199::-;1486:10;;-1:-1:-1;;;;;1486:10:6;1472;:24;1464:48;;;;-1:-1:-1;;;1464:48:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;1526:14:6;;;1552:1;1526:14;;;:6;:14;;;;;;;:28;1518:46;;;;-1:-1:-1;;;1518:46:6;;2786:2:19;1518:46:6;;;2768:21:19;2825:1;2805:18;;;2798:29;-1:-1:-1;;;2843:18:19;;;2836:35;2888:18;;1518:46:6;2584:328:19;1518:46:6;-1:-1:-1;;;;;1570:14:6;;;;;;;:6;:14;;;;;:23;;-1:-1:-1;;;;;;1570:23:6;;;;;;;;1399:199::o;2041:357::-;2134:10;;-1:-1:-1;;;;;2134:10:6;2120;:24;2112:48;;;;-1:-1:-1;;;2112:48:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;2174:26:6;;;;;;;:18;:26;;;;;;;;:37;;;;;;;;;;;;:45;;:37;:45;2166:67;;;;-1:-1:-1;;;2166:67:6;;3119:2:19;2166:67:6;;;3101:21:19;3158:1;3138:18;;;3131:29;-1:-1:-1;;;3176:18:19;;;3169:39;3225:18;;2166:67:6;2917:332:19;2166:67:6;-1:-1:-1;;;;;2258:18:6;;;2239:16;2258:18;;;:10;:18;;;;;;;2286:22;;2282:76;;2328:8;-1:-1:-1;;;;;2318:31:6;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2282:76;-1:-1:-1;;;;;;2363:18:6;;;;;;;:10;:18;;;;;:30;;-1:-1:-1;;;;;;2363:30:6;;;;;;;;2041:357::o;1119:142::-;1200:10;;-1:-1:-1;;;;;1200:10:6;1186;:24;1178:48;;;;-1:-1:-1;;;1178:48:6;;;;;;;:::i;:::-;1232:10;:24;;-1:-1:-1;;;;;;1232:24:6;-1:-1:-1;;;;;1232:24:6;;;;;;;;;;1119:142::o;2402:511::-;-1:-1:-1;;;;;2484:18:6;;;2464:17;2484:18;;;:10;:18;;;;;;;;;2524:27;;-1:-1:-1;;;2524:27:6;;;;2484:18;;;;;2524:25;;:27;;;;2484:18;;2524:27;;;;;;;2484:18;2524:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2508:43;;2570:6;-1:-1:-1;;;;;2561:15:6;:5;-1:-1:-1;;;;;2561:15:6;;2557:316;;-1:-1:-1;;;;;2606:18:6;;;2586:17;2606:18;;;:10;:18;;;;;;;;:25;;;;;;;;;;;;;;;2639:47;;2606:25;2678:7;2639:27;:47::i;:::-;2704:40;;-1:-1:-1;;;2704:40:6;;-1:-1:-1;;;;;959:32:19;;;2704:40:6;;;941:51:19;2704:29:6;;;;;914:18:19;;2704:40:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2694:50;-1:-1:-1;2752:46:6;-1:-1:-1;;;;;2752:26:6;;2779:9;2694:50;2752:26;:46::i;:::-;2578:227;2557:316;;;2819:47;-1:-1:-1;;;;;2819:27:6;;2847:9;2858:7;2819:27;:47::i;:::-;2888:9;-1:-1:-1;;;;;2878:28:6;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:455;;2402:511;;:::o;1265:130::-;1342:8;;-1:-1:-1;;;;;1342:8:6;1328:10;:22;1320:44;;;;-1:-1:-1;;;1320:44:6;;3712:2:19;1320:44:6;;;3694:21:19;3751:1;3731:18;;;3724:29;-1:-1:-1;;;3769:18:19;;;3762:39;3818:18;;1320:44:6;3510:332:19;1320:44:6;1370:8;:20;;-1:-1:-1;;;;;;1370:20:6;-1:-1:-1;;;;;1370:20:6;;;;;;;;;;1265:130::o;1602:174::-;1699:8;;-1:-1:-1;;;;;1699:8:6;1685:10;:22;1677:44;;;;-1:-1:-1;;;1677:44:6;;3712:2:19;1677:44:6;;;3694:21:19;3751:1;3731:18;;;3724:29;-1:-1:-1;;;3769:18:19;;;3762:39;3818:18;;1677:44:6;3510:332:19;1677:44:6;-1:-1:-1;;;;;1727:26:6;;;;;;;:18;:26;;;;;;;;:37;;;;;;;;;;;:44;;-1:-1:-1;;1727:44:6;1767:4;1727:44;;;1602:174::o;3207:185::-;3307:10;;-1:-1:-1;;;;;3307:10:6;3293;:24;3285:48;;;;-1:-1:-1;;;3285:48:6;;;;;;;:::i;:::-;3339;-1:-1:-1;;;;;3339:27:6;;3367:10;3379:7;3339:27;:48::i;:::-;3207:185;;:::o;981:134::-;1058:10;;-1:-1:-1;;;;;1058:10:6;1044;:24;1036:48;;;;-1:-1:-1;;;1036:48:6;;;;;;;:::i;:::-;1090:8;:20;;-1:-1:-1;;;;;;1090:20:6;-1:-1:-1;;;;;1090:20:6;;;;;;;;;;981:134::o;3587:171::-;-1:-1:-1;;;;;3675:14:6;;;;;;;:6;:14;;;;;;;3661:10;:28;3653:47;;;;-1:-1:-1;;;3653:47:6;;4049:2:19;3653:47:6;;;4031:21:19;4088:1;4068:18;;;4061:29;-1:-1:-1;;;4106:18:19;;;4099:36;4152:18;;3653:47:6;3847:329:19;3653:47:6;-1:-1:-1;;;;;3716:18:6;;;;;;;:10;:18;;;;;;;;;;3706:47;;-1:-1:-1;;;3706:47:6;;;;;1149:25:19;;;3716:18:6;;;3706:38;;1122:18:19;;3706:47:6;1003:177:19;3049:154:6;3123:10;;-1:-1:-1;;;;;3123:10:6;3109;:24;3101:48;;;;-1:-1:-1;;;3101:48:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;3165:18:6;;;;;;;:10;:18;;;;;;;;;3155:43;;-1:-1:-1;;;3155:43:6;;;;3165:18;;;3155:41;;:43;;;;;;;;;;;;;;;3165:18;3155:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;634:175:2:-;743:58;;;-1:-1:-1;;;;;4373:32:19;;743:58:2;;;4355:51:19;4422:18;;;;4415:34;;;743:58:2;;;;;;;;;;4328:18:19;;;;743:58:2;;;;;;;;-1:-1:-1;;;;;743:58:2;-1:-1:-1;;;743:58:2;;;716:86;;736:5;;716:19;:86::i;:::-;634:175;;;:::o;3022:751::-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;-1:-1:-1;;;;;3467:27:2;;;:69;;;;;:::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:2;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:2;;4944:2:19;3671:85:2;;;4926:21:19;4983:2;4963:18;;;4956:30;5022:34;5002:18;;;4995:62;-1:-1:-1;;;5073:18:19;;;5066:40;5123:19;;3671:85:2;4742:406:19;3573:193:3;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;;3573:193;;;;;;:::o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;-1:-1:-1;;;4751:81:3;;5355:2:19;4751:81:3;;;5337:21:19;5394:2;5374:18;;;5367:30;5433:34;5413:18;;;5406:62;-1:-1:-1;;;5484:18:19;;;5477:36;5530:19;;4751:81:3;5153:402:19;4751:81:3;1078:20;;4842:60;;;;-1:-1:-1;;;4842:60:3;;5762:2:19;4842:60:3;;;5744:21:19;5801:2;5781:18;;;5774:30;5840:31;5820:18;;;5813:59;5889:18;;4842:60:3;5560:353:19;4842:60:3;4973:12;4987:23;5014:6;-1:-1:-1;;;;;5014:11:3;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:3:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:3;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7363:429;7764:12;7757:20;;-1:-1:-1;;;7757:20:3;;;;;;;;:::i;14:131:19:-;-1:-1:-1;;;;;89:31:19;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:388::-;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;-1:-1:-1;460:2:19;445:18;;432:32;473:33;432:32;473:33;:::i;:::-;525:7;515:17;;;150:388;;;;;:::o;543:247::-;602:6;655:2;643:9;634:7;630:23;626:32;623:52;;;671:1;668;661:12;623:52;710:9;697:23;729:31;754:5;729:31;:::i;1377:315::-;1445:6;1453;1506:2;1494:9;1485:7;1481:23;1477:32;1474:52;;;1522:1;1519;1512:12;1474:52;1561:9;1548:23;1580:31;1605:5;1580:31;:::i;:::-;1630:5;1682:2;1667:18;;;;1654:32;;-1:-1:-1;;;1377:315:19:o;1697:335::-;1899:2;1881:21;;;1938:2;1918:18;;;1911:30;-1:-1:-1;;;1972:2:19;1957:18;;1950:41;2023:2;2008:18;;1697:335::o;2395:184::-;2465:6;2518:2;2506:9;2497:7;2493:23;2489:32;2486:52;;;2534:1;2531;2524:12;2486:52;-1:-1:-1;2557:16:19;;2395:184;-1:-1:-1;2395:184:19:o;3254:251::-;3324:6;3377:2;3365:9;3356:7;3352:23;3348:32;3345:52;;;3393:1;3390;3383:12;3345:52;3425:9;3419:16;3444:31;3469:5;3444:31;:::i;4460:277::-;4527:6;4580:2;4568:9;4559:7;4555:23;4551:32;4548:52;;;4596:1;4593;4586:12;4548:52;4628:9;4622:16;4681:5;4674:13;4667:21;4660:5;4657:32;4647:60;;4703:1;4700;4693:12;5918:258;5990:1;6000:113;6014:6;6011:1;6008:13;6000:113;;;6090:11;;;6084:18;6071:11;;;6064:39;6036:2;6029:10;6000:113;;;6131:6;6128:1;6125:13;6122:48;;;6166:1;6157:6;6152:3;6148:16;6141:27;6122:48;;5918:258;;;:::o;6181:274::-;6310:3;6348:6;6342:13;6364:53;6410:6;6405:3;6398:4;6390:6;6386:17;6364:53;:::i;:::-;6433:16;;;;;6181:274;-1:-1:-1;;6181:274:19:o;6460:383::-;6609:2;6598:9;6591:21;6572:4;6641:6;6635:13;6684:6;6679:2;6668:9;6664:18;6657:34;6700:66;6759:6;6754:2;6743:9;6739:18;6734:2;6726:6;6722:15;6700:66;:::i;:::-;6827:2;6806:15;-1:-1:-1;;6802:29:19;6787:45;;;;6834:2;6783:54;;6460:383;-1:-1:-1;;6460:383:19:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    368,
    4451
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB033EA9 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD33219B4 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD33219B4 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xE4F2494D EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xFA09E630 EQ PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xB02BF4B9 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xBDACB303 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xC494448E EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xC6D758CB EQ PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x714CCF7B EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x72CB5D97 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xA1578B6A EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xA622EE7C EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x197BAA6D EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x39EBF823 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x590BBB60 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x1B2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x16F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x16F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x183 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x183 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x736 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2CD CALLDATASIZE PUSH1 0x4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x16F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x51CFF8D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x51CFF8D9 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 AND SWAP1 DUP3 AND EQ ISZERO PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207265766F6B6520616374697665207374726174656779000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x722713F7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 AND SWAP4 PUSH4 0x722713F7 SWAP4 DUP3 DUP2 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x1D985D5B1D PUSH1 0xDA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x8585C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x707 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x853828B6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x705 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x1F1FCD51 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD SWAP6 AND SWAP5 DUP6 SWAP4 PUSH4 0x1F1FCD51 SWAP4 DUP4 DUP3 ADD SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80C SWAP2 SWAP1 PUSH2 0xF93 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8F4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0x85D SWAP1 DUP3 DUP7 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xDEF2489B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xDEF2489B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST SWAP4 POP PUSH2 0x8EE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 DUP7 PUSH2 0xC18 JUMP JUMPDEST POP PUSH2 0x908 JUMP JUMPDEST PUSH2 0x908 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP4 DUP6 PUSH2 0xC18 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2174696D656C6F636B PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2174696D656C6F636B PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH2 0xA81 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0xC18 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER EQ PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x429C145B PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 MLOAD SWAP6 AND SWAP5 PUSH4 0x853828B6 SWAP5 DUP3 DUP6 ADD SWAP5 SWAP2 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xC6A SWAP1 DUP5 SWAP1 PUSH2 0xC6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD41 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xC6A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0xC6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37C JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD50 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xD5A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xDBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37C JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xE09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE25 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE62 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xE77 DUP3 DUP3 DUP7 PUSH2 0xE82 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xE91 JUMPI POP DUP2 PUSH2 0xD53 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xEA1 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xEF1 DUP2 PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xF01 DUP2 PUSH2 0xEBB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD53 DUP2 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF47 DUP2 PUSH2 0xEBB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD53 DUP2 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFED JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFD5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFFC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1014 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xFD2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x103D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SDIV PUSH13 0xBCE67C2C4E2A7217D3C7C1B64C 0xB7 SWAP1 RETURNDATASIZE 0x27 MSTORE 0xA8 PUSH11 0x532C593D164EEBA0626473 PUSH16 0x6C634300080900330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        368,
        4451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12C"
    },
    "25": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xAB033EA9"
    },
    "38": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD33219B4"
    },
    "49": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD33219B4"
    },
    "60": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D2"
    },
    "64": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE4F2494D"
    },
    "71": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E5"
    },
    "75": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF0F44260"
    },
    "82": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x319"
    },
    "86": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF3FEF3A3"
    },
    "93": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x32C"
    },
    "97": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFA09E630"
    },
    "104": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "105": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33F"
    },
    "108": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "112": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "REVERT",
      "path": "6"
    },
    "113": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xAB033EA9"
    },
    "120": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x273"
    },
    "124": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB02BF4B9"
    },
    "131": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x286"
    },
    "135": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBDACB303"
    },
    "142": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x299"
    },
    "146": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC494448E"
    },
    "153": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AC"
    },
    "157": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC6D758CB"
    },
    "164": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "165": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BF"
    },
    "168": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "172": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "REVERT",
      "path": "6"
    },
    "173": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "174": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "175": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "180": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "GT",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "185": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "186": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "191": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "192": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C5"
    },
    "195": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x714CCF7B"
    },
    "202": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E6"
    },
    "206": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "208": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x72CB5D97"
    },
    "213": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "214": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F9"
    },
    "217": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "218": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "219": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA1578B6A"
    },
    "224": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "225": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20C"
    },
    "228": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "229": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "230": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA622EE7C"
    },
    "235": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "236": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24A"
    },
    "239": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "240": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "243": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "REVERT",
      "path": "6"
    },
    "244": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "245": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "246": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x197BAA6D"
    },
    "251": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x131"
    },
    "255": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "256": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "257": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x39EBF823"
    },
    "262": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "263": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x146"
    },
    "266": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "267": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "268": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x590BBB60"
    },
    "273": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "274": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18C"
    },
    "277": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "278": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "279": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5AA6E675"
    },
    "284": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "285": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19F"
    },
    "288": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "289": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "290": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x61D027B3"
    },
    "295": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "EQ",
      "path": "6"
    },
    "296": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B2"
    },
    "299": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "300": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "301": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "303": {
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "304": {
      "first_revert": true,
      "fn": null,
      "offset": [
        368,
        4451
      ],
      "op": "REVERT",
      "path": "6"
    },
    "305": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "306": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "309": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13F"
    },
    "312": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "313": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "315": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED3"
    },
    "318": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "jump": "i",
      "offset": [
        3396,
        3583
      ],
      "op": "JUMP",
      "path": "6"
    },
    "319": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "320": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x352"
    },
    "323": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "jump": "i",
      "offset": [
        3396,
        3583
      ],
      "op": "JUMP",
      "path": "6"
    },
    "324": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "325": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "STOP",
      "path": "6"
    },
    "326": {
      "offset": [
        610,
        655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "327": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16F"
    },
    "330": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x154"
    },
    "333": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "334": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "336": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0C"
    },
    "339": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "jump": "i",
      "offset": [
        610,
        655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "340": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "341": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "343": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "345": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "346": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "348": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "349": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "DUP2",
      "path": "6"
    },
    "350": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "351": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "353": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "354": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "355": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "362": {
      "op": "SHL"
    },
    "363": {
      "op": "SUB"
    },
    "364": {
      "offset": [
        610,
        655
      ],
      "op": "AND",
      "path": "6"
    },
    "365": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "DUP2",
      "path": "6"
    },
    "366": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "367": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "368": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "370": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "377": {
      "op": "SHL"
    },
    "378": {
      "op": "SUB"
    },
    "379": {
      "op": "SWAP1"
    },
    "380": {
      "op": "SWAP2"
    },
    "381": {
      "op": "AND"
    },
    "382": {
      "op": "DUP2"
    },
    "383": {
      "op": "MSTORE"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "386": {
      "op": "ADD"
    },
    "387": {
      "offset": [
        610,
        655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "388": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "390": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "391": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "DUP1",
      "path": "6"
    },
    "392": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "393": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "SUB",
      "path": "6"
    },
    "394": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "395": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        610,
        655
      ],
      "op": "RETURN",
      "path": "6"
    },
    "396": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1780,
        2037
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "397": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1780,
        2037
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "400": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1780,
        2037
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19A"
    },
    "403": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1780,
        2037
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "404": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1780,
        2037
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "406": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1780,
        2037
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED3"
    },
    "409": {
      "fn": "Controller.revokeStrategy",
      "jump": "i",
      "offset": [
        1780,
        2037
      ],
      "op": "JUMP",
      "path": "6"
    },
    "410": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1780,
        2037
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "411": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1780,
        2037
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E5"
    },
    "414": {
      "fn": "Controller.revokeStrategy",
      "jump": "i",
      "offset": [
        1780,
        2037
      ],
      "op": "JUMP",
      "path": "6"
    },
    "415": {
      "offset": [
        481,
        506
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "416": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        481,
        506
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "418": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        481,
        506
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "419": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        481,
        506
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16F"
    },
    "422": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        481,
        506
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "429": {
      "op": "SHL"
    },
    "430": {
      "op": "SUB"
    },
    "431": {
      "offset": [
        481,
        506
      ],
      "op": "AND",
      "path": "6"
    },
    "432": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        481,
        506
      ],
      "op": "DUP2",
      "path": "6"
    },
    "433": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        481,
        506
      ],
      "op": "JUMP",
      "path": "6"
    },
    "434": {
      "offset": [
        510,
        533
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "435": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        510,
        533
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "437": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        510,
        533
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "438": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        510,
        533
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16F"
    },
    "441": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        510,
        533
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "448": {
      "op": "SHL"
    },
    "449": {
      "op": "SUB"
    },
    "450": {
      "offset": [
        510,
        533
      ],
      "op": "AND",
      "path": "6"
    },
    "451": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        510,
        533
      ],
      "op": "DUP2",
      "path": "6"
    },
    "452": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        510,
        533
      ],
      "op": "JUMP",
      "path": "6"
    },
    "453": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "454": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D8"
    },
    "457": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D3"
    },
    "460": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "461": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "463": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0C"
    },
    "466": {
      "fn": "Controller.balanceOf",
      "jump": "i",
      "offset": [
        2917,
        3045
      ],
      "op": "JUMP",
      "path": "6"
    },
    "467": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "468": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4AD"
    },
    "471": {
      "fn": "Controller.balanceOf",
      "jump": "i",
      "offset": [
        2917,
        3045
      ],
      "op": "JUMP",
      "path": "6"
    },
    "472": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "473": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "475": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "476": {
      "op": "SWAP1"
    },
    "477": {
      "op": "DUP2"
    },
    "478": {
      "op": "MSTORE"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "481": {
      "op": "ADD"
    },
    "482": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x183"
    },
    "485": {
      "op": "JUMP"
    },
    "486": {
      "fn": "Controller.setVault",
      "offset": [
        1399,
        1598
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "487": {
      "fn": "Controller.setVault",
      "offset": [
        1399,
        1598
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "490": {
      "fn": "Controller.setVault",
      "offset": [
        1399,
        1598
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F4"
    },
    "493": {
      "fn": "Controller.setVault",
      "offset": [
        1399,
        1598
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "494": {
      "fn": "Controller.setVault",
      "offset": [
        1399,
        1598
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "496": {
      "fn": "Controller.setVault",
      "offset": [
        1399,
        1598
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED3"
    },
    "499": {
      "fn": "Controller.setVault",
      "jump": "i",
      "offset": [
        1399,
        1598
      ],
      "op": "JUMP",
      "path": "6"
    },
    "500": {
      "fn": "Controller.setVault",
      "offset": [
        1399,
        1598
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "501": {
      "fn": "Controller.setVault",
      "offset": [
        1399,
        1598
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x539"
    },
    "504": {
      "fn": "Controller.setVault",
      "jump": "i",
      "offset": [
        1399,
        1598
      ],
      "op": "JUMP",
      "path": "6"
    },
    "505": {
      "fn": "Controller.setStrategy",
      "offset": [
        2041,
        2398
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "506": {
      "fn": "Controller.setStrategy",
      "offset": [
        2041,
        2398
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "509": {
      "fn": "Controller.setStrategy",
      "offset": [
        2041,
        2398
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x207"
    },
    "512": {
      "fn": "Controller.setStrategy",
      "offset": [
        2041,
        2398
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "513": {
      "fn": "Controller.setStrategy",
      "offset": [
        2041,
        2398
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "515": {
      "fn": "Controller.setStrategy",
      "offset": [
        2041,
        2398
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED3"
    },
    "518": {
      "fn": "Controller.setStrategy",
      "jump": "i",
      "offset": [
        2041,
        2398
      ],
      "op": "JUMP",
      "path": "6"
    },
    "519": {
      "fn": "Controller.setStrategy",
      "offset": [
        2041,
        2398
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "520": {
      "fn": "Controller.setStrategy",
      "offset": [
        2041,
        2398
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5E1"
    },
    "523": {
      "fn": "Controller.setStrategy",
      "jump": "i",
      "offset": [
        2041,
        2398
      ],
      "op": "JUMP",
      "path": "6"
    },
    "524": {
      "offset": [
        728,
        798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "525": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23A"
    },
    "528": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21A"
    },
    "531": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "532": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "534": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED3"
    },
    "537": {
      "fn": "Controller.setStrategy",
      "jump": "i",
      "offset": [
        728,
        798
      ],
      "op": "JUMP",
      "path": "6"
    },
    "538": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "539": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "541": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "543": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "544": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "DUP2",
      "path": "6"
    },
    "545": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "546": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "548": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "549": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "DUP4",
      "path": "6"
    },
    "550": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "551": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "553": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "DUP1",
      "path": "6"
    },
    "554": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "DUP5",
      "path": "6"
    },
    "555": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "556": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "557": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "558": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "559": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "560": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "DUP3",
      "path": "6"
    },
    "561": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "562": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "563": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "564": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "565": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "567": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "AND",
      "path": "6"
    },
    "568": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "DUP2",
      "path": "6"
    },
    "569": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "JUMP",
      "path": "6"
    },
    "570": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "571": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "573": {
      "fn": "Controller.setStrategy",
      "offset": [
        728,
        798
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "574": {
      "op": "SWAP1"
    },
    "575": {
      "op": "ISZERO"
    },
    "576": {
      "op": "ISZERO"
    },
    "577": {
      "op": "DUP2"
    },
    "578": {
      "op": "MSTORE"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "581": {
      "op": "ADD"
    },
    "582": {
      "offset": [
        728,
        798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x183"
    },
    "585": {
      "op": "JUMP"
    },
    "586": {
      "offset": [
        565,
        606
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "587": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16F"
    },
    "590": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258"
    },
    "593": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "594": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "596": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0C"
    },
    "599": {
      "fn": "Controller.setStrategy",
      "jump": "i",
      "offset": [
        565,
        606
      ],
      "op": "JUMP",
      "path": "6"
    },
    "600": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "601": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "603": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "605": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "606": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "608": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "609": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "DUP2",
      "path": "6"
    },
    "610": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "611": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "613": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "614": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "615": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "offset": [
        565,
        606
      ],
      "op": "AND",
      "path": "6"
    },
    "625": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "DUP2",
      "path": "6"
    },
    "626": {
      "fn": "Controller.setStrategy",
      "offset": [
        565,
        606
      ],
      "op": "JUMP",
      "path": "6"
    },
    "627": {
      "fn": "Controller.setGovernance",
      "offset": [
        1119,
        1261
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "628": {
      "fn": "Controller.setGovernance",
      "offset": [
        1119,
        1261
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "631": {
      "fn": "Controller.setGovernance",
      "offset": [
        1119,
        1261
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x281"
    },
    "634": {
      "fn": "Controller.setGovernance",
      "offset": [
        1119,
        1261
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "635": {
      "fn": "Controller.setGovernance",
      "offset": [
        1119,
        1261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "637": {
      "fn": "Controller.setGovernance",
      "offset": [
        1119,
        1261
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0C"
    },
    "640": {
      "fn": "Controller.setGovernance",
      "jump": "i",
      "offset": [
        1119,
        1261
      ],
      "op": "JUMP",
      "path": "6"
    },
    "641": {
      "fn": "Controller.setGovernance",
      "offset": [
        1119,
        1261
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "642": {
      "fn": "Controller.setGovernance",
      "offset": [
        1119,
        1261
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x736"
    },
    "645": {
      "fn": "Controller.setGovernance",
      "jump": "i",
      "offset": [
        1119,
        1261
      ],
      "op": "JUMP",
      "path": "6"
    },
    "646": {
      "fn": "Controller.earn",
      "offset": [
        2402,
        2913
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "647": {
      "fn": "Controller.earn",
      "offset": [
        2402,
        2913
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "650": {
      "fn": "Controller.earn",
      "offset": [
        2402,
        2913
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x294"
    },
    "653": {
      "fn": "Controller.earn",
      "offset": [
        2402,
        2913
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "654": {
      "fn": "Controller.earn",
      "offset": [
        2402,
        2913
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "656": {
      "fn": "Controller.earn",
      "offset": [
        2402,
        2913
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF29"
    },
    "659": {
      "fn": "Controller.earn",
      "jump": "i",
      "offset": [
        2402,
        2913
      ],
      "op": "JUMP",
      "path": "6"
    },
    "660": {
      "fn": "Controller.earn",
      "offset": [
        2402,
        2913
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "661": {
      "fn": "Controller.earn",
      "offset": [
        2402,
        2913
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x782"
    },
    "664": {
      "fn": "Controller.earn",
      "jump": "i",
      "offset": [
        2402,
        2913
      ],
      "op": "JUMP",
      "path": "6"
    },
    "665": {
      "fn": "Controller.setTimelock",
      "offset": [
        1265,
        1395
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "666": {
      "fn": "Controller.setTimelock",
      "offset": [
        1265,
        1395
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "669": {
      "fn": "Controller.setTimelock",
      "offset": [
        1265,
        1395
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A7"
    },
    "672": {
      "fn": "Controller.setTimelock",
      "offset": [
        1265,
        1395
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "673": {
      "fn": "Controller.setTimelock",
      "offset": [
        1265,
        1395
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "675": {
      "fn": "Controller.setTimelock",
      "offset": [
        1265,
        1395
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0C"
    },
    "678": {
      "fn": "Controller.setTimelock",
      "jump": "i",
      "offset": [
        1265,
        1395
      ],
      "op": "JUMP",
      "path": "6"
    },
    "679": {
      "fn": "Controller.setTimelock",
      "offset": [
        1265,
        1395
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "680": {
      "fn": "Controller.setTimelock",
      "offset": [
        1265,
        1395
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x961"
    },
    "683": {
      "fn": "Controller.setTimelock",
      "jump": "i",
      "offset": [
        1265,
        1395
      ],
      "op": "JUMP",
      "path": "6"
    },
    "684": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1602,
        1776
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "685": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1602,
        1776
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "688": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1602,
        1776
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BA"
    },
    "691": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1602,
        1776
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "692": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1602,
        1776
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "694": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1602,
        1776
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED3"
    },
    "697": {
      "fn": "Controller.approveStrategy",
      "jump": "i",
      "offset": [
        1602,
        1776
      ],
      "op": "JUMP",
      "path": "6"
    },
    "698": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1602,
        1776
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "699": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1602,
        1776
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C9"
    },
    "702": {
      "fn": "Controller.approveStrategy",
      "jump": "i",
      "offset": [
        1602,
        1776
      ],
      "op": "JUMP",
      "path": "6"
    },
    "703": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3207,
        3392
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "704": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3207,
        3392
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "707": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3207,
        3392
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CD"
    },
    "710": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3207,
        3392
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "711": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3207,
        3392
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "713": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3207,
        3392
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF29"
    },
    "716": {
      "fn": "Controller.inCaseTokensGetStuck",
      "jump": "i",
      "offset": [
        3207,
        3392
      ],
      "op": "JUMP",
      "path": "6"
    },
    "717": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3207,
        3392
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "718": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3207,
        3392
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA43"
    },
    "721": {
      "fn": "Controller.inCaseTokensGetStuck",
      "jump": "i",
      "offset": [
        3207,
        3392
      ],
      "op": "JUMP",
      "path": "6"
    },
    "722": {
      "offset": [
        537,
        560
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "723": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        537,
        560
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "725": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        537,
        560
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "726": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        537,
        560
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16F"
    },
    "729": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        537,
        560
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "736": {
      "op": "SHL"
    },
    "737": {
      "op": "SUB"
    },
    "738": {
      "offset": [
        537,
        560
      ],
      "op": "AND",
      "path": "6"
    },
    "739": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        537,
        560
      ],
      "op": "DUP2",
      "path": "6"
    },
    "740": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        537,
        560
      ],
      "op": "JUMP",
      "path": "6"
    },
    "741": {
      "offset": [
        659,
        724
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "742": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16F"
    },
    "745": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F3"
    },
    "748": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "749": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "751": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED3"
    },
    "754": {
      "fn": "Controller.inCaseTokensGetStuck",
      "jump": "i",
      "offset": [
        659,
        724
      ],
      "op": "JUMP",
      "path": "6"
    },
    "755": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "756": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "758": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "760": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "761": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "DUP2",
      "path": "6"
    },
    "762": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "763": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "765": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "766": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "DUP4",
      "path": "6"
    },
    "767": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "768": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "770": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "DUP1",
      "path": "6"
    },
    "771": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "DUP5",
      "path": "6"
    },
    "772": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "773": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "774": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "775": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "776": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "777": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "DUP3",
      "path": "6"
    },
    "778": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "779": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "780": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "781": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "788": {
      "op": "SHL"
    },
    "789": {
      "op": "SUB"
    },
    "790": {
      "offset": [
        659,
        724
      ],
      "op": "AND",
      "path": "6"
    },
    "791": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "DUP2",
      "path": "6"
    },
    "792": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        659,
        724
      ],
      "op": "JUMP",
      "path": "6"
    },
    "793": {
      "fn": "Controller.setTreasury",
      "offset": [
        981,
        1115
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "794": {
      "fn": "Controller.setTreasury",
      "offset": [
        981,
        1115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "797": {
      "fn": "Controller.setTreasury",
      "offset": [
        981,
        1115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x327"
    },
    "800": {
      "fn": "Controller.setTreasury",
      "offset": [
        981,
        1115
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "801": {
      "fn": "Controller.setTreasury",
      "offset": [
        981,
        1115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "803": {
      "fn": "Controller.setTreasury",
      "offset": [
        981,
        1115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0C"
    },
    "806": {
      "fn": "Controller.setTreasury",
      "jump": "i",
      "offset": [
        981,
        1115
      ],
      "op": "JUMP",
      "path": "6"
    },
    "807": {
      "fn": "Controller.setTreasury",
      "offset": [
        981,
        1115
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "808": {
      "fn": "Controller.setTreasury",
      "offset": [
        981,
        1115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA85"
    },
    "811": {
      "fn": "Controller.setTreasury",
      "jump": "i",
      "offset": [
        981,
        1115
      ],
      "op": "JUMP",
      "path": "6"
    },
    "812": {
      "fn": "Controller.withdraw",
      "offset": [
        3587,
        3758
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "813": {
      "fn": "Controller.withdraw",
      "offset": [
        3587,
        3758
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "816": {
      "fn": "Controller.withdraw",
      "offset": [
        3587,
        3758
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33A"
    },
    "819": {
      "fn": "Controller.withdraw",
      "offset": [
        3587,
        3758
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "820": {
      "fn": "Controller.withdraw",
      "offset": [
        3587,
        3758
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "822": {
      "fn": "Controller.withdraw",
      "offset": [
        3587,
        3758
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF29"
    },
    "825": {
      "fn": "Controller.withdraw",
      "jump": "i",
      "offset": [
        3587,
        3758
      ],
      "op": "JUMP",
      "path": "6"
    },
    "826": {
      "fn": "Controller.withdraw",
      "offset": [
        3587,
        3758
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "827": {
      "fn": "Controller.withdraw",
      "offset": [
        3587,
        3758
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD1"
    },
    "830": {
      "fn": "Controller.withdraw",
      "jump": "i",
      "offset": [
        3587,
        3758
      ],
      "op": "JUMP",
      "path": "6"
    },
    "831": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3049,
        3203
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "832": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3049,
        3203
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "835": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3049,
        3203
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34D"
    },
    "838": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3049,
        3203
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "839": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3049,
        3203
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "841": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3049,
        3203
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0C"
    },
    "844": {
      "fn": "Controller.withdrawAll",
      "jump": "i",
      "offset": [
        3049,
        3203
      ],
      "op": "JUMP",
      "path": "6"
    },
    "845": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3049,
        3203
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "846": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3049,
        3203
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB64"
    },
    "849": {
      "fn": "Controller.withdrawAll",
      "jump": "i",
      "offset": [
        3049,
        3203
      ],
      "op": "JUMP",
      "path": "6"
    },
    "850": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "851": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3509,
        3519
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x0"
    },
    "853": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3509,
        3519
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "860": {
      "op": "SHL"
    },
    "861": {
      "op": "SUB"
    },
    "862": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3509,
        3519
      ],
      "op": "AND",
      "path": "6"
    },
    "863": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3495,
        3505
      ],
      "op": "CALLER",
      "path": "6"
    },
    "864": {
      "branch": 40,
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3495,
        3519
      ],
      "op": "EQ",
      "path": "6"
    },
    "865": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x385"
    },
    "868": {
      "branch": 40,
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "869": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "871": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "872": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "876": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "878": {
      "op": "SHL"
    },
    "879": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "DUP2",
      "path": "6"
    },
    "880": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "881": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "883": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "ADD",
      "path": "6"
    },
    "884": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "887": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "888": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF55"
    },
    "891": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "jump": "i",
      "offset": [
        3487,
        3535
      ],
      "op": "JUMP",
      "path": "6"
    },
    "892": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "893": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "895": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "896": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "DUP1",
      "path": "6"
    },
    "897": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "898": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "SUB",
      "path": "6"
    },
    "899": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "900": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "901": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3487,
        3535
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "902": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x40"
    },
    "904": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "905": {
      "op": "PUSH4",
      "value": "0x51CFF8D9"
    },
    "910": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "912": {
      "op": "SHL"
    },
    "913": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "DUP2",
      "path": "6"
    },
    "914": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "921": {
      "op": "SHL"
    },
    "922": {
      "op": "SUB"
    },
    "923": {
      "op": "DUP3"
    },
    "924": {
      "op": "DUP2"
    },
    "925": {
      "op": "AND"
    },
    "926": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "928": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "DUP4",
      "path": "6"
    },
    "929": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "ADD",
      "path": "6"
    },
    "930": {
      "op": "MSTORE"
    },
    "931": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3570
      ],
      "op": "DUP4",
      "path": "6"
    },
    "932": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3570
      ],
      "op": "AND",
      "path": "6"
    },
    "933": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3570
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "934": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3570
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x51CFF8D9"
    },
    "939": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3570
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "942": {
      "op": "ADD"
    },
    "943": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "944": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "946": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "948": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "949": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "DUP1",
      "path": "6"
    },
    "950": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "DUP4",
      "path": "6"
    },
    "951": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "SUB",
      "path": "6"
    },
    "952": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "DUP2",
      "path": "6"
    },
    "953": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "955": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "DUP8",
      "path": "6"
    },
    "956": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "DUP1",
      "path": "6"
    },
    "957": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "958": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "959": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "DUP1",
      "path": "6"
    },
    "960": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "961": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C9"
    },
    "964": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "965": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "967": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "DUP1",
      "path": "6"
    },
    "968": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "REVERT",
      "path": "6"
    },
    "969": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "970": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "POP",
      "path": "6"
    },
    "971": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "GAS",
      "path": "6"
    },
    "972": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "CALL",
      "path": "6"
    },
    "973": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "974": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "DUP1",
      "path": "6"
    },
    "975": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "976": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3DD"
    },
    "979": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "980": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "981": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "983": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "DUP1",
      "path": "6"
    },
    "984": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "985": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "986": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "988": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "REVERT",
      "path": "6"
    },
    "989": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "990": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "POP",
      "path": "6"
    },
    "991": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "POP",
      "path": "6"
    },
    "992": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "POP",
      "path": "6"
    },
    "993": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3541,
        3578
      ],
      "op": "POP",
      "path": "6"
    },
    "994": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "POP",
      "path": "6"
    },
    "995": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        3396,
        3583
      ],
      "op": "POP",
      "path": "6"
    },
    "996": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "jump": "o",
      "offset": [
        3396,
        3583
      ],
      "op": "JUMP",
      "path": "6"
    },
    "997": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1780,
        2037
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "998": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1876,
        1886
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x0"
    },
    "1000": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1876,
        1886
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1007": {
      "op": "SHL"
    },
    "1008": {
      "op": "SUB"
    },
    "1009": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1876,
        1886
      ],
      "op": "AND",
      "path": "6"
    },
    "1010": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1862,
        1872
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1011": {
      "branch": 41,
      "fn": "Controller.revokeStrategy",
      "offset": [
        1862,
        1886
      ],
      "op": "EQ",
      "path": "6"
    },
    "1012": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x40F"
    },
    "1015": {
      "branch": 41,
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1016": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1018": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1027": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1028": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1030": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "ADD",
      "path": "6"
    },
    "1031": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "1034": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1035": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF55"
    },
    "1038": {
      "fn": "Controller.revokeStrategy",
      "jump": "i",
      "offset": [
        1854,
        1902
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1039": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1854,
        1902
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "op": "SUB"
    },
    "1048": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 3
    },
    "1049": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1050": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "AND",
      "path": "6"
    },
    "1051": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1053": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1054": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1055": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1056": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1926
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1058": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1060": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1061": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1063": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1064": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1065": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1066": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1067": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1934
      ],
      "op": "AND",
      "path": "6"
    },
    "1068": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1947
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1069": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1947
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1070": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1947
      ],
      "op": "AND",
      "path": "6"
    },
    "1071": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1947
      ],
      "op": "EQ",
      "path": "6"
    },
    "1072": {
      "branch": 42,
      "fn": "Controller.revokeStrategy",
      "offset": [
        1916,
        1947
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1073": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1908,
        1981
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x47C"
    },
    "1076": {
      "branch": 42,
      "fn": "Controller.revokeStrategy",
      "offset": [
        1908,
        1981
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1077": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1908,
        1981
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1079": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1908,
        1981
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1086": {
      "op": "SHL"
    },
    "1087": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1908,
        1981
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1088": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1908,
        1981
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1091": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1908,
        1981
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1093": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1908,
        1981
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1094": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1908,
        1981
      ],
      "op": "ADD",
      "path": "6"
    },
    "1095": {
      "op": "MSTORE"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1100": {
      "op": "DUP3"
    },
    "1101": {
      "op": "ADD"
    },
    "1102": {
      "op": "MSTORE"
    },
    "1103": {
      "op": "PUSH32",
      "value": "0x63616E6E6F74207265766F6B6520616374697665207374726174656779000000"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1138": {
      "op": "DUP3"
    },
    "1139": {
      "op": "ADD"
    },
    "1140": {
      "op": "MSTORE"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1143": {
      "op": "ADD"
    },
    "1144": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1908,
        1981
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "1147": {
      "op": "JUMP"
    },
    "1148": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1908,
        1981
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1155": {
      "op": "SHL"
    },
    "1156": {
      "op": "SUB"
    },
    "1157": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 4
    },
    "1158": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1159": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "AND",
      "path": "6"
    },
    "1160": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2027,
        2032
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1162": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1163": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1164": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1165": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2005
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "1167": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1169": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1170": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1171": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1172": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1174": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1175": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1176": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2013
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1177": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2024
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1178": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2024
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1179": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2024
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1180": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2024
      ],
      "op": "AND",
      "path": "6"
    },
    "1181": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2024
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1182": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2024
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1183": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2024
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1184": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2024
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1185": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2024
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1186": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2024
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1187": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2024
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1188": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2032
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1189": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2032
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1192": {
      "op": "NOT"
    },
    "1193": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2032
      ],
      "op": "AND",
      "path": "6"
    },
    "1194": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2032
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1195": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        1987,
        2032
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1196": {
      "fn": "Controller.revokeStrategy",
      "jump": "o",
      "offset": [
        1780,
        2037
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1197": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1204": {
      "op": "SHL"
    },
    "1205": {
      "op": "SUB"
    },
    "1206": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 5
    },
    "1207": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1208": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "AND",
      "path": "6"
    },
    "1209": {
      "fn": "Controller.balanceOf",
      "offset": [
        2975,
        2982
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1211": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1212": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1213": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1214": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3019
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1216": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1218": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1219": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1220": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1221": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1223": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1224": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1225": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1226": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1227": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1228": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1229": {
      "op": "PUSH4",
      "value": "0x722713F7"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1238": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1239": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1240": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1241": {
      "fn": "Controller.balanceOf",
      "offset": [
        2975,
        2982
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1242": {
      "fn": "Controller.balanceOf",
      "offset": [
        2975,
        2982
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "1243": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "AND",
      "path": "6"
    },
    "1244": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1245": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3038
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x722713F7"
    },
    "1250": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3038
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1251": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1252": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1253": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "ADD",
      "path": "6"
    },
    "1254": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1255": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1256": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1257": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1258": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "SUB",
      "path": "6"
    },
    "1259": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "ADD",
      "path": "6"
    },
    "1260": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1261": {
      "fn": "Controller.balanceOf",
      "offset": [
        3009,
        3027
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1262": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1263": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1264": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1265": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1266": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1267": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FB"
    },
    "1270": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1271": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1273": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1274": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1275": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1276": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "POP",
      "path": "6"
    },
    "1277": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "GAS",
      "path": "6"
    },
    "1278": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1279": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1280": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1281": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1282": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x50F"
    },
    "1285": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1286": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1287": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1289": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1290": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1291": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1292": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1294": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1295": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1296": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "POP",
      "path": "6"
    },
    "1297": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "POP",
      "path": "6"
    },
    "1298": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "POP",
      "path": "6"
    },
    "1299": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "POP",
      "path": "6"
    },
    "1300": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1302": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1303": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1304": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1306": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "NOT",
      "path": "6"
    },
    "1307": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1309": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1310": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "ADD",
      "path": "6"
    },
    "1311": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "AND",
      "path": "6"
    },
    "1312": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1313": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "ADD",
      "path": "6"
    },
    "1314": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1315": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1317": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1318": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "POP",
      "path": "6"
    },
    "1319": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1320": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "ADD",
      "path": "6"
    },
    "1321": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1322": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x533"
    },
    "1325": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1326": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1327": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF7A"
    },
    "1330": {
      "fn": "Controller.balanceOf",
      "jump": "i",
      "offset": [
        2999,
        3040
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1331": {
      "fn": "Controller.balanceOf",
      "offset": [
        2999,
        3040
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1332": {
      "fn": "Controller.balanceOf",
      "offset": [
        2992,
        3040
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1333": {
      "fn": "Controller.balanceOf",
      "offset": [
        2917,
        3045
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1334": {
      "op": "POP"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "fn": "Controller.balanceOf",
      "jump": "o",
      "offset": [
        2917,
        3045
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1337": {
      "fn": "Controller.setVault",
      "offset": [
        1399,
        1598
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1338": {
      "fn": "Controller.setVault",
      "offset": [
        1486,
        1496
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x0"
    },
    "1340": {
      "fn": "Controller.setVault",
      "offset": [
        1486,
        1496
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1347": {
      "op": "SHL"
    },
    "1348": {
      "op": "SUB"
    },
    "1349": {
      "fn": "Controller.setVault",
      "offset": [
        1486,
        1496
      ],
      "op": "AND",
      "path": "6"
    },
    "1350": {
      "fn": "Controller.setVault",
      "offset": [
        1472,
        1482
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1351": {
      "branch": 43,
      "fn": "Controller.setVault",
      "offset": [
        1472,
        1496
      ],
      "op": "EQ",
      "path": "6"
    },
    "1352": {
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x563"
    },
    "1355": {
      "branch": 43,
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1356": {
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1358": {
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1367": {
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1368": {
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1370": {
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "ADD",
      "path": "6"
    },
    "1371": {
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "1374": {
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1375": {
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF55"
    },
    "1378": {
      "fn": "Controller.setVault",
      "jump": "i",
      "offset": [
        1464,
        1512
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1379": {
      "fn": "Controller.setVault",
      "offset": [
        1464,
        1512
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1386": {
      "op": "SHL"
    },
    "1387": {
      "op": "SUB"
    },
    "1388": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 7
    },
    "1389": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1390": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "AND",
      "path": "6"
    },
    "1391": {
      "fn": "Controller.setVault",
      "offset": [
        1552,
        1553
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1393": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1394": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1395": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1396": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1532
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1398": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1400": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1401": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1403": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1404": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1405": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1406": {
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1540
      ],
      "op": "AND",
      "path": "6"
    },
    "1407": {
      "branch": 44,
      "fn": "Controller.setVault",
      "offset": [
        1526,
        1554
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1408": {
      "fn": "Controller.setVault",
      "offset": [
        1518,
        1564
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B3"
    },
    "1411": {
      "branch": 44,
      "fn": "Controller.setVault",
      "offset": [
        1518,
        1564
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1412": {
      "fn": "Controller.setVault",
      "offset": [
        1518,
        1564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1414": {
      "fn": "Controller.setVault",
      "offset": [
        1518,
        1564
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1415": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1421": {
      "op": "SHL"
    },
    "1422": {
      "fn": "Controller.setVault",
      "offset": [
        1518,
        1564
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1423": {
      "fn": "Controller.setVault",
      "offset": [
        1518,
        1564
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1426": {
      "fn": "Controller.setVault",
      "offset": [
        1518,
        1564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1428": {
      "fn": "Controller.setVault",
      "offset": [
        1518,
        1564
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1429": {
      "fn": "Controller.setVault",
      "offset": [
        1518,
        1564
      ],
      "op": "ADD",
      "path": "6"
    },
    "1430": {
      "op": "MSTORE"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1435": {
      "op": "DUP3"
    },
    "1436": {
      "op": "ADD"
    },
    "1437": {
      "op": "MSTORE"
    },
    "1438": {
      "op": "PUSH5",
      "value": "0x1D985D5B1D"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1449": {
      "op": "DUP3"
    },
    "1450": {
      "op": "ADD"
    },
    "1451": {
      "op": "MSTORE"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1454": {
      "op": "ADD"
    },
    "1455": {
      "fn": "Controller.setVault",
      "offset": [
        1518,
        1564
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "1458": {
      "op": "JUMP"
    },
    "1459": {
      "fn": "Controller.setVault",
      "offset": [
        1518,
        1564
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1466": {
      "op": "SHL"
    },
    "1467": {
      "op": "SUB"
    },
    "1468": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 8
    },
    "1469": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1470": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "AND",
      "path": "6"
    },
    "1471": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1473": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1474": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1475": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1476": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1576
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1478": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1480": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1481": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1483": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1484": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1584
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1485": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1593
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1486": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1593
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1493": {
      "op": "SHL"
    },
    "1494": {
      "op": "SUB"
    },
    "1495": {
      "op": "NOT"
    },
    "1496": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1593
      ],
      "op": "AND",
      "path": "6"
    },
    "1497": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1593
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1498": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1593
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1499": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1593
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1500": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1593
      ],
      "op": "AND",
      "path": "6"
    },
    "1501": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1593
      ],
      "op": "OR",
      "path": "6"
    },
    "1502": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1593
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1503": {
      "fn": "Controller.setVault",
      "offset": [
        1570,
        1593
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1504": {
      "fn": "Controller.setVault",
      "jump": "o",
      "offset": [
        1399,
        1598
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1505": {
      "fn": "Controller.setStrategy",
      "offset": [
        2041,
        2398
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1506": {
      "fn": "Controller.setStrategy",
      "offset": [
        2134,
        2144
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x0"
    },
    "1508": {
      "fn": "Controller.setStrategy",
      "offset": [
        2134,
        2144
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "SUB"
    },
    "1517": {
      "fn": "Controller.setStrategy",
      "offset": [
        2134,
        2144
      ],
      "op": "AND",
      "path": "6"
    },
    "1518": {
      "fn": "Controller.setStrategy",
      "offset": [
        2120,
        2130
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1519": {
      "branch": 45,
      "fn": "Controller.setStrategy",
      "offset": [
        2120,
        2144
      ],
      "op": "EQ",
      "path": "6"
    },
    "1520": {
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x60B"
    },
    "1523": {
      "branch": 45,
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1524": {
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1526": {
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1527": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1533": {
      "op": "SHL"
    },
    "1534": {
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1535": {
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1536": {
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1538": {
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "ADD",
      "path": "6"
    },
    "1539": {
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "1542": {
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1543": {
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF55"
    },
    "1546": {
      "fn": "Controller.setStrategy",
      "jump": "i",
      "offset": [
        2112,
        2160
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1547": {
      "fn": "Controller.setStrategy",
      "offset": [
        2112,
        2160
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "op": "SUB"
    },
    "1556": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 10
    },
    "1557": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1558": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "AND",
      "path": "6"
    },
    "1559": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1561": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1562": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1563": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1564": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2192
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "1566": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1568": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1569": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1570": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1571": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1573": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1574": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1575": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2200
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1576": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1577": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1578": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "AND",
      "path": "6"
    },
    "1579": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1580": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1581": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1582": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1583": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1584": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1585": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1586": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1588": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "AND",
      "path": "6"
    },
    "1589": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2219
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1590": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2219
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1591": {
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2211
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1593": {
      "branch": 46,
      "fn": "Controller.setStrategy",
      "offset": [
        2174,
        2219
      ],
      "op": "EQ",
      "path": "6"
    },
    "1594": {
      "fn": "Controller.setStrategy",
      "offset": [
        2166,
        2233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x671"
    },
    "1597": {
      "branch": 46,
      "fn": "Controller.setStrategy",
      "offset": [
        2166,
        2233
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1598": {
      "fn": "Controller.setStrategy",
      "offset": [
        2166,
        2233
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1600": {
      "fn": "Controller.setStrategy",
      "offset": [
        2166,
        2233
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1607": {
      "op": "SHL"
    },
    "1608": {
      "fn": "Controller.setStrategy",
      "offset": [
        2166,
        2233
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1609": {
      "fn": "Controller.setStrategy",
      "offset": [
        2166,
        2233
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1612": {
      "fn": "Controller.setStrategy",
      "offset": [
        2166,
        2233
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1614": {
      "fn": "Controller.setStrategy",
      "offset": [
        2166,
        2233
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1615": {
      "fn": "Controller.setStrategy",
      "offset": [
        2166,
        2233
      ],
      "op": "ADD",
      "path": "6"
    },
    "1616": {
      "op": "MSTORE"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1621": {
      "op": "DUP3"
    },
    "1622": {
      "op": "ADD"
    },
    "1623": {
      "op": "MSTORE"
    },
    "1624": {
      "op": "PUSH9",
      "value": "0x8585C1C1C9BDD9959"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1636": {
      "op": "SHL"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1639": {
      "op": "DUP3"
    },
    "1640": {
      "op": "ADD"
    },
    "1641": {
      "op": "MSTORE"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1644": {
      "op": "ADD"
    },
    "1645": {
      "fn": "Controller.setStrategy",
      "offset": [
        2166,
        2233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "1648": {
      "op": "JUMP"
    },
    "1649": {
      "fn": "Controller.setStrategy",
      "offset": [
        2166,
        2233
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1656": {
      "op": "SHL"
    },
    "1657": {
      "op": "SUB"
    },
    "1658": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1659": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1660": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "AND",
      "path": "6"
    },
    "1661": {
      "fn": "Controller.setStrategy",
      "offset": [
        2239,
        2255
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1663": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1664": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1665": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1666": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2268
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1668": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1670": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1671": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1673": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1674": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1675": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1676": {
      "fn": "Controller.setStrategy",
      "offset": [
        2258,
        2276
      ],
      "op": "AND",
      "path": "6"
    },
    "1677": {
      "fn": "Controller.setStrategy",
      "offset": [
        2286,
        2308
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1678": {
      "branch": 47,
      "fn": "Controller.setStrategy",
      "offset": [
        2286,
        2308
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1679": {
      "fn": "Controller.setStrategy",
      "offset": [
        2282,
        2358
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x707"
    },
    "1682": {
      "branch": 47,
      "fn": "Controller.setStrategy",
      "offset": [
        2282,
        2358
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1683": {
      "fn": "Controller.setStrategy",
      "offset": [
        2328,
        2336
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 11
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1690": {
      "op": "SHL"
    },
    "1691": {
      "op": "SUB"
    },
    "1692": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2349
      ],
      "op": "AND",
      "path": "6"
    },
    "1693": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2349
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x853828B6"
    },
    "1698": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1700": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1701": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1702": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1707": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "AND",
      "path": "6"
    },
    "1708": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1710": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "SHL",
      "path": "6"
    },
    "1711": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1712": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1713": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1715": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "ADD",
      "path": "6"
    },
    "1716": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1718": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1720": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1721": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1722": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1723": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "SUB",
      "path": "6"
    },
    "1724": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1725": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1727": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1728": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1729": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1730": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1731": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1732": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1733": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6CD"
    },
    "1736": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1737": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1739": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1740": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1741": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1742": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "POP",
      "path": "6"
    },
    "1743": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "GAS",
      "path": "6"
    },
    "1744": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "CALL",
      "path": "6"
    },
    "1745": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1746": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1747": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1748": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6E1"
    },
    "1751": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1752": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1753": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1755": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1756": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1757": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1758": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1760": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1761": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1762": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "POP",
      "path": "6"
    },
    "1763": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "POP",
      "path": "6"
    },
    "1764": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "POP",
      "path": "6"
    },
    "1765": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "POP",
      "path": "6"
    },
    "1766": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1768": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1769": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1770": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1772": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "NOT",
      "path": "6"
    },
    "1773": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1775": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1776": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "ADD",
      "path": "6"
    },
    "1777": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "AND",
      "path": "6"
    },
    "1778": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1779": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "ADD",
      "path": "6"
    },
    "1780": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1781": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1783": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1784": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "POP",
      "path": "6"
    },
    "1785": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1786": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "ADD",
      "path": "6"
    },
    "1787": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1788": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x705"
    },
    "1791": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1792": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1793": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF7A"
    },
    "1796": {
      "fn": "Controller.setStrategy",
      "jump": "i",
      "offset": [
        2318,
        2351
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1797": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1798": {
      "fn": "Controller.setStrategy",
      "offset": [
        2318,
        2351
      ],
      "op": "POP",
      "path": "6"
    },
    "1799": {
      "fn": "Controller.setStrategy",
      "offset": [
        2282,
        2358
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1800": {
      "op": "POP"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 12
    },
    "1810": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1811": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "AND",
      "path": "6"
    },
    "1812": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1814": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1815": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1816": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1817": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2373
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1819": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1821": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1822": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1824": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1825": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2381
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1826": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2393
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1827": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2393
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1834": {
      "op": "SHL"
    },
    "1835": {
      "op": "SUB"
    },
    "1836": {
      "op": "NOT"
    },
    "1837": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2393
      ],
      "op": "AND",
      "path": "6"
    },
    "1838": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2393
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1839": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2393
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1840": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2393
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1841": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2393
      ],
      "op": "AND",
      "path": "6"
    },
    "1842": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2393
      ],
      "op": "OR",
      "path": "6"
    },
    "1843": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2393
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1844": {
      "fn": "Controller.setStrategy",
      "offset": [
        2363,
        2393
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1845": {
      "fn": "Controller.setStrategy",
      "jump": "o",
      "offset": [
        2041,
        2398
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1846": {
      "fn": "Controller.setGovernance",
      "offset": [
        1119,
        1261
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1847": {
      "fn": "Controller.setGovernance",
      "offset": [
        1200,
        1210
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 13,
      "value": "0x0"
    },
    "1849": {
      "fn": "Controller.setGovernance",
      "offset": [
        1200,
        1210
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1856": {
      "op": "SHL"
    },
    "1857": {
      "op": "SUB"
    },
    "1858": {
      "fn": "Controller.setGovernance",
      "offset": [
        1200,
        1210
      ],
      "op": "AND",
      "path": "6"
    },
    "1859": {
      "fn": "Controller.setGovernance",
      "offset": [
        1186,
        1196
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1860": {
      "branch": 48,
      "fn": "Controller.setGovernance",
      "offset": [
        1186,
        1210
      ],
      "op": "EQ",
      "path": "6"
    },
    "1861": {
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x760"
    },
    "1864": {
      "branch": 48,
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1865": {
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1867": {
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1874": {
      "op": "SHL"
    },
    "1875": {
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1876": {
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1877": {
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1879": {
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "ADD",
      "path": "6"
    },
    "1880": {
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "1883": {
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1884": {
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF55"
    },
    "1887": {
      "fn": "Controller.setGovernance",
      "jump": "i",
      "offset": [
        1178,
        1226
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1888": {
      "fn": "Controller.setGovernance",
      "offset": [
        1178,
        1226
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1889": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1242
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 14,
      "value": "0x0"
    },
    "1891": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1892": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1899": {
      "op": "SHL"
    },
    "1900": {
      "op": "SUB"
    },
    "1901": {
      "op": "NOT"
    },
    "1902": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "AND",
      "path": "6"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1909": {
      "op": "SHL"
    },
    "1910": {
      "op": "SUB"
    },
    "1911": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1912": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1913": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1914": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "AND",
      "path": "6"
    },
    "1915": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1916": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1917": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1918": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "OR",
      "path": "6"
    },
    "1919": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1920": {
      "fn": "Controller.setGovernance",
      "offset": [
        1232,
        1256
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1921": {
      "fn": "Controller.setGovernance",
      "jump": "o",
      "offset": [
        1119,
        1261
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1922": {
      "fn": "Controller.earn",
      "offset": [
        2402,
        2913
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1929": {
      "op": "SHL"
    },
    "1930": {
      "op": "SUB"
    },
    "1931": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1932": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1933": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "AND",
      "path": "6"
    },
    "1934": {
      "fn": "Controller.earn",
      "offset": [
        2464,
        2481
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1936": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1937": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1938": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1939": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1941": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1943": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1944": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1945": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1946": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1948": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1949": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1950": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1951": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1952": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1953": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1954": {
      "op": "PUSH4",
      "value": "0x1F1FCD51"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1961": {
      "op": "SHL"
    },
    "1962": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1963": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1964": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1965": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1966": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "1967": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "AND",
      "path": "6"
    },
    "1968": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1969": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1970": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1971": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2549
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1F1FCD51"
    },
    "1976": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2549
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1977": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1978": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1979": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "ADD",
      "path": "6"
    },
    "1980": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1981": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1982": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1983": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1984": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1985": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1986": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1987": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "SUB",
      "path": "6"
    },
    "1988": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "ADD",
      "path": "6"
    },
    "1989": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1990": {
      "fn": "Controller.earn",
      "offset": [
        2484,
        2502
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1991": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1992": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1993": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1994": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1995": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1996": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7D4"
    },
    "1999": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2000": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2002": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2003": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2004": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2005": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "POP",
      "path": "6"
    },
    "2006": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "GAS",
      "path": "6"
    },
    "2007": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2008": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2009": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2010": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2011": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E8"
    },
    "2014": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2015": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2016": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2018": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2019": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2020": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2021": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2023": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2024": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2025": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "POP",
      "path": "6"
    },
    "2026": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "POP",
      "path": "6"
    },
    "2027": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "POP",
      "path": "6"
    },
    "2028": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "POP",
      "path": "6"
    },
    "2029": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2031": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2032": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2033": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2035": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "NOT",
      "path": "6"
    },
    "2036": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2038": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2039": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "ADD",
      "path": "6"
    },
    "2040": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "AND",
      "path": "6"
    },
    "2041": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2042": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "ADD",
      "path": "6"
    },
    "2043": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2044": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2046": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2047": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "POP",
      "path": "6"
    },
    "2048": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2049": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "ADD",
      "path": "6"
    },
    "2050": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2051": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x80C"
    },
    "2054": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2055": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2056": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF93"
    },
    "2059": {
      "fn": "Controller.earn",
      "jump": "i",
      "offset": [
        2524,
        2551
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2060": {
      "fn": "Controller.earn",
      "offset": [
        2524,
        2551
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2061": {
      "fn": "Controller.earn",
      "offset": [
        2508,
        2551
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2062": {
      "fn": "Controller.earn",
      "offset": [
        2508,
        2551
      ],
      "op": "POP",
      "path": "6"
    },
    "2063": {
      "fn": "Controller.earn",
      "offset": [
        2570,
        2576
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2070": {
      "op": "SHL"
    },
    "2071": {
      "op": "SUB"
    },
    "2072": {
      "fn": "Controller.earn",
      "offset": [
        2561,
        2576
      ],
      "op": "AND",
      "path": "6"
    },
    "2073": {
      "fn": "Controller.earn",
      "offset": [
        2561,
        2566
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2080": {
      "op": "SHL"
    },
    "2081": {
      "op": "SUB"
    },
    "2082": {
      "fn": "Controller.earn",
      "offset": [
        2561,
        2576
      ],
      "op": "AND",
      "path": "6"
    },
    "2083": {
      "branch": 49,
      "fn": "Controller.earn",
      "offset": [
        2561,
        2576
      ],
      "op": "EQ",
      "path": "6"
    },
    "2084": {
      "fn": "Controller.earn",
      "offset": [
        2557,
        2873
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "2087": {
      "branch": 49,
      "fn": "Controller.earn",
      "offset": [
        2557,
        2873
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2094": {
      "op": "SHL"
    },
    "2095": {
      "op": "SUB"
    },
    "2096": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2097": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2098": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "AND",
      "path": "6"
    },
    "2099": {
      "fn": "Controller.earn",
      "offset": [
        2586,
        2603
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2101": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2102": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2103": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2104": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "2106": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2108": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2109": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2110": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2111": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2113": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2114": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2115": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2624
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2116": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2117": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2118": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "AND",
      "path": "6"
    },
    "2119": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2120": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2121": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2122": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2123": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2124": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2125": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2126": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2127": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2128": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2129": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "AND",
      "path": "6"
    },
    "2130": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2131": {
      "fn": "Controller.earn",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 15,
      "value": "0x85D"
    },
    "2134": {
      "fn": "Controller.earn",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2135": {
      "fn": "Controller.earn",
      "offset": [
        2606,
        2631
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2136": {
      "fn": "Controller.earn",
      "offset": [
        2678,
        2685
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2137": {
      "fn": "Controller.earn",
      "offset": [
        2639,
        2666
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC18"
    },
    "2140": {
      "fn": "Controller.earn",
      "jump": "i",
      "offset": [
        2639,
        2686
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2141": {
      "fn": "Controller.earn",
      "offset": [
        2639,
        2686
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2142": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 16,
      "value": "0x40"
    },
    "2144": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2145": {
      "op": "PUSH4",
      "value": "0xDEF2489B"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2152": {
      "op": "SHL"
    },
    "2153": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2154": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2161": {
      "op": "SHL"
    },
    "2162": {
      "op": "SUB"
    },
    "2163": {
      "op": "DUP5"
    },
    "2164": {
      "op": "DUP2"
    },
    "2165": {
      "op": "AND"
    },
    "2166": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2168": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2169": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "ADD",
      "path": "6"
    },
    "2170": {
      "op": "MSTORE"
    },
    "2171": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2733
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2172": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2733
      ],
      "op": "AND",
      "path": "6"
    },
    "2173": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2174": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2733
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDEF2489B"
    },
    "2179": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2182": {
      "op": "ADD"
    },
    "2183": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2185": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2187": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2188": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2189": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2190": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "SUB",
      "path": "6"
    },
    "2191": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2192": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2194": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2195": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2196": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2197": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2198": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2199": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2200": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8A0"
    },
    "2203": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2204": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2206": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2207": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2208": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2209": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "POP",
      "path": "6"
    },
    "2210": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "GAS",
      "path": "6"
    },
    "2211": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "CALL",
      "path": "6"
    },
    "2212": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2213": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2214": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2215": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8B4"
    },
    "2218": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2219": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2220": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2222": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2223": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2224": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2225": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2227": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2228": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2229": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "POP",
      "path": "6"
    },
    "2230": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "POP",
      "path": "6"
    },
    "2231": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "POP",
      "path": "6"
    },
    "2232": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "POP",
      "path": "6"
    },
    "2233": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2235": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2236": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2237": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2239": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "NOT",
      "path": "6"
    },
    "2240": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2242": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2243": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "ADD",
      "path": "6"
    },
    "2244": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "AND",
      "path": "6"
    },
    "2245": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2246": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "ADD",
      "path": "6"
    },
    "2247": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2248": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2250": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2251": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "POP",
      "path": "6"
    },
    "2252": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2253": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "ADD",
      "path": "6"
    },
    "2254": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2255": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8D8"
    },
    "2258": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2259": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2260": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF7A"
    },
    "2263": {
      "fn": "Controller.earn",
      "jump": "i",
      "offset": [
        2704,
        2744
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2264": {
      "fn": "Controller.earn",
      "offset": [
        2704,
        2744
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2265": {
      "fn": "Controller.earn",
      "offset": [
        2694,
        2744
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2266": {
      "op": "POP"
    },
    "2267": {
      "fn": "Controller.earn",
      "offset": [
        2752,
        2798
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 17,
      "value": "0x8EE"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2276": {
      "op": "SHL"
    },
    "2277": {
      "op": "SUB"
    },
    "2278": {
      "fn": "Controller.earn",
      "offset": [
        2752,
        2778
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2279": {
      "fn": "Controller.earn",
      "offset": [
        2752,
        2778
      ],
      "op": "AND",
      "path": "6"
    },
    "2280": {
      "fn": "Controller.earn",
      "offset": [
        2779,
        2788
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2281": {
      "fn": "Controller.earn",
      "offset": [
        2694,
        2744
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2282": {
      "fn": "Controller.earn",
      "offset": [
        2752,
        2778
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC18"
    },
    "2285": {
      "fn": "Controller.earn",
      "jump": "i",
      "offset": [
        2752,
        2798
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2286": {
      "fn": "Controller.earn",
      "offset": [
        2752,
        2798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2287": {
      "fn": "Controller.earn",
      "offset": [
        2578,
        2805
      ],
      "op": "POP",
      "path": "6"
    },
    "2288": {
      "fn": "Controller.earn",
      "offset": [
        2557,
        2873
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x908"
    },
    "2291": {
      "fn": "Controller.earn",
      "offset": [
        2557,
        2873
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2292": {
      "fn": "Controller.earn",
      "offset": [
        2557,
        2873
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2293": {
      "fn": "Controller.earn",
      "offset": [
        2819,
        2866
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 18,
      "value": "0x908"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2302": {
      "op": "SHL"
    },
    "2303": {
      "op": "SUB"
    },
    "2304": {
      "fn": "Controller.earn",
      "offset": [
        2819,
        2846
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2305": {
      "fn": "Controller.earn",
      "offset": [
        2819,
        2846
      ],
      "op": "AND",
      "path": "6"
    },
    "2306": {
      "fn": "Controller.earn",
      "offset": [
        2847,
        2856
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2307": {
      "fn": "Controller.earn",
      "offset": [
        2858,
        2865
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2308": {
      "fn": "Controller.earn",
      "offset": [
        2819,
        2846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC18"
    },
    "2311": {
      "fn": "Controller.earn",
      "jump": "i",
      "offset": [
        2819,
        2866
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2312": {
      "fn": "Controller.earn",
      "offset": [
        2819,
        2866
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2313": {
      "fn": "Controller.earn",
      "offset": [
        2888,
        2897
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 19
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "op": "SUB"
    },
    "2322": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2906
      ],
      "op": "AND",
      "path": "6"
    },
    "2323": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2906
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD0E30DB0"
    },
    "2328": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2330": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2331": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2332": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2337": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "AND",
      "path": "6"
    },
    "2338": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2340": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "SHL",
      "path": "6"
    },
    "2341": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2342": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2343": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2345": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "ADD",
      "path": "6"
    },
    "2346": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2348": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2350": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2351": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2352": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2353": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "SUB",
      "path": "6"
    },
    "2354": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2355": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2357": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2358": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2359": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2360": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2361": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2362": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2363": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x943"
    },
    "2366": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2367": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2369": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2370": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2371": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2372": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "POP",
      "path": "6"
    },
    "2373": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "GAS",
      "path": "6"
    },
    "2374": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "CALL",
      "path": "6"
    },
    "2375": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2376": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2377": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2378": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x957"
    },
    "2381": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2382": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2383": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2385": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2386": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2387": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2388": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2390": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2391": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2392": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "POP",
      "path": "6"
    },
    "2393": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "POP",
      "path": "6"
    },
    "2394": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "POP",
      "path": "6"
    },
    "2395": {
      "fn": "Controller.earn",
      "offset": [
        2878,
        2908
      ],
      "op": "POP",
      "path": "6"
    },
    "2396": {
      "fn": "Controller.earn",
      "offset": [
        2458,
        2913
      ],
      "op": "POP",
      "path": "6"
    },
    "2397": {
      "fn": "Controller.earn",
      "offset": [
        2458,
        2913
      ],
      "op": "POP",
      "path": "6"
    },
    "2398": {
      "fn": "Controller.earn",
      "offset": [
        2402,
        2913
      ],
      "op": "POP",
      "path": "6"
    },
    "2399": {
      "fn": "Controller.earn",
      "offset": [
        2402,
        2913
      ],
      "op": "POP",
      "path": "6"
    },
    "2400": {
      "fn": "Controller.earn",
      "jump": "o",
      "offset": [
        2402,
        2913
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2401": {
      "fn": "Controller.setTimelock",
      "offset": [
        1265,
        1395
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2402": {
      "fn": "Controller.setTimelock",
      "offset": [
        1342,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 20,
      "value": "0x2"
    },
    "2404": {
      "fn": "Controller.setTimelock",
      "offset": [
        1342,
        1350
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2411": {
      "op": "SHL"
    },
    "2412": {
      "op": "SUB"
    },
    "2413": {
      "fn": "Controller.setTimelock",
      "offset": [
        1342,
        1350
      ],
      "op": "AND",
      "path": "6"
    },
    "2414": {
      "fn": "Controller.setTimelock",
      "offset": [
        1328,
        1338
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2415": {
      "branch": 50,
      "fn": "Controller.setTimelock",
      "offset": [
        1328,
        1350
      ],
      "op": "EQ",
      "path": "6"
    },
    "2416": {
      "fn": "Controller.setTimelock",
      "offset": [
        1320,
        1364
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A7"
    },
    "2419": {
      "branch": 50,
      "fn": "Controller.setTimelock",
      "offset": [
        1320,
        1364
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2420": {
      "fn": "Controller.setTimelock",
      "offset": [
        1320,
        1364
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2422": {
      "fn": "Controller.setTimelock",
      "offset": [
        1320,
        1364
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2423": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2429": {
      "op": "SHL"
    },
    "2430": {
      "fn": "Controller.setTimelock",
      "offset": [
        1320,
        1364
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2431": {
      "fn": "Controller.setTimelock",
      "offset": [
        1320,
        1364
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2434": {
      "fn": "Controller.setTimelock",
      "offset": [
        1320,
        1364
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2436": {
      "fn": "Controller.setTimelock",
      "offset": [
        1320,
        1364
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2437": {
      "fn": "Controller.setTimelock",
      "offset": [
        1320,
        1364
      ],
      "op": "ADD",
      "path": "6"
    },
    "2438": {
      "op": "MSTORE"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "op": "MSTORE"
    },
    "2446": {
      "op": "PUSH9",
      "value": "0x2174696D656C6F636B"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2461": {
      "op": "DUP3"
    },
    "2462": {
      "op": "ADD"
    },
    "2463": {
      "op": "MSTORE"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2466": {
      "op": "ADD"
    },
    "2467": {
      "fn": "Controller.setTimelock",
      "offset": [
        1320,
        1364
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "2470": {
      "op": "JUMP"
    },
    "2471": {
      "fn": "Controller.setTimelock",
      "offset": [
        1320,
        1364
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2472": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1378
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 21,
      "value": "0x2"
    },
    "2474": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2475": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2482": {
      "op": "SHL"
    },
    "2483": {
      "op": "SUB"
    },
    "2484": {
      "op": "NOT"
    },
    "2485": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "AND",
      "path": "6"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2492": {
      "op": "SHL"
    },
    "2493": {
      "op": "SUB"
    },
    "2494": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2495": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2496": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2497": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "AND",
      "path": "6"
    },
    "2498": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2499": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2500": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2501": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "OR",
      "path": "6"
    },
    "2502": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2503": {
      "fn": "Controller.setTimelock",
      "offset": [
        1370,
        1390
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2504": {
      "fn": "Controller.setTimelock",
      "jump": "o",
      "offset": [
        1265,
        1395
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2505": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1602,
        1776
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2506": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1699,
        1707
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 22,
      "value": "0x2"
    },
    "2508": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1699,
        1707
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2515": {
      "op": "SHL"
    },
    "2516": {
      "op": "SUB"
    },
    "2517": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1699,
        1707
      ],
      "op": "AND",
      "path": "6"
    },
    "2518": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1685,
        1695
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2519": {
      "branch": 51,
      "fn": "Controller.approveStrategy",
      "offset": [
        1685,
        1707
      ],
      "op": "EQ",
      "path": "6"
    },
    "2520": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1677,
        1721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA0F"
    },
    "2523": {
      "branch": 51,
      "fn": "Controller.approveStrategy",
      "offset": [
        1677,
        1721
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2524": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1677,
        1721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2526": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1677,
        1721
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2527": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2533": {
      "op": "SHL"
    },
    "2534": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1677,
        1721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2535": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1677,
        1721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2538": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1677,
        1721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2540": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1677,
        1721
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2541": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1677,
        1721
      ],
      "op": "ADD",
      "path": "6"
    },
    "2542": {
      "op": "MSTORE"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2547": {
      "op": "DUP3"
    },
    "2548": {
      "op": "ADD"
    },
    "2549": {
      "op": "MSTORE"
    },
    "2550": {
      "op": "PUSH9",
      "value": "0x2174696D656C6F636B"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2562": {
      "op": "SHL"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2565": {
      "op": "DUP3"
    },
    "2566": {
      "op": "ADD"
    },
    "2567": {
      "op": "MSTORE"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2570": {
      "op": "ADD"
    },
    "2571": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1677,
        1721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "2574": {
      "op": "JUMP"
    },
    "2575": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1677,
        1721
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2582": {
      "op": "SHL"
    },
    "2583": {
      "op": "SUB"
    },
    "2584": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 23
    },
    "2585": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2586": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "AND",
      "path": "6"
    },
    "2587": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2589": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2590": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2591": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2592": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1745
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "2594": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2596": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2597": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2598": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2599": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2601": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2602": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2603": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1753
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2604": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1764
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2605": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1764
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2606": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1764
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2607": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1764
      ],
      "op": "AND",
      "path": "6"
    },
    "2608": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1764
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2609": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1764
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2610": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1764
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2611": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1764
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2612": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1764
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2613": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1764
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2614": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1764
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2615": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1771
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2616": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1771
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2619": {
      "op": "NOT"
    },
    "2620": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1771
      ],
      "op": "AND",
      "path": "6"
    },
    "2621": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1767,
        1771
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2623": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1771
      ],
      "op": "OR",
      "path": "6"
    },
    "2624": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1771
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2625": {
      "fn": "Controller.approveStrategy",
      "offset": [
        1727,
        1771
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2626": {
      "fn": "Controller.approveStrategy",
      "jump": "o",
      "offset": [
        1602,
        1776
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2627": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3207,
        3392
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2628": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3307,
        3317
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 24,
      "value": "0x0"
    },
    "2630": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3307,
        3317
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2637": {
      "op": "SHL"
    },
    "2638": {
      "op": "SUB"
    },
    "2639": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3307,
        3317
      ],
      "op": "AND",
      "path": "6"
    },
    "2640": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3293,
        3303
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2641": {
      "branch": 52,
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3293,
        3317
      ],
      "op": "EQ",
      "path": "6"
    },
    "2642": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA6D"
    },
    "2645": {
      "branch": 52,
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2646": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2648": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2655": {
      "op": "SHL"
    },
    "2656": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2657": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2658": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2660": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "ADD",
      "path": "6"
    },
    "2661": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "2664": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2665": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF55"
    },
    "2668": {
      "fn": "Controller.inCaseTokensGetStuck",
      "jump": "i",
      "offset": [
        3285,
        3333
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2669": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3285,
        3333
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2670": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3339,
        3387
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 25,
      "value": "0xA81"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2679": {
      "op": "SHL"
    },
    "2680": {
      "op": "SUB"
    },
    "2681": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3339,
        3366
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2682": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3339,
        3366
      ],
      "op": "AND",
      "path": "6"
    },
    "2683": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3367,
        3377
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2684": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3379,
        3386
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2685": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3339,
        3366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC18"
    },
    "2688": {
      "fn": "Controller.inCaseTokensGetStuck",
      "jump": "i",
      "offset": [
        3339,
        3387
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2689": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3339,
        3387
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2690": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3207,
        3392
      ],
      "op": "POP",
      "path": "6"
    },
    "2691": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        3207,
        3392
      ],
      "op": "POP",
      "path": "6"
    },
    "2692": {
      "fn": "Controller.inCaseTokensGetStuck",
      "jump": "o",
      "offset": [
        3207,
        3392
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2693": {
      "fn": "Controller.setTreasury",
      "offset": [
        981,
        1115
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2694": {
      "fn": "Controller.setTreasury",
      "offset": [
        1058,
        1068
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 26,
      "value": "0x0"
    },
    "2696": {
      "fn": "Controller.setTreasury",
      "offset": [
        1058,
        1068
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2703": {
      "op": "SHL"
    },
    "2704": {
      "op": "SUB"
    },
    "2705": {
      "fn": "Controller.setTreasury",
      "offset": [
        1058,
        1068
      ],
      "op": "AND",
      "path": "6"
    },
    "2706": {
      "fn": "Controller.setTreasury",
      "offset": [
        1044,
        1054
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2707": {
      "branch": 53,
      "fn": "Controller.setTreasury",
      "offset": [
        1044,
        1068
      ],
      "op": "EQ",
      "path": "6"
    },
    "2708": {
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAAF"
    },
    "2711": {
      "branch": 53,
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2712": {
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2714": {
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2721": {
      "op": "SHL"
    },
    "2722": {
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2723": {
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2724": {
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2726": {
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "ADD",
      "path": "6"
    },
    "2727": {
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "2730": {
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2731": {
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF55"
    },
    "2734": {
      "fn": "Controller.setTreasury",
      "jump": "i",
      "offset": [
        1036,
        1084
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2735": {
      "fn": "Controller.setTreasury",
      "offset": [
        1036,
        1084
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2736": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1098
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 27,
      "value": "0x1"
    },
    "2738": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2739": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2746": {
      "op": "SHL"
    },
    "2747": {
      "op": "SUB"
    },
    "2748": {
      "op": "NOT"
    },
    "2749": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "AND",
      "path": "6"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2756": {
      "op": "SHL"
    },
    "2757": {
      "op": "SUB"
    },
    "2758": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2759": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2760": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2761": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "AND",
      "path": "6"
    },
    "2762": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2763": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2764": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2765": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "OR",
      "path": "6"
    },
    "2766": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2767": {
      "fn": "Controller.setTreasury",
      "offset": [
        1090,
        1110
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2768": {
      "fn": "Controller.setTreasury",
      "jump": "o",
      "offset": [
        981,
        1115
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2769": {
      "fn": "Controller.withdraw",
      "offset": [
        3587,
        3758
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2776": {
      "op": "SHL"
    },
    "2777": {
      "op": "SUB"
    },
    "2778": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 28
    },
    "2779": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2780": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "AND",
      "path": "6"
    },
    "2781": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2783": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2784": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2785": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2786": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3681
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2788": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2790": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2791": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2793": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2794": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2795": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2796": {
      "fn": "Controller.withdraw",
      "offset": [
        3675,
        3689
      ],
      "op": "AND",
      "path": "6"
    },
    "2797": {
      "fn": "Controller.withdraw",
      "offset": [
        3661,
        3671
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2798": {
      "branch": 54,
      "fn": "Controller.withdraw",
      "offset": [
        3661,
        3689
      ],
      "op": "EQ",
      "path": "6"
    },
    "2799": {
      "fn": "Controller.withdraw",
      "offset": [
        3653,
        3700
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB23"
    },
    "2802": {
      "branch": 54,
      "fn": "Controller.withdraw",
      "offset": [
        3653,
        3700
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2803": {
      "fn": "Controller.withdraw",
      "offset": [
        3653,
        3700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2805": {
      "fn": "Controller.withdraw",
      "offset": [
        3653,
        3700
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2806": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2812": {
      "op": "SHL"
    },
    "2813": {
      "fn": "Controller.withdraw",
      "offset": [
        3653,
        3700
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2814": {
      "fn": "Controller.withdraw",
      "offset": [
        3653,
        3700
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2817": {
      "fn": "Controller.withdraw",
      "offset": [
        3653,
        3700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2819": {
      "fn": "Controller.withdraw",
      "offset": [
        3653,
        3700
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2820": {
      "fn": "Controller.withdraw",
      "offset": [
        3653,
        3700
      ],
      "op": "ADD",
      "path": "6"
    },
    "2821": {
      "op": "MSTORE"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2826": {
      "op": "DUP3"
    },
    "2827": {
      "op": "ADD"
    },
    "2828": {
      "op": "MSTORE"
    },
    "2829": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2838": {
      "op": "SHL"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2841": {
      "op": "DUP3"
    },
    "2842": {
      "op": "ADD"
    },
    "2843": {
      "op": "MSTORE"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2846": {
      "op": "ADD"
    },
    "2847": {
      "fn": "Controller.withdraw",
      "offset": [
        3653,
        3700
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "2850": {
      "op": "JUMP"
    },
    "2851": {
      "fn": "Controller.withdraw",
      "offset": [
        3653,
        3700
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2858": {
      "op": "SHL"
    },
    "2859": {
      "op": "SUB"
    },
    "2860": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 29
    },
    "2861": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2862": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "AND",
      "path": "6"
    },
    "2863": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2865": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2866": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2867": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2868": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2870": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2872": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2873": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2874": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2875": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2877": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2878": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2879": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2880": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2881": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2882": {
      "fn": "Controller.withdraw",
      "offset": [
        3706,
        3753
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2883": {
      "fn": "Controller.withdraw",
      "offset": [
        3706,
        3753
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2884": {
      "op": "PUSH4",
      "value": "0x2E1A7D4D"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2891": {
      "op": "SHL"
    },
    "2892": {
      "fn": "Controller.withdraw",
      "offset": [
        3706,
        3753
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2893": {
      "fn": "Controller.withdraw",
      "offset": [
        3706,
        3753
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2894": {
      "fn": "Controller.withdraw",
      "offset": [
        3706,
        3753
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2895": {
      "fn": "Controller.withdraw",
      "offset": [
        3706,
        3753
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2896": {
      "fn": "Controller.withdraw",
      "offset": [
        3706,
        3753
      ],
      "op": "ADD",
      "path": "6"
    },
    "2897": {
      "op": "DUP5"
    },
    "2898": {
      "op": "SWAP1"
    },
    "2899": {
      "op": "MSTORE"
    },
    "2900": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2901": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "AND",
      "path": "6"
    },
    "2902": {
      "fn": "Controller.withdraw",
      "offset": [
        3716,
        3734
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2903": {
      "fn": "Controller.withdraw",
      "offset": [
        3706,
        3744
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2E1A7D4D"
    },
    "2908": {
      "fn": "Controller.withdraw",
      "offset": [
        3706,
        3744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2911": {
      "op": "ADD"
    },
    "2912": {
      "fn": "Controller.withdraw",
      "offset": [
        3706,
        3753
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3AF"
    },
    "2915": {
      "op": "JUMP"
    },
    "2916": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3049,
        3203
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2917": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3123,
        3133
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 30,
      "value": "0x0"
    },
    "2919": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3123,
        3133
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2926": {
      "op": "SHL"
    },
    "2927": {
      "op": "SUB"
    },
    "2928": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3123,
        3133
      ],
      "op": "AND",
      "path": "6"
    },
    "2929": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3109,
        3119
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2930": {
      "branch": 55,
      "fn": "Controller.withdrawAll",
      "offset": [
        3109,
        3133
      ],
      "op": "EQ",
      "path": "6"
    },
    "2931": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB8E"
    },
    "2934": {
      "branch": 55,
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2935": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2937": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2944": {
      "op": "SHL"
    },
    "2945": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2946": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2947": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2949": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "ADD",
      "path": "6"
    },
    "2950": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37C"
    },
    "2953": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2954": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF55"
    },
    "2957": {
      "fn": "Controller.withdrawAll",
      "jump": "i",
      "offset": [
        3101,
        3149
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2958": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3101,
        3149
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2965": {
      "op": "SHL"
    },
    "2966": {
      "op": "SUB"
    },
    "2967": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 31
    },
    "2968": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2969": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "AND",
      "path": "6"
    },
    "2970": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2972": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2973": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2974": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2975": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3175
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2977": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2979": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2980": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2981": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2982": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2984": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2985": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2986": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2987": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2988": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2989": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2990": {
      "op": "PUSH4",
      "value": "0x429C145B"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2997": {
      "op": "SHL"
    },
    "2998": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2999": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3000": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3001": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3002": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "3003": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "AND",
      "path": "6"
    },
    "3004": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3005": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3196
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x853828B6"
    },
    "3010": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3196
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3011": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3012": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3013": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "ADD",
      "path": "6"
    },
    "3014": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3015": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3016": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3017": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3018": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3019": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SUB",
      "path": "6"
    },
    "3020": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3021": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3022": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "ADD",
      "path": "6"
    },
    "3023": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3024": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3025": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3026": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3165,
        3183
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3027": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3028": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3029": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3030": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3031": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3032": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBE0"
    },
    "3035": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3036": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3038": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3039": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3040": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3041": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "POP",
      "path": "6"
    },
    "3042": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "GAS",
      "path": "6"
    },
    "3043": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "CALL",
      "path": "6"
    },
    "3044": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3045": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3046": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3047": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBF4"
    },
    "3050": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3051": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3052": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3054": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3055": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3056": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3057": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3059": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3060": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3061": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "POP",
      "path": "6"
    },
    "3062": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "POP",
      "path": "6"
    },
    "3063": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "POP",
      "path": "6"
    },
    "3064": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "POP",
      "path": "6"
    },
    "3065": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3067": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3068": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3069": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3071": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "NOT",
      "path": "6"
    },
    "3072": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3074": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3075": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "ADD",
      "path": "6"
    },
    "3076": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "AND",
      "path": "6"
    },
    "3077": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3078": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "ADD",
      "path": "6"
    },
    "3079": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3080": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3082": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3083": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "POP",
      "path": "6"
    },
    "3084": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3085": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "ADD",
      "path": "6"
    },
    "3086": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3087": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA81"
    },
    "3090": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3091": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3092": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3155,
        3198
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF7A"
    },
    "3095": {
      "fn": "Controller.withdrawAll",
      "jump": "i",
      "offset": [
        3155,
        3198
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3096": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3097": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0x40"
    },
    "3099": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3100": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3107": {
      "op": "SHL"
    },
    "3108": {
      "op": "SUB"
    },
    "3109": {
      "op": "DUP5"
    },
    "3110": {
      "op": "AND"
    },
    "3111": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3113": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3114": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "2"
    },
    "3115": {
      "op": "MSTORE"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3118": {
      "op": "DUP1"
    },
    "3119": {
      "op": "DUP3"
    },
    "3120": {
      "op": "ADD"
    },
    "3121": {
      "op": "DUP5"
    },
    "3122": {
      "op": "SWAP1"
    },
    "3123": {
      "op": "MSTORE"
    },
    "3124": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3125": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3126": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3127": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3128": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SUB",
      "path": "2"
    },
    "3129": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3130": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3131": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "2"
    },
    "3132": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3133": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3136": {
      "op": "SWAP1"
    },
    "3137": {
      "op": "SWAP2"
    },
    "3138": {
      "op": "ADD"
    },
    "3139": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3140": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3141": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3142": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3144": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3145": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "2"
    },
    "3146": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3147": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "op": "SUB"
    },
    "3156": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "AND",
      "path": "2"
    },
    "3157": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3164": {
      "op": "SHL"
    },
    "3165": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "OR",
      "path": "2"
    },
    "3166": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3167": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3168": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6A"
    },
    "3171": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3172": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3173": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3174": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6F"
    },
    "3177": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        716,
        802
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3178": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3179": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "3180": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "3181": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "3182": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        634,
        809
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3183": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3022,
        3773
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3184": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3186": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC4"
    },
    "3189": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3499
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3190": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3192": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3193": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3194": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3196": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "2"
    },
    "3197": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3199": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3200": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3201": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3203": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3204": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3205": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3207": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "2"
    },
    "3208": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3241": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3242": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3243": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "POP",
      "path": "2"
    },
    "3244": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3475,
        3480
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3251": {
      "op": "SHL"
    },
    "3252": {
      "op": "SUB"
    },
    "3253": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "AND",
      "path": "2"
    },
    "3254": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD41"
    },
    "3257": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3258": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3259": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3260": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3261": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3266": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "AND",
      "path": "2"
    },
    "3267": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3268": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3269": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3270": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3271": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3272": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3273": {
      "op": "POP"
    },
    "3274": {
      "branch": 59,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3571
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3275": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6A"
    },
    "3278": {
      "branch": 59,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3279": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3690,
        3700
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 33
    },
    "3280": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3281": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3283": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "2"
    },
    "3284": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3285": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3286": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3287": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "2"
    },
    "3288": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3289": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE2"
    },
    "3292": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3293": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3294": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB0"
    },
    "3297": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3298": {
      "branch": 60,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3299": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6A"
    },
    "3302": {
      "branch": 60,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3303": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3305": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3306": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3312": {
      "op": "SHL"
    },
    "3313": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3314": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3317": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3319": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3320": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "ADD",
      "path": "2"
    },
    "3321": {
      "op": "MSTORE"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3326": {
      "op": "DUP3"
    },
    "3327": {
      "op": "ADD"
    },
    "3328": {
      "op": "MSTORE"
    },
    "3329": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3364": {
      "op": "DUP3"
    },
    "3365": {
      "op": "ADD"
    },
    "3366": {
      "op": "MSTORE"
    },
    "3367": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3380": {
      "op": "SHL"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3383": {
      "op": "DUP3"
    },
    "3384": {
      "op": "ADD"
    },
    "3385": {
      "op": "MSTORE"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3388": {
      "op": "ADD"
    },
    "3389": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37C"
    },
    "3392": {
      "op": "JUMP"
    },
    "3393": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3394": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3396": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 34,
      "value": "0xD50"
    },
    "3399": {
      "fn": "Address.functionCall",
      "offset": [
        3729,
        3735
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3400": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3741
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3401": {
      "fn": "Address.functionCall",
      "offset": [
        3743,
        3744
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3403": {
      "fn": "Address.functionCall",
      "offset": [
        3746,
        3758
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3404": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5A"
    },
    "3407": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3408": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3409": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3410": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3759
      ],
      "op": "POP",
      "path": "3"
    },
    "3411": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3412": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3413": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3414": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "POP",
      "path": "3"
    },
    "3415": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "POP",
      "path": "3"
    },
    "3416": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "POP",
      "path": "3"
    },
    "3417": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3418": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3419": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4727,
        4739
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3421": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4784,
        4789
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 35
    },
    "3422": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4780
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "3423": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "LT",
      "path": "3"
    },
    "3424": {
      "branch": 56,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3425": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDBB"
    },
    "3428": {
      "branch": 56,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3429": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3431": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3438": {
      "op": "SHL"
    },
    "3439": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3440": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3443": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3445": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3446": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "ADD",
      "path": "3"
    },
    "3447": {
      "op": "MSTORE"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3452": {
      "op": "DUP3"
    },
    "3453": {
      "op": "ADD"
    },
    "3454": {
      "op": "MSTORE"
    },
    "3455": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3490": {
      "op": "DUP3"
    },
    "3491": {
      "op": "ADD"
    },
    "3492": {
      "op": "MSTORE"
    },
    "3493": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "3502": {
      "op": "SHL"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3505": {
      "op": "DUP3"
    },
    "3506": {
      "op": "ADD"
    },
    "3507": {
      "op": "MSTORE"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3510": {
      "op": "ADD"
    },
    "3511": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37C"
    },
    "3514": {
      "op": "JUMP"
    },
    "3515": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3516": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3517": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "3518": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 36,
      "value": "0xE09"
    },
    "3521": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3522": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3525": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3531": {
      "op": "SHL"
    },
    "3532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3533": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3539": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "ADD",
      "path": "3"
    },
    "3540": {
      "op": "MSTORE"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3545": {
      "op": "DUP3"
    },
    "3546": {
      "op": "ADD"
    },
    "3547": {
      "op": "MSTORE"
    },
    "3548": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3583": {
      "op": "DUP3"
    },
    "3584": {
      "op": "ADD"
    },
    "3585": {
      "op": "MSTORE"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3588": {
      "op": "ADD"
    },
    "3589": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37C"
    },
    "3592": {
      "op": "JUMP"
    },
    "3593": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3594": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4985
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3596": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4987,
        5010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3597": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5020
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3604": {
      "op": "SHL"
    },
    "3605": {
      "op": "SUB"
    },
    "3606": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5025
      ],
      "op": "AND",
      "path": "3"
    },
    "3607": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5034,
        5039
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3608": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5046
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3609": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3611": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3612": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE25"
    },
    "3615": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3616": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3617": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1002"
    },
    "3620": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3621": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3622": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3624": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3626": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3627": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3628": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3629": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SUB",
      "path": "3"
    },
    "3630": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3631": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3632": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3633": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "GAS",
      "path": "3"
    },
    "3634": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "CALL",
      "path": "3"
    },
    "3635": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3636": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "3637": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "3638": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "3639": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3640": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3641": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3643": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3644": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "EQ",
      "path": "3"
    },
    "3645": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE62"
    },
    "3648": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3649": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3651": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3652": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3653": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "3654": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3656": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "NOT",
      "path": "3"
    },
    "3657": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "3659": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3660": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "3661": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "AND",
      "path": "3"
    },
    "3662": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3663": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "3664": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3666": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3667": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3668": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3669": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3670": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3671": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3673": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3675": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3676": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "3677": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3678": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE67"
    },
    "3681": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3682": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3683": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3685": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3686": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "3687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3688": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "3689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3690": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "3691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3692": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "3693": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 37,
      "value": "0xE77"
    },
    "3696": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5082,
        5089
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5091,
        5101
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5103,
        5115
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3699": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5081
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE82"
    },
    "3702": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5057,
        5116
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "3705": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "3706": {
      "op": "POP"
    },
    "3707": {
      "op": "POP"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "op": "POP"
    },
    "3710": {
      "op": "POP"
    },
    "3711": {
      "op": "POP"
    },
    "3712": {
      "op": "POP"
    },
    "3713": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3714": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7083,
        7808
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3715": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3717": {
      "branch": 57,
      "fn": "Address._verifyCallResult",
      "offset": [
        7226,
        7233
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3718": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3719": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE91"
    },
    "3722": {
      "branch": 57,
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3723": {
      "op": "POP"
    },
    "3724": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7256,
        7266
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 38
    },
    "3725": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD53"
    },
    "3728": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3729": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3730": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3731": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3732": {
      "branch": 58,
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7388
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3733": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA1"
    },
    "3736": {
      "branch": 58,
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3737": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7635
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3738": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7619,
        7636
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3739": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7685,
        7700
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3740": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7682
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3741": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7668,
        7670
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3743": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7664,
        7683
      ],
      "op": "ADD",
      "path": "3"
    },
    "3744": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7657,
        7701
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3745": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3746": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 39
    },
    "3747": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3749": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3750": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3756": {
      "op": "SHL"
    },
    "3757": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3758": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3759": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3761": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "ADD",
      "path": "3"
    },
    "3762": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37C"
    },
    "3765": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3766": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3767": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101E"
    },
    "3770": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3771": {
      "op": "JUMPDEST"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3778": {
      "op": "SHL"
    },
    "3779": {
      "op": "SUB"
    },
    "3780": {
      "op": "DUP2"
    },
    "3781": {
      "op": "AND"
    },
    "3782": {
      "op": "DUP2"
    },
    "3783": {
      "op": "EQ"
    },
    "3784": {
      "op": "PUSH2",
      "value": "0xED0"
    },
    "3787": {
      "op": "JUMPI"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3790": {
      "op": "DUP1"
    },
    "3791": {
      "op": "REVERT"
    },
    "3792": {
      "op": "JUMPDEST"
    },
    "3793": {
      "op": "POP"
    },
    "3794": {
      "jump": "o",
      "op": "JUMP"
    },
    "3795": {
      "op": "JUMPDEST"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3798": {
      "op": "DUP1"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3801": {
      "op": "DUP4"
    },
    "3802": {
      "op": "DUP6"
    },
    "3803": {
      "op": "SUB"
    },
    "3804": {
      "op": "SLT"
    },
    "3805": {
      "op": "ISZERO"
    },
    "3806": {
      "op": "PUSH2",
      "value": "0xEE6"
    },
    "3809": {
      "op": "JUMPI"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3812": {
      "op": "DUP1"
    },
    "3813": {
      "op": "REVERT"
    },
    "3814": {
      "op": "JUMPDEST"
    },
    "3815": {
      "op": "DUP3"
    },
    "3816": {
      "op": "CALLDATALOAD"
    },
    "3817": {
      "op": "PUSH2",
      "value": "0xEF1"
    },
    "3820": {
      "op": "DUP2"
    },
    "3821": {
      "op": "PUSH2",
      "value": "0xEBB"
    },
    "3824": {
      "jump": "i",
      "op": "JUMP"
    },
    "3825": {
      "op": "JUMPDEST"
    },
    "3826": {
      "op": "SWAP2"
    },
    "3827": {
      "op": "POP"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3830": {
      "op": "DUP4"
    },
    "3831": {
      "op": "ADD"
    },
    "3832": {
      "op": "CALLDATALOAD"
    },
    "3833": {
      "op": "PUSH2",
      "value": "0xF01"
    },
    "3836": {
      "op": "DUP2"
    },
    "3837": {
      "op": "PUSH2",
      "value": "0xEBB"
    },
    "3840": {
      "jump": "i",
      "op": "JUMP"
    },
    "3841": {
      "op": "JUMPDEST"
    },
    "3842": {
      "op": "DUP1"
    },
    "3843": {
      "op": "SWAP2"
    },
    "3844": {
      "op": "POP"
    },
    "3845": {
      "op": "POP"
    },
    "3846": {
      "op": "SWAP3"
    },
    "3847": {
      "op": "POP"
    },
    "3848": {
      "op": "SWAP3"
    },
    "3849": {
      "op": "SWAP1"
    },
    "3850": {
      "op": "POP"
    },
    "3851": {
      "jump": "o",
      "op": "JUMP"
    },
    "3852": {
      "op": "JUMPDEST"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3857": {
      "op": "DUP3"
    },
    "3858": {
      "op": "DUP5"
    },
    "3859": {
      "op": "SUB"
    },
    "3860": {
      "op": "SLT"
    },
    "3861": {
      "op": "ISZERO"
    },
    "3862": {
      "op": "PUSH2",
      "value": "0xF1E"
    },
    "3865": {
      "op": "JUMPI"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3868": {
      "op": "DUP1"
    },
    "3869": {
      "op": "REVERT"
    },
    "3870": {
      "op": "JUMPDEST"
    },
    "3871": {
      "op": "DUP2"
    },
    "3872": {
      "op": "CALLDATALOAD"
    },
    "3873": {
      "op": "PUSH2",
      "value": "0xD53"
    },
    "3876": {
      "op": "DUP2"
    },
    "3877": {
      "op": "PUSH2",
      "value": "0xEBB"
    },
    "3880": {
      "jump": "i",
      "op": "JUMP"
    },
    "3881": {
      "op": "JUMPDEST"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3884": {
      "op": "DUP1"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3887": {
      "op": "DUP4"
    },
    "3888": {
      "op": "DUP6"
    },
    "3889": {
      "op": "SUB"
    },
    "3890": {
      "op": "SLT"
    },
    "3891": {
      "op": "ISZERO"
    },
    "3892": {
      "op": "PUSH2",
      "value": "0xF3C"
    },
    "3895": {
      "op": "JUMPI"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3898": {
      "op": "DUP1"
    },
    "3899": {
      "op": "REVERT"
    },
    "3900": {
      "op": "JUMPDEST"
    },
    "3901": {
      "op": "DUP3"
    },
    "3902": {
      "op": "CALLDATALOAD"
    },
    "3903": {
      "op": "PUSH2",
      "value": "0xF47"
    },
    "3906": {
      "op": "DUP2"
    },
    "3907": {
      "op": "PUSH2",
      "value": "0xEBB"
    },
    "3910": {
      "jump": "i",
      "op": "JUMP"
    },
    "3911": {
      "op": "JUMPDEST"
    },
    "3912": {
      "op": "SWAP5"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3915": {
      "op": "SWAP4"
    },
    "3916": {
      "op": "SWAP1"
    },
    "3917": {
      "op": "SWAP4"
    },
    "3918": {
      "op": "ADD"
    },
    "3919": {
      "op": "CALLDATALOAD"
    },
    "3920": {
      "op": "SWAP4"
    },
    "3921": {
      "op": "POP"
    },
    "3922": {
      "op": "POP"
    },
    "3923": {
      "op": "POP"
    },
    "3924": {
      "jump": "o",
      "op": "JUMP"
    },
    "3925": {
      "op": "JUMPDEST"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3928": {
      "op": "DUP1"
    },
    "3929": {
      "op": "DUP3"
    },
    "3930": {
      "op": "MSTORE"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3933": {
      "op": "SWAP1"
    },
    "3934": {
      "op": "DUP3"
    },
    "3935": {
      "op": "ADD"
    },
    "3936": {
      "op": "MSTORE"
    },
    "3937": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3951": {
      "op": "SHL"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3954": {
      "op": "DUP3"
    },
    "3955": {
      "op": "ADD"
    },
    "3956": {
      "op": "MSTORE"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3959": {
      "op": "ADD"
    },
    "3960": {
      "op": "SWAP1"
    },
    "3961": {
      "jump": "o",
      "op": "JUMP"
    },
    "3962": {
      "op": "JUMPDEST"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3967": {
      "op": "DUP3"
    },
    "3968": {
      "op": "DUP5"
    },
    "3969": {
      "op": "SUB"
    },
    "3970": {
      "op": "SLT"
    },
    "3971": {
      "op": "ISZERO"
    },
    "3972": {
      "op": "PUSH2",
      "value": "0xF8C"
    },
    "3975": {
      "op": "JUMPI"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3978": {
      "op": "DUP1"
    },
    "3979": {
      "op": "REVERT"
    },
    "3980": {
      "op": "JUMPDEST"
    },
    "3981": {
      "op": "POP"
    },
    "3982": {
      "op": "MLOAD"
    },
    "3983": {
      "op": "SWAP2"
    },
    "3984": {
      "op": "SWAP1"
    },
    "3985": {
      "op": "POP"
    },
    "3986": {
      "jump": "o",
      "op": "JUMP"
    },
    "3987": {
      "op": "JUMPDEST"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3992": {
      "op": "DUP3"
    },
    "3993": {
      "op": "DUP5"
    },
    "3994": {
      "op": "SUB"
    },
    "3995": {
      "op": "SLT"
    },
    "3996": {
      "op": "ISZERO"
    },
    "3997": {
      "op": "PUSH2",
      "value": "0xFA5"
    },
    "4000": {
      "op": "JUMPI"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4003": {
      "op": "DUP1"
    },
    "4004": {
      "op": "REVERT"
    },
    "4005": {
      "op": "JUMPDEST"
    },
    "4006": {
      "op": "DUP2"
    },
    "4007": {
      "op": "MLOAD"
    },
    "4008": {
      "op": "PUSH2",
      "value": "0xD53"
    },
    "4011": {
      "op": "DUP2"
    },
    "4012": {
      "op": "PUSH2",
      "value": "0xEBB"
    },
    "4015": {
      "jump": "i",
      "op": "JUMP"
    },
    "4016": {
      "op": "JUMPDEST"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4021": {
      "op": "DUP3"
    },
    "4022": {
      "op": "DUP5"
    },
    "4023": {
      "op": "SUB"
    },
    "4024": {
      "op": "SLT"
    },
    "4025": {
      "op": "ISZERO"
    },
    "4026": {
      "op": "PUSH2",
      "value": "0xFC2"
    },
    "4029": {
      "op": "JUMPI"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4032": {
      "op": "DUP1"
    },
    "4033": {
      "op": "REVERT"
    },
    "4034": {
      "op": "JUMPDEST"
    },
    "4035": {
      "op": "DUP2"
    },
    "4036": {
      "op": "MLOAD"
    },
    "4037": {
      "op": "DUP1"
    },
    "4038": {
      "op": "ISZERO"
    },
    "4039": {
      "op": "ISZERO"
    },
    "4040": {
      "op": "DUP2"
    },
    "4041": {
      "op": "EQ"
    },
    "4042": {
      "op": "PUSH2",
      "value": "0xD53"
    },
    "4045": {
      "op": "JUMPI"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4048": {
      "op": "DUP1"
    },
    "4049": {
      "op": "REVERT"
    },
    "4050": {
      "op": "JUMPDEST"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4053": {
      "op": "JUMPDEST"
    },
    "4054": {
      "op": "DUP4"
    },
    "4055": {
      "op": "DUP2"
    },
    "4056": {
      "op": "LT"
    },
    "4057": {
      "op": "ISZERO"
    },
    "4058": {
      "op": "PUSH2",
      "value": "0xFED"
    },
    "4061": {
      "op": "JUMPI"
    },
    "4062": {
      "op": "DUP2"
    },
    "4063": {
      "op": "DUP2"
    },
    "4064": {
      "op": "ADD"
    },
    "4065": {
      "op": "MLOAD"
    },
    "4066": {
      "op": "DUP4"
    },
    "4067": {
      "op": "DUP3"
    },
    "4068": {
      "op": "ADD"
    },
    "4069": {
      "op": "MSTORE"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4072": {
      "op": "ADD"
    },
    "4073": {
      "op": "PUSH2",
      "value": "0xFD5"
    },
    "4076": {
      "op": "JUMP"
    },
    "4077": {
      "op": "JUMPDEST"
    },
    "4078": {
      "op": "DUP4"
    },
    "4079": {
      "op": "DUP2"
    },
    "4080": {
      "op": "GT"
    },
    "4081": {
      "op": "ISZERO"
    },
    "4082": {
      "op": "PUSH2",
      "value": "0xFFC"
    },
    "4085": {
      "op": "JUMPI"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4088": {
      "op": "DUP5"
    },
    "4089": {
      "op": "DUP5"
    },
    "4090": {
      "op": "ADD"
    },
    "4091": {
      "op": "MSTORE"
    },
    "4092": {
      "op": "JUMPDEST"
    },
    "4093": {
      "op": "POP"
    },
    "4094": {
      "op": "POP"
    },
    "4095": {
      "op": "POP"
    },
    "4096": {
      "op": "POP"
    },
    "4097": {
      "jump": "o",
      "op": "JUMP"
    },
    "4098": {
      "op": "JUMPDEST"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4101": {
      "op": "DUP3"
    },
    "4102": {
      "op": "MLOAD"
    },
    "4103": {
      "op": "PUSH2",
      "value": "0x1014"
    },
    "4106": {
      "op": "DUP2"
    },
    "4107": {
      "op": "DUP5"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4110": {
      "op": "DUP8"
    },
    "4111": {
      "op": "ADD"
    },
    "4112": {
      "op": "PUSH2",
      "value": "0xFD2"
    },
    "4115": {
      "jump": "i",
      "op": "JUMP"
    },
    "4116": {
      "op": "JUMPDEST"
    },
    "4117": {
      "op": "SWAP2"
    },
    "4118": {
      "op": "SWAP1"
    },
    "4119": {
      "op": "SWAP2"
    },
    "4120": {
      "op": "ADD"
    },
    "4121": {
      "op": "SWAP3"
    },
    "4122": {
      "op": "SWAP2"
    },
    "4123": {
      "op": "POP"
    },
    "4124": {
      "op": "POP"
    },
    "4125": {
      "jump": "o",
      "op": "JUMP"
    },
    "4126": {
      "op": "JUMPDEST"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4129": {
      "op": "DUP2"
    },
    "4130": {
      "op": "MSTORE"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4133": {
      "op": "DUP3"
    },
    "4134": {
      "op": "MLOAD"
    },
    "4135": {
      "op": "DUP1"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4138": {
      "op": "DUP5"
    },
    "4139": {
      "op": "ADD"
    },
    "4140": {
      "op": "MSTORE"
    },
    "4141": {
      "op": "PUSH2",
      "value": "0x103D"
    },
    "4144": {
      "op": "DUP2"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4147": {
      "op": "DUP6"
    },
    "4148": {
      "op": "ADD"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4151": {
      "op": "DUP8"
    },
    "4152": {
      "op": "ADD"
    },
    "4153": {
      "op": "PUSH2",
      "value": "0xFD2"
    },
    "4156": {
      "jump": "i",
      "op": "JUMP"
    },
    "4157": {
      "op": "JUMPDEST"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4160": {
      "op": "ADD"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4163": {
      "op": "NOT"
    },
    "4164": {
      "op": "AND"
    },
    "4165": {
      "op": "SWAP2"
    },
    "4166": {
      "op": "SWAP1"
    },
    "4167": {
      "op": "SWAP2"
    },
    "4168": {
      "op": "ADD"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4171": {
      "op": "ADD"
    },
    "4172": {
      "op": "SWAP3"
    },
    "4173": {
      "op": "SWAP2"
    },
    "4174": {
      "op": "POP"
    },
    "4175": {
      "op": "POP"
    },
    "4176": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1dbf813a9286666479fccf788aa489fb57df88ca",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '../interfaces/IStrategy.sol';\nimport '../interfaces/IConverter.sol';\n\ncontract Controller\n{\n  using SafeERC20 for IERC20;\n  using Address for address;\n  using SafeMath for uint256;\n  address public governance;\n  address public treasury;\n  address public timelock;\n\n  mapping(address => address) public vaults;\n  mapping(address => address) public strategies;\n  mapping(address => mapping(address => address)) public converters;\n  mapping(address => mapping(address => bool)) public approvedStrategies;\n\n  constructor(\n    address _governance,\n    address _timelock,\n    address _treasury\n  ) {\n    governance = _governance;\n    timelock = _timelock;\n    treasury = _treasury;\n  }\n\n  function setTreasury(address _treasury) public\n  {\n    require(msg.sender == governance, '!governance');\n    treasury = _treasury;\n  }\n\n  function setGovernance(address _governance) public\n  {\n    require(msg.sender == governance, '!governance');\n    governance = _governance;\n  }\n\n  function setTimelock(address _timelock) public\n  {\n    require(msg.sender == timelock, '!timelock');\n    timelock = _timelock;\n  }\n\n  function setVault(address _token, address _vault) public\n  {\n    require(msg.sender == governance, '!governance');\n    require(vaults[_token] == address(0), 'vault');\n    vaults[_token] = _vault;\n  }\n\n  function approveStrategy(address _token, address _strategy) public\n  {\n    require(msg.sender == timelock, '!timelock');\n    approvedStrategies[_token][_strategy] = true;\n  }\n\n  function revokeStrategy(address _token, address _strategy) public\n  {\n    require(msg.sender == governance, '!governance');\n    require(strategies[_token] != _strategy, 'cannot revoke active strategy');\n    approvedStrategies[_token][_strategy] = false;\n  }\n\n  function setStrategy(address _token, address _strategy) public\n  {\n    require(msg.sender == governance, '!governance');\n    require(approvedStrategies[_token][_strategy] == true, '!approved');\n    address _current = strategies[_token];\n    if (_current != address(0)) {\n      IStrategy(_current).withdrawAll();\n    }\n    strategies[_token] = _strategy;\n  }\n\n  function earn(address _token, uint256 _amount) public\n  {\n    address _strategy = strategies[_token];\n    address _want = IStrategy(_strategy).want();\n    if (_want != _token) {\n      address converter = converters[_token][_want];\n      IERC20(_token).safeTransfer(converter, _amount);\n      _amount = IConverter(converter).convert(_strategy);\n      IERC20(_want).safeTransfer(_strategy, _amount);\n    } else {\n      IERC20(_token).safeTransfer(_strategy, _amount);\n    }\n    IStrategy(_strategy).deposit();\n  }\n\n  function balanceOf(address _token) external view returns (uint256)\n  {\n    return IStrategy(strategies[_token]).balanceOf();\n  }\n\n  function withdrawAll(address _token) public\n  {\n    require(msg.sender == governance, '!governance');\n    IStrategy(strategies[_token]).withdrawAll();\n  }\n\n  function inCaseTokensGetStuck(address _token, uint256 _amount) public\n  {\n    require(msg.sender == governance, '!governance');\n    IERC20(_token).safeTransfer(msg.sender, _amount);\n  }\n\n  function inCaseStrategyTokenGetStuck(address _strategy, address _token)\n    public\n  {\n    require(msg.sender == governance, '!governance');\n    IStrategy(_strategy).withdraw(_token);\n  }\n\n  function withdraw(address _token, uint256 _amount) public\n  {\n    require(msg.sender == vaults[_token], '!vault');\n    IStrategy(strategies[_token]).withdraw(_amount);\n  }\n\n  function _execute(address _target, bytes memory _data)\n    internal\n    returns (bytes memory response)\n  {\n    require(_target != address(0), '!target');\n    // call contract in current context\n    assembly {\n      let succeeded := delegatecall(sub(gas(), 5000), _target, add(_data, 0x20), mload(_data), 0, 0)\n      let size := returndatasize()\n      response := mload(0x40)\n      mstore(0x40, add(response, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n      mstore(response, size)\n      returndatacopy(add(response, 0x20), 0, size)\n      switch iszero(succeeded)\n        case 1 {\n          // throw if delegatecall failed\n          revert(add(response, 0x20), size)\n        }\n    }\n  }\n}\n",
  "sourceMap": "368:4083:6:-:0;;;803:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;896:10;:24;;-1:-1:-1;;;;;896:24:6;;;-1:-1:-1;;;;;;896:24:6;;;;;;;926:8;:20;;;;;;;;;;;;;;;896:24;952:20;;;;;;;;;;;368:4083;;14:177:19;93:13;;-1:-1:-1;;;;;135:31:19;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;368:4083:6;;;;;;",
  "sourcePath": "contracts/Controller.sol",
  "type": "contract"
}