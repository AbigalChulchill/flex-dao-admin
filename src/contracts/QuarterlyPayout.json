{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tknAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "veAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastClaimedEpoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endingEpoch",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "distributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Distribute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "IsDistributor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "IsOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "EPOCH_BLOCKS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimedEpoches",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getClaimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        }
      ],
      "name": "getEpochStartBlockHeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDistributor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "payoutForEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockHeight",
          "type": "uint256"
        }
      ],
      "name": "setStartBlockHeight",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlockHeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vested",
      "outputs": [
        {
          "internalType": "contract IVested",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol",
    "1": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
    "18": "interfaces/IVested.sol",
    "2": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Address.sol",
    "4": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Context.sol",
    "5": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/math/SafeMath.sol",
    "8": "contracts/QuarterlyPayout.sol"
  },
  "ast": {
    "absolutePath": "contracts/QuarterlyPayout.sol",
    "exportedSymbols": {
      "Address": [
        3933
      ],
      "Context": [
        4691
      ],
      "IERC20": [
        3413
      ],
      "IVested": [
        4492
      ],
      "Ownable": [
        4450
      ],
      "QuarterlyPayout": [
        1661
      ],
      "SafeERC20": [
        3637
      ],
      "SafeMath": [
        4245
      ]
    },
    "id": 1662,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1069,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1070,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1662,
        "sourceUnit": 4451,
        "src": "57:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1071,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1662,
        "sourceUnit": 3414,
        "src": "110:56:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 1072,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1662,
        "sourceUnit": 3638,
        "src": "167:65:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tangwei/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1073,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1662,
        "sourceUnit": 4246,
        "src": "233:57:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IVested.sol",
        "file": "../interfaces/IVested.sol",
        "id": 1074,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1662,
        "sourceUnit": 4493,
        "src": "291:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1075,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4450,
              "src": "356:7:8"
            },
            "id": 1076,
            "nodeType": "InheritanceSpecifier",
            "src": "356:7:8"
          }
        ],
        "canonicalName": "QuarterlyPayout",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1661,
        "linearizedBaseContracts": [
          1661,
          4450,
          4691
        ],
        "name": "QuarterlyPayout",
        "nameLocation": "337:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1080,
            "libraryName": {
              "id": 1077,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3637,
              "src": "374:9:8"
            },
            "nodeType": "UsingForDirective",
            "src": "368:27:8",
            "typeName": {
              "id": 1079,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1078,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3413,
                "src": "388:6:8"
              },
              "referencedDeclaration": 3413,
              "src": "388:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3413",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1083,
            "libraryName": {
              "id": 1081,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4245,
              "src": "404:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "398:27:8",
            "typeName": {
              "id": 1082,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "417:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 1086,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "495:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 1661,
            "src": "471:29:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3413",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1085,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1084,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3413,
                "src": "471:6:8"
              },
              "referencedDeclaration": 3413,
              "src": "471:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3413",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fea5657c",
            "id": 1089,
            "mutability": "immutable",
            "name": "vested",
            "nameLocation": "544:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 1661,
            "src": "519:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVested_$4492",
              "typeString": "contract IVested"
            },
            "typeName": {
              "id": 1088,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1087,
                "name": "IVested",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4492,
                "src": "519:7:8"
              },
              "referencedDeclaration": 4492,
              "src": "519:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVested_$4492",
                "typeString": "contract IVested"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "74c259c6",
            "id": 1092,
            "mutability": "constant",
            "name": "EPOCH_BLOCKS",
            "nameLocation": "588:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 1661,
            "src": "564:41:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1090,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "564:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 1091,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "603:2:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc9dc4ff",
            "id": 1094,
            "mutability": "mutable",
            "name": "startBlockHeight",
            "nameLocation": "702:16:8",
            "nodeType": "VariableDeclaration",
            "scope": 1661,
            "src": "687:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1093,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "687:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6aa8405f",
            "id": 1097,
            "mutability": "mutable",
            "name": "payoutForEpoch",
            "nameLocation": "739:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1661,
            "src": "722:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 1095,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "722:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1096,
              "nodeType": "ArrayTypeName",
              "src": "722:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "828df5ee",
            "id": 1101,
            "mutability": "mutable",
            "name": "claimedEpoches",
            "nameLocation": "792:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1661,
            "src": "757:49:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1100,
              "keyType": {
                "id": 1098,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "765:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "757:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1099,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "776:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f0c86fa",
            "id": 1105,
            "mutability": "mutable",
            "name": "isDistributor",
            "nameLocation": "842:13:8",
            "nodeType": "VariableDeclaration",
            "scope": 1661,
            "src": "810:45:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1104,
              "keyType": {
                "id": 1102,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "818:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "810:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1103,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "829:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6d70f7ae",
            "id": 1109,
            "mutability": "mutable",
            "name": "isOperator",
            "nameLocation": "891:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 1661,
            "src": "859:42:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1108,
              "keyType": {
                "id": 1106,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "867:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "859:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1107,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "878:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1119,
            "name": "Claim",
            "nameLocation": "954:5:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1111,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "976:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "960:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1113,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "990:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "982:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1115,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastClaimedEpoch",
                  "nameLocation": "1006:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "998:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1117,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endingEpoch",
                  "nameLocation": "1032:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "1024:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1024:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "959:85:8"
            },
            "src": "948:97:8"
          },
          {
            "anonymous": false,
            "id": 1125,
            "name": "IsDistributor",
            "nameLocation": "1054:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1121,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1084:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "1068:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "1098:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "1093:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1067:38:8"
            },
            "src": "1048:58:8"
          },
          {
            "anonymous": false,
            "id": 1131,
            "name": "IsOperator",
            "nameLocation": "1115:10:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1127,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1142:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1131,
                  "src": "1126:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1129,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "1156:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1131,
                  "src": "1151:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1151:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1125:38:8"
            },
            "src": "1109:55:8"
          },
          {
            "anonymous": false,
            "id": 1137,
            "name": "Distribute",
            "nameLocation": "1173:10:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "distributor",
                  "nameLocation": "1192:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "1184:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1135,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1213:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "1205:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1183:37:8"
            },
            "src": "1167:54:8"
          },
          {
            "body": {
              "id": 1176,
              "nodeType": "Block",
              "src": "1313:228:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1145,
                          "name": "tknAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1139,
                          "src": "1327:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1346:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1338:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1146,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1338:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1338:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1327:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f2e",
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1350:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a",
                          "typeString": "literal_string \"Token address cannot be zero.\""
                        },
                        "value": "Token address cannot be zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a",
                          "typeString": "literal_string \"Token address cannot be zero.\""
                        }
                      ],
                      "id": 1144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1319:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:63:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:63:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1155,
                          "name": "veAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "1411:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1429:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1421:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1156,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1421:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1421:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1411:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374656420616464726573732063616e6e6f74206265207a65726f2e",
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1434:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fa393d6aeab9274aea69bc4fcd759d656ee25d50323a2fa98a621b1576d45bd",
                          "typeString": "literal_string \"Vested address cannot be zero.\""
                        },
                        "value": "Vested address cannot be zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fa393d6aeab9274aea69bc4fcd759d656ee25d50323a2fa98a621b1576d45bd",
                          "typeString": "literal_string \"Vested address cannot be zero.\""
                        }
                      ],
                      "id": 1154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1403:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:64:8"
                },
                {
                  "expression": {
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1164,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "1483:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3413",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1166,
                          "name": "tknAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1139,
                          "src": "1498:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1165,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3413,
                        "src": "1491:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$3413_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1491:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3413",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1483:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3413",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1169,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:23:8"
                },
                {
                  "expression": {
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1170,
                      "name": "vested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1089,
                      "src": "1512:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVested_$4492",
                        "typeString": "contract IVested"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1172,
                          "name": "veAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "1529:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1171,
                        "name": "IVested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4492,
                        "src": "1521:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IVested_$4492_$",
                          "typeString": "type(contract IVested)"
                        }
                      },
                      "id": 1173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1521:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVested_$4492",
                        "typeString": "contract IVested"
                      }
                    },
                    "src": "1512:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVested_$4492",
                      "typeString": "contract IVested"
                    }
                  },
                  "id": 1175,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:24:8"
                }
              ]
            },
            "id": 1177,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1139,
                  "mutability": "mutable",
                  "name": "tknAddr",
                  "nameLocation": "1286:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "1278:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "veAddr",
                  "nameLocation": "1303:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "1295:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1277:33:8"
            },
            "returnParameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1313:0:8"
            },
            "scope": 1661,
            "src": "1266:275:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1205,
              "nodeType": "Block",
              "src": "1603:149:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1185,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "1617:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1636:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1628:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1186,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1628:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1628:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1617:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420616464726573732063616e6e6f74206265207a65726f",
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1640:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d71d38b05ecf5fc52d59eb7c731e8efcc9e9bf2fa5dafd0020e4b9071131c323",
                          "typeString": "literal_string \"Account address cannot be zero\""
                        },
                        "value": "Account address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d71d38b05ecf5fc52d59eb7c731e8efcc9e9bf2fa5dafd0020e4b9071131c323",
                          "typeString": "literal_string \"Account address cannot be zero\""
                        }
                      ],
                      "id": 1184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1609:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1609:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:64:8"
                },
                {
                  "expression": {
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1194,
                        "name": "isDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "1679:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1196,
                      "indexExpression": {
                        "id": 1195,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "1693:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1679:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1704:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1679:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1199,
                  "nodeType": "ExpressionStatement",
                  "src": "1679:29:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1201,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "1733:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1742:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1200,
                      "name": "IsDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1125,
                      "src": "1719:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:28:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1204,
                  "nodeType": "EmitStatement",
                  "src": "1714:33:8"
                }
              ]
            },
            "functionSelector": "7250e224",
            "id": 1206,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4399,
                  "src": "1593:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1593:9:8"
              }
            ],
            "name": "addDistributor",
            "nameLocation": "1554:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1577:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "1569:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:17:8"
            },
            "returnParameters": {
              "id": 1183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1603:0:8"
            },
            "scope": 1661,
            "src": "1545:207:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1234,
              "nodeType": "Block",
              "src": "1817:151:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1214,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1208,
                          "src": "1831:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1850:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1842:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1215,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1842:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1842:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1831:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420616464726573732063616e6e6f74206265207a65726f",
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1854:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d71d38b05ecf5fc52d59eb7c731e8efcc9e9bf2fa5dafd0020e4b9071131c323",
                          "typeString": "literal_string \"Account address cannot be zero\""
                        },
                        "value": "Account address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d71d38b05ecf5fc52d59eb7c731e8efcc9e9bf2fa5dafd0020e4b9071131c323",
                          "typeString": "literal_string \"Account address cannot be zero\""
                        }
                      ],
                      "id": 1213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1823:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1222,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:64:8"
                },
                {
                  "expression": {
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1223,
                        "name": "isDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "1893:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1225,
                      "indexExpression": {
                        "id": 1224,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1208,
                        "src": "1907:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1893:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1918:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1893:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1228,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:30:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1230,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1208,
                        "src": "1948:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1957:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1229,
                      "name": "IsDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1125,
                      "src": "1934:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1934:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1233,
                  "nodeType": "EmitStatement",
                  "src": "1929:34:8"
                }
              ]
            },
            "functionSelector": "57c1f9e2",
            "id": 1235,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1211,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1210,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4399,
                  "src": "1807:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1807:9:8"
              }
            ],
            "name": "removeDistributor",
            "nameLocation": "1765:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1208,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1791:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "1783:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:17:8"
            },
            "returnParameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1817:0:8"
            },
            "scope": 1661,
            "src": "1756:212:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1263,
              "nodeType": "Block",
              "src": "2027:143:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1243,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1237,
                          "src": "2041:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2060:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2052:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1244,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2052:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2052:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2041:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420616464726573732063616e6e6f74206265207a65726f",
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2064:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d71d38b05ecf5fc52d59eb7c731e8efcc9e9bf2fa5dafd0020e4b9071131c323",
                          "typeString": "literal_string \"Account address cannot be zero\""
                        },
                        "value": "Account address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d71d38b05ecf5fc52d59eb7c731e8efcc9e9bf2fa5dafd0020e4b9071131c323",
                          "typeString": "literal_string \"Account address cannot be zero\""
                        }
                      ],
                      "id": 1242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2033:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2033:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1251,
                  "nodeType": "ExpressionStatement",
                  "src": "2033:64:8"
                },
                {
                  "expression": {
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1252,
                        "name": "isOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "2103:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1254,
                      "indexExpression": {
                        "id": 1253,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1237,
                        "src": "2114:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2103:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2125:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2103:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "2103:26:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1259,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1237,
                        "src": "2151:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2160:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1258,
                      "name": "IsOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1131,
                      "src": "2140:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2140:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1262,
                  "nodeType": "EmitStatement",
                  "src": "2135:30:8"
                }
              ]
            },
            "functionSelector": "9870d7fe",
            "id": 1264,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1240,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1239,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4399,
                  "src": "2017:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2017:9:8"
              }
            ],
            "name": "addOperator",
            "nameLocation": "1981:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1237,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2001:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "1993:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1992:17:8"
            },
            "returnParameters": {
              "id": 1241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2027:0:8"
            },
            "scope": 1661,
            "src": "1972:198:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1292,
              "nodeType": "Block",
              "src": "2232:145:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1272,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1266,
                          "src": "2246:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2265:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2257:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1273,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2257:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2257:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2246:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420616464726573732063616e6e6f74206265207a65726f",
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2269:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d71d38b05ecf5fc52d59eb7c731e8efcc9e9bf2fa5dafd0020e4b9071131c323",
                          "typeString": "literal_string \"Account address cannot be zero\""
                        },
                        "value": "Account address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d71d38b05ecf5fc52d59eb7c731e8efcc9e9bf2fa5dafd0020e4b9071131c323",
                          "typeString": "literal_string \"Account address cannot be zero\""
                        }
                      ],
                      "id": 1271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2238:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2238:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1280,
                  "nodeType": "ExpressionStatement",
                  "src": "2238:64:8"
                },
                {
                  "expression": {
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1281,
                        "name": "isOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "2308:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1283,
                      "indexExpression": {
                        "id": 1282,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "2319:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2308:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2330:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2308:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1286,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:27:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1288,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "2357:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2366:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1287,
                      "name": "IsOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1131,
                      "src": "2346:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2346:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1291,
                  "nodeType": "EmitStatement",
                  "src": "2341:31:8"
                }
              ]
            },
            "functionSelector": "ac8a584a",
            "id": 1293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1269,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1268,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4399,
                  "src": "2222:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2222:9:8"
              }
            ],
            "name": "removeOperator",
            "nameLocation": "2183:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1266,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2206:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "2198:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2197:17:8"
            },
            "returnParameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2232:0:8"
            },
            "scope": 1661,
            "src": "2174:203:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "2448:112:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1301,
                          "name": "startBlockHeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1094,
                          "src": "2462:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2482:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2462:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "537461727420626c6f636b2068656967687420616c72656164792073657421",
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2485:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d3a681cecc331139cb08f2130373de2bdc8d19932b96e8ced6b2c531ce5ff1a",
                          "typeString": "literal_string \"Start block height already set!\""
                        },
                        "value": "Start block height already set!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d3a681cecc331139cb08f2130373de2bdc8d19932b96e8ced6b2c531ce5ff1a",
                          "typeString": "literal_string \"Start block height already set!\""
                        }
                      ],
                      "id": 1300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2454:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2454:65:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1306,
                  "nodeType": "ExpressionStatement",
                  "src": "2454:65:8"
                },
                {
                  "expression": {
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1307,
                      "name": "startBlockHeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1094,
                      "src": "2525:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1308,
                      "name": "blockHeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1295,
                      "src": "2544:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2525:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1310,
                  "nodeType": "ExpressionStatement",
                  "src": "2525:30:8"
                }
              ]
            },
            "functionSelector": "ac5432df",
            "id": 1312,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1298,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1297,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4399,
                  "src": "2438:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2438:9:8"
              }
            ],
            "name": "setStartBlockHeight",
            "nameLocation": "2390:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "blockHeight",
                  "nameLocation": "2418:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "2410:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2410:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2409:21:8"
            },
            "returnParameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2448:0:8"
            },
            "scope": 1661,
            "src": "2381:179:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "2609:318:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1318,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2623:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2623:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1320,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4385,
                              "src": "2637:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2637:7:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2623:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1323,
                            "name": "isDistributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "2648:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1326,
                          "indexExpression": {
                            "expression": {
                              "id": 1324,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2662:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2662:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2648:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2623:50:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4469737472696275746f72206e6f7420617574686f72697a656421",
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2675:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65e30d14977cd84cb1028b67a230cf90c7b8282e543fc1e0a8e2a18e643fd854",
                          "typeString": "literal_string \"Distributor not authorized!\""
                        },
                        "value": "Distributor not authorized!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65e30d14977cd84cb1028b67a230cf90c7b8282e543fc1e0a8e2a18e643fd854",
                          "typeString": "literal_string \"Distributor not authorized!\""
                        }
                      ],
                      "id": 1317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2615:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2615:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1330,
                  "nodeType": "ExpressionStatement",
                  "src": "2615:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1332,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1314,
                          "src": "2719:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2728:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2719:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420746f206265206469737472696275746564206d7573742062652067726561746572207468616e207a65726f21",
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2731:53:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a08ac2ea04d3b7e00a2489708e003fd7cfc3cc7a4955fa21c77bc239cfb9bc4",
                          "typeString": "literal_string \"Amount to be distributed must be greater than zero!\""
                        },
                        "value": "Amount to be distributed must be greater than zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a08ac2ea04d3b7e00a2489708e003fd7cfc3cc7a4955fa21c77bc239cfb9bc4",
                          "typeString": "literal_string \"Amount to be distributed must be greater than zero!\""
                        }
                      ],
                      "id": 1331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2711:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2711:74:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "2711:74:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1341,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1314,
                        "src": "2811:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1338,
                        "name": "payoutForEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1097,
                        "src": "2791:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2791:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 1342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2791:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1343,
                  "nodeType": "ExpressionStatement",
                  "src": "2791:27:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1345,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2840:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2840:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1347,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1314,
                        "src": "2852:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1344,
                      "name": "Distribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1137,
                      "src": "2829:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2829:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1349,
                  "nodeType": "EmitStatement",
                  "src": "2824:35:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1353,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2888:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2888:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1357,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2908:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuarterlyPayout_$1661",
                              "typeString": "contract QuarterlyPayout"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_QuarterlyPayout_$1661",
                              "typeString": "contract QuarterlyPayout"
                            }
                          ],
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2900:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1355,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2900:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2900:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1359,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1314,
                        "src": "2915:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1350,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1086,
                        "src": "2865:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3413",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3470,
                      "src": "2865:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3413_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3413_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1361,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:57:8"
                }
              ]
            },
            "functionSelector": "91c05b0b",
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distribute",
            "nameLocation": "2573:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1314,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2592:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "2584:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2584:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2583:16:8"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2609:0:8"
            },
            "scope": 1661,
            "src": "2564:363:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1372,
              "nodeType": "Block",
              "src": "3161:39:8",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1369,
                      "name": "payoutForEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1097,
                      "src": "3174:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3174:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1368,
                  "id": 1371,
                  "nodeType": "Return",
                  "src": "3167:28:8"
                }
              ]
            },
            "documentation": {
              "id": 1364,
              "nodeType": "StructuredDocumentation",
              "src": "2930:175:8",
              "text": " @dev \n   This is not current epoch, but rather the number of claimable epochs.\n   Name not changed for the sake of compatibility with former implementation."
            },
            "functionSelector": "76671808",
            "id": 1373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentEpoch",
            "nameLocation": "3117:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3129:2:8"
            },
            "returnParameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "3152:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3152:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3151:9:8"
            },
            "scope": 1661,
            "src": "3108:92:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1404,
              "nodeType": "Block",
              "src": "3243:181:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1379,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1375,
                          "src": "3257:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1380,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3266:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3266:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3257:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c7920636c61696d20666f72206f776e206163636f756e74",
                        "id": 1383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3278:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c09b154db777387c4c1a0a5c304dae03ad19f121df7770fb5823cbbdfe429707",
                          "typeString": "literal_string \"Can only claim for own account\""
                        },
                        "value": "Can only claim for own account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c09b154db777387c4c1a0a5c304dae03ad19f121df7770fb5823cbbdfe429707",
                          "typeString": "literal_string \"Can only claim for own account\""
                        }
                      ],
                      "id": 1378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3249:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3249:62:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1385,
                  "nodeType": "ExpressionStatement",
                  "src": "3249:62:8"
                },
                {
                  "assignments": [
                    1387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1387,
                      "mutability": "mutable",
                      "name": "epoch",
                      "nameLocation": "3325:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1404,
                      "src": "3317:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1386,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3317:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1390,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1388,
                      "name": "currentEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1373,
                      "src": "3333:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3333:14:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3317:30:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1391,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1387,
                      "src": "3357:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3365:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3357:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1403,
                  "nodeType": "IfStatement",
                  "src": "3353:67:8",
                  "trueBody": {
                    "id": 1402,
                    "nodeType": "Block",
                    "src": "3368:52:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1395,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "3393:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 1398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3410:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "expression": {
                                  "id": 1396,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1387,
                                  "src": "3400:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4124,
                                "src": "3400:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3400:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1394,
                            "name": "_claimUntilEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1619,
                            "src": "3376:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3376:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1401,
                        "nodeType": "ExpressionStatement",
                        "src": "3376:37:8"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "1e83409a",
            "id": 1405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "3213:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1375,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3227:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "3219:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3219:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3218:15:8"
            },
            "returnParameters": {
              "id": 1377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3243:0:8"
            },
            "scope": 1661,
            "src": "3204:220:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1435,
              "nodeType": "Block",
              "src": "3496:161:8",
              "statements": [
                {
                  "assignments": [
                    1413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1413,
                      "mutability": "mutable",
                      "name": "epoch",
                      "nameLocation": "3510:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1435,
                      "src": "3502:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1412,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3502:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1416,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1414,
                      "name": "currentEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1373,
                      "src": "3518:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3518:14:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3502:30:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1417,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1413,
                      "src": "3542:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3551:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3542:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1422,
                  "nodeType": "IfStatement",
                  "src": "3538:24:8",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 1420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3561:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 1411,
                    "id": 1421,
                    "nodeType": "Return",
                    "src": "3554:8:8"
                  }
                },
                {
                  "assignments": [
                    1424,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1424,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3577:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1435,
                      "src": "3569:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1423,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3569:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1432,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1426,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1407,
                        "src": "3613:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 1429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3630:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 1427,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1413,
                            "src": "3620:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4124,
                          "src": "3620:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3620:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1425,
                      "name": "_getClaimableUntilEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1574,
                      "src": "3589:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3589:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3568:65:8"
                },
                {
                  "expression": {
                    "id": 1433,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1424,
                    "src": "3646:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1411,
                  "id": 1434,
                  "nodeType": "Return",
                  "src": "3639:13:8"
                }
              ]
            },
            "functionSelector": "a583024b",
            "id": 1436,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimable",
            "nameLocation": "3437:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1407,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3458:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1436,
                  "src": "3450:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3449:15:8"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1410,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1436,
                  "src": "3487:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3487:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3486:9:8"
            },
            "scope": 1661,
            "src": "3428:229:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "3755:117:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1443,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3769:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3769:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1445,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4385,
                              "src": "3783:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3783:7:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3769:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1448,
                            "name": "isOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "3794:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1451,
                          "indexExpression": {
                            "expression": {
                              "id": 1449,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3805:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3805:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3794:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3769:47:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656421",
                        "id": 1453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3818:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0d1217d1a540b675d6bc9b8e59bb1c65d79409f3bb1a57db1a4187473e8881e",
                          "typeString": "literal_string \"Not authorized!\""
                        },
                        "value": "Not authorized!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0d1217d1a540b675d6bc9b8e59bb1c65d79409f3bb1a57db1a4187473e8881e",
                          "typeString": "literal_string \"Not authorized!\""
                        }
                      ],
                      "id": 1442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3761:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3761:75:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1455,
                  "nodeType": "ExpressionStatement",
                  "src": "3761:75:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1456,
                      "name": "_getCurrentEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1660,
                      "src": "3849:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3849:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1441,
                  "id": 1458,
                  "nodeType": "Return",
                  "src": "3842:25:8"
                }
              ]
            },
            "documentation": {
              "id": 1437,
              "nodeType": "StructuredDocumentation",
              "src": "3659:35:8",
              "text": " @dev get current epoch"
            },
            "functionSelector": "b97dd9e2",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentEpoch",
            "nameLocation": "3706:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3721:2:8"
            },
            "returnParameters": {
              "id": 1441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1440,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "3746:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3746:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3745:9:8"
            },
            "scope": 1661,
            "src": "3697:175:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1486,
              "nodeType": "Block",
              "src": "4003:131:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1469,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4017:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4017:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1471,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4385,
                              "src": "4031:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4031:7:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4017:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1474,
                            "name": "isOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "4042:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1477,
                          "indexExpression": {
                            "expression": {
                              "id": 1475,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4053:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4053:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4042:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4017:47:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656421",
                        "id": 1479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4066:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0d1217d1a540b675d6bc9b8e59bb1c65d79409f3bb1a57db1a4187473e8881e",
                          "typeString": "literal_string \"Not authorized!\""
                        },
                        "value": "Not authorized!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0d1217d1a540b675d6bc9b8e59bb1c65d79409f3bb1a57db1a4187473e8881e",
                          "typeString": "literal_string \"Not authorized!\""
                        }
                      ],
                      "id": 1468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4009:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4009:75:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1481,
                  "nodeType": "ExpressionStatement",
                  "src": "4009:75:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1483,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "4123:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1482,
                      "name": "_getEpochStartBlockHeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1636,
                      "src": "4097:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4097:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1467,
                  "id": 1485,
                  "nodeType": "Return",
                  "src": "4090:39:8"
                }
              ]
            },
            "documentation": {
              "id": 1461,
              "nodeType": "StructuredDocumentation",
              "src": "3874:46:8",
              "text": " @dev get epoch start block height"
            },
            "functionSelector": "30f3928a",
            "id": 1487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEpochStartBlockHeight",
            "nameLocation": "3932:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "epoch",
                  "nameLocation": "3965:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1487,
                  "src": "3957:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3956:15:8"
            },
            "returnParameters": {
              "id": 1467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1466,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1487,
                  "src": "3994:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3994:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3993:9:8"
            },
            "scope": 1661,
            "src": "3923:211:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1573,
              "nodeType": "Block",
              "src": "4396:587:8",
              "statements": [
                {
                  "assignments": [
                    1500
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1500,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4410:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1573,
                      "src": "4402:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1499,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4402:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1502,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4419:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4402:18:8"
                },
                {
                  "assignments": [
                    1504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1504,
                      "mutability": "mutable",
                      "name": "epoch",
                      "nameLocation": "4434:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1573,
                      "src": "4426:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1503,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4426:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1506,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4442:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4426:17:8"
                },
                {
                  "assignments": [
                    1508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1508,
                      "mutability": "mutable",
                      "name": "blockHeightAtEpochStartTime",
                      "nameLocation": "4457:27:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1573,
                      "src": "4449:35:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4449:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1509,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4449:35:8"
                },
                {
                  "assignments": [
                    1511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1511,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nameLocation": "4498:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1573,
                      "src": "4490:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4490:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1512,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4490:19:8"
                },
                {
                  "body": {
                    "id": 1565,
                    "nodeType": "Block",
                    "src": "4582:365:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1525,
                            "name": "blockHeightAtEpochStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1508,
                            "src": "4590:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1527,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1504,
                                "src": "4646:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1526,
                              "name": "_getEpochStartBlockHeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1636,
                              "src": "4620:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 1528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4620:32:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4590:62:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1530,
                        "nodeType": "ExpressionStatement",
                        "src": "4590:62:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1531,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4664:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "4664:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1533,
                            "name": "blockHeightAtEpochStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1508,
                            "src": "4680:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4664:43:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1536,
                        "nodeType": "IfStatement",
                        "src": "4660:54:8",
                        "trueBody": {
                          "id": 1535,
                          "nodeType": "Break",
                          "src": "4709:5:8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1537,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1511,
                            "src": "4722:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1540,
                                "name": "blockHeightAtEpochStartTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1508,
                                "src": "4757:27:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1538,
                                "name": "vested",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1089,
                                "src": "4736:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVested_$4492",
                                  "typeString": "contract IVested"
                                }
                              },
                              "id": 1539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalSupplyAt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4491,
                              "src": "4736:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view external returns (uint256)"
                              }
                            },
                            "id": 1541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4736:49:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4722:63:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1543,
                        "nodeType": "ExpressionStatement",
                        "src": "4722:63:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1544,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1511,
                            "src": "4797:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4811:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4797:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1564,
                        "nodeType": "IfStatement",
                        "src": "4793:148:8",
                        "trueBody": {
                          "id": 1563,
                          "nodeType": "Block",
                          "src": "4814:127:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 1561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1547,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1500,
                                  "src": "4824:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1559,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1511,
                                      "src": "4920:11:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 1554,
                                              "name": "owner",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1490,
                                              "src": "4879:5:8",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 1555,
                                              "name": "blockHeightAtEpochStartTime",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1508,
                                              "src": "4886:27:8",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 1552,
                                              "name": "vested",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1089,
                                              "src": "4860:6:8",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IVested_$4492",
                                                "typeString": "contract IVested"
                                              }
                                            },
                                            "id": 1553,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "balanceOfAt",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4477,
                                            "src": "4860:18:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                              "typeString": "function (address,uint256) view external returns (uint256)"
                                            }
                                          },
                                          "id": 1556,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4860:54:8",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1548,
                                            "name": "payoutForEpoch",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1097,
                                            "src": "4834:14:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                              "typeString": "uint256[] storage ref"
                                            }
                                          },
                                          "id": 1550,
                                          "indexExpression": {
                                            "id": 1549,
                                            "name": "epoch",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1504,
                                            "src": "4849:5:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4834:21:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1551,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4139,
                                        "src": "4834:25:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1557,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4834:81:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1558,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4154,
                                    "src": "4834:85:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1560,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4834:98:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4824:108:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1562,
                              "nodeType": "ExpressionStatement",
                              "src": "4824:108:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1519,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1504,
                      "src": "4551:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1520,
                      "name": "endingEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1492,
                      "src": "4560:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4551:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1566,
                  "initializationExpression": {
                    "expression": {
                      "id": 1517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1513,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1504,
                        "src": "4520:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 1514,
                          "name": "claimedEpoches",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1101,
                          "src": "4528:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1516,
                        "indexExpression": {
                          "id": 1515,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1490,
                          "src": "4543:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4528:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4520:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1518,
                    "nodeType": "ExpressionStatement",
                    "src": "4520:29:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4573:7:8",
                      "subExpression": {
                        "id": 1522,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1504,
                        "src": "4573:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1524,
                    "nodeType": "ExpressionStatement",
                    "src": "4573:7:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "4515:432:8"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1567,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1500,
                        "src": "4960:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1568,
                          "name": "epoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1504,
                          "src": "4968:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4976:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4968:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1571,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4959:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1498,
                  "id": 1572,
                  "nodeType": "Return",
                  "src": "4952:26:8"
                }
              ]
            },
            "documentation": {
              "id": 1488,
              "nodeType": "StructuredDocumentation",
              "src": "4137:147:8",
              "text": " @dev \n   Rewarded epochs might extend to the future, but can only \n   claim until epochs no later than the current actual epoch."
            },
            "id": 1574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getClaimableUntilEpoch",
            "nameLocation": "4296:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1490,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4328:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "4320:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4320:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "endingEpoch",
                  "nameLocation": "4343:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "4335:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4335:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4319:36:8"
            },
            "returnParameters": {
              "id": 1498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1495,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "4378:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4378:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1497,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "4387:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4387:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4377:18:8"
            },
            "scope": 1661,
            "src": "4287:696:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1618,
              "nodeType": "Block",
              "src": "5058:285:8",
              "statements": [
                {
                  "assignments": [
                    1582,
                    1584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1582,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "5073:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1618,
                      "src": "5065:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1581,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5065:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1584,
                      "mutability": "mutable",
                      "name": "lastClaimedEpoch",
                      "nameLocation": "5089:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1618,
                      "src": "5081:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1583,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5081:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1589,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1586,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1576,
                        "src": "5133:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1587,
                        "name": "endingEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1578,
                        "src": "5140:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1585,
                      "name": "_getClaimableUntilEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1574,
                      "src": "5109:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5109:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5064:88:8"
                },
                {
                  "expression": {
                    "id": 1597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1590,
                        "name": "claimedEpoches",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "5158:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1592,
                      "indexExpression": {
                        "id": 1591,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1576,
                        "src": "5173:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5158:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 1595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5203:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 1593,
                          "name": "lastClaimedEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1584,
                          "src": "5182:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4109,
                        "src": "5182:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5182:23:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5158:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1598,
                  "nodeType": "ExpressionStatement",
                  "src": "5158:47:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1599,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1582,
                      "src": "5215:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5224:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5215:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1617,
                  "nodeType": "IfStatement",
                  "src": "5211:128:8",
                  "trueBody": {
                    "id": 1616,
                    "nodeType": "Block",
                    "src": "5227:112:8",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1603,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1576,
                              "src": "5246:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1604,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1582,
                              "src": "5253:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1605,
                              "name": "lastClaimedEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1584,
                              "src": "5261:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1606,
                              "name": "endingEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1578,
                              "src": "5279:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1602,
                            "name": "Claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "5240:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5240:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1608,
                        "nodeType": "EmitStatement",
                        "src": "5235:56:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1612,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1576,
                              "src": "5318:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1613,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1582,
                              "src": "5325:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1609,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "5299:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3413",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3444,
                            "src": "5299:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3413_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3413_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5299:33:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1615,
                        "nodeType": "ExpressionStatement",
                        "src": "5299:33:8"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claimUntilEpoch",
            "nameLocation": "4996:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1576,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5021:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1619,
                  "src": "5013:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5013:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1578,
                  "mutability": "mutable",
                  "name": "endingEpoch",
                  "nameLocation": "5036:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1619,
                  "src": "5028:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5028:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5012:36:8"
            },
            "returnParameters": {
              "id": 1580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5058:0:8"
            },
            "scope": 1661,
            "src": "4987:356:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1635,
              "nodeType": "Block",
              "src": "5508:63:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1631,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1622,
                            "src": "5559:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1629,
                            "name": "EPOCH_BLOCKS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1092,
                            "src": "5542:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4139,
                          "src": "5542:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5542:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1627,
                        "name": "startBlockHeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1094,
                        "src": "5521:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4109,
                      "src": "5521:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5521:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1626,
                  "id": 1634,
                  "nodeType": "Return",
                  "src": "5514:52:8"
                }
              ]
            },
            "documentation": {
              "id": 1620,
              "nodeType": "StructuredDocumentation",
              "src": "5346:78:8",
              "text": " @dev \n   Given epoch number, get the epoch start block height."
            },
            "id": 1636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getEpochStartBlockHeight",
            "nameLocation": "5436:25:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1622,
                  "mutability": "mutable",
                  "name": "epoch",
                  "nameLocation": "5470:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "5462:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5462:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5461:15:8"
            },
            "returnParameters": {
              "id": 1626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1625,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "5499:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5499:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5498:9:8"
            },
            "scope": 1661,
            "src": "5427:144:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1659,
              "nodeType": "Block",
              "src": "5687:158:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1643,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5701:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "5701:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1645,
                          "name": "startBlockHeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1094,
                          "src": "5717:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5701:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207061796f757420636f6e7472616374206973206e6f74207374617274656420796574",
                        "id": 1647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5735:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d7f46bd9ce48b2c32d04f910013b3336010b9934f5ff2726564ea7179fa566e",
                          "typeString": "literal_string \"The payout contract is not started yet\""
                        },
                        "value": "The payout contract is not started yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d7f46bd9ce48b2c32d04f910013b3336010b9934f5ff2726564ea7179fa566e",
                          "typeString": "literal_string \"The payout contract is not started yet\""
                        }
                      ],
                      "id": 1642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5693:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5693:83:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1649,
                  "nodeType": "ExpressionStatement",
                  "src": "5693:83:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1656,
                        "name": "EPOCH_BLOCKS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1092,
                        "src": "5827:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1650,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5790:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "5790:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1652,
                              "name": "startBlockHeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1094,
                              "src": "5805:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5790:31:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1654,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5789:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4154,
                      "src": "5789:37:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5789:51:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1641,
                  "id": 1658,
                  "nodeType": "Return",
                  "src": "5782:58:8"
                }
              ]
            },
            "documentation": {
              "id": 1637,
              "nodeType": "StructuredDocumentation",
              "src": "5574:51:8",
              "text": " @dev This is the actual current epoch."
            },
            "id": 1660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getCurrentEpoch",
            "nameLocation": "5637:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5653:2:8"
            },
            "returnParameters": {
              "id": 1641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1640,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1660,
                  "src": "5678:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5678:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5677:9:8"
            },
            "scope": 1661,
            "src": "5628:217:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1662,
        "src": "328:5519:8",
        "usedErrors": []
      }
    ],
    "src": "32:5816:8"
  },
  "bytecode": "60c06040523480156200001157600080fd5b50604051620015923803806200159283398101604081905262000034916200015e565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b038216620000d15760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f2e00000060448201526064015b60405180910390fd5b6001600160a01b038116620001295760405162461bcd60e51b815260206004820152601e60248201527f56657374656420616464726573732063616e6e6f74206265207a65726f2e00006044820152606401620000c8565b6001600160a01b039182166080521660a05262000196565b80516001600160a01b03811681146200015957600080fd5b919050565b600080604083850312156200017257600080fd5b6200017d8362000141565b91506200018d6020840162000141565b90509250929050565b60805160a0516113ba620001d86000396000818161031d01528181610cae0152610d680152600081816102ed015281816107780152610ba901526113ba6000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638f0c86fa116100b8578063ac8a584a1161007c578063ac8a584a146102ba578063b97dd9e2146102cd578063f2fde38b146102d5578063fc0c546a146102e8578063fc9dc4ff1461030f578063fea5657c1461031857600080fd5b80638f0c86fa1461024b57806391c05b0b1461026e5780639870d7fe14610281578063a583024b14610294578063ac5432df146102a757600080fd5b8063715018a61161010a578063715018a6146101db5780637250e224146101e357806374c259c6146101f657806376671808146101fe578063828df5ee146102065780638da5cb5b1461022657600080fd5b80631e83409a1461014757806330f3928a1461015c57806357c1f9e2146101825780636aa8405f146101955780636d70f7ae146101a8575b600080fd5b61015a610155366004611169565b61033f565b005b61016f61016a366004611192565b6103c7565b6040519081526020015b60405180910390f35b61015a610190366004611169565b61043d565b61016f6101a3366004611192565b6104e2565b6101cb6101b6366004611169565b60056020526000908152604090205460ff1681565b6040519015158152602001610179565b61015a610503565b61015a6101f1366004611169565b610577565b61016f600a81565b60025461016f565b61016f610214366004611169565b60036020526000908152604090205481565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610179565b6101cb610259366004611169565b60046020526000908152604090205460ff1681565b61015a61027c366004611192565b61061d565b61015a61028f366004611169565b6107a3565b61016f6102a2366004611169565b61084a565b61015a6102b5366004611192565b610885565b61015a6102c8366004611169565b610904565b61016f6109a3565b61015a6102e3366004611169565b610a17565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b61016f60015481565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038116331461039c5760405162461bcd60e51b815260206004820152601e60248201527f43616e206f6e6c7920636c61696d20666f72206f776e206163636f756e74000060448201526064015b60405180910390fd5b60006103a760025490565b905080156103c3576103c3826103be836001610b01565b610b14565b5050565b600080546001600160a01b03163314806103f057503360009081526005602052604090205460ff165b61042e5760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420617574686f72697a65642160881b6044820152606401610393565b61043782610bd6565b92915050565b6000546001600160a01b031633146104675760405162461bcd60e51b8152600401610393906111ab565b6001600160a01b03811661048d5760405162461bcd60e51b8152600401610393906111e0565b6001600160a01b0381166000818152600460209081526040808320805460ff19169055519182527e1c2d2cf3abe61110ec31c39e6b778412525790f022085d2c3318837202ccfe91015b60405180910390a250565b600281815481106104f257600080fd5b600091825260209091200154905081565b6000546001600160a01b0316331461052d5760405162461bcd60e51b8152600401610393906111ab565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105a15760405162461bcd60e51b8152600401610393906111ab565b6001600160a01b0381166105c75760405162461bcd60e51b8152600401610393906111e0565b6001600160a01b038116600081815260046020908152604091829020805460ff1916600190811790915591519182527e1c2d2cf3abe61110ec31c39e6b778412525790f022085d2c3318837202ccfe91016104d7565b6000546001600160a01b031633148061064557503360009081526004602052604090205460ff165b6106915760405162461bcd60e51b815260206004820152601b60248201527f4469737472696275746f72206e6f7420617574686f72697a65642100000000006044820152606401610393565b600081116106fd5760405162461bcd60e51b815260206004820152603360248201527f416d6f756e7420746f206265206469737472696275746564206d7573742062656044820152722067726561746572207468616e207a65726f2160681b6064820152608401610393565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0181905560408051338152602081018390527fc1d32ad5cca423e7dda2123dbf8c482f8e77d00b631c06e903a47f2cec1334df910160405180910390a16107a06001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610bef565b50565b6000546001600160a01b031633146107cd5760405162461bcd60e51b8152600401610393906111ab565b6001600160a01b0381166107f35760405162461bcd60e51b8152600401610393906111e0565b6001600160a01b038116600081815260056020908152604091829020805460ff1916600190811790915591519182527f5dcc54de76a00f463c78ab7c4546b9d243502fb27ac63cc6df71a88b21aad18691016104d7565b60008061085660025490565b9050806108665750600092915050565b600061087c84610877846001610b01565b610c5a565b50949350505050565b6000546001600160a01b031633146108af5760405162461bcd60e51b8152600401610393906111ab565b600154156108ff5760405162461bcd60e51b815260206004820152601f60248201527f537461727420626c6f636b2068656967687420616c72656164792073657421006044820152606401610393565b600155565b6000546001600160a01b0316331461092e5760405162461bcd60e51b8152600401610393906111ab565b6001600160a01b0381166109545760405162461bcd60e51b8152600401610393906111e0565b6001600160a01b0381166000818152600560209081526040808320805460ff19169055519182527f5dcc54de76a00f463c78ab7c4546b9d243502fb27ac63cc6df71a88b21aad18691016104d7565b600080546001600160a01b03163314806109cc57503360009081526005602052604090205460ff165b610a0a5760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420617574686f72697a65642160881b6044820152606401610393565b610a12610e50565b905090565b6000546001600160a01b03163314610a415760405162461bcd60e51b8152600401610393906111ab565b6001600160a01b038116610aa65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610393565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610b0d828461122d565b9392505050565b600080610b218484610c5a565b9092509050610b31816001610ec6565b6001600160a01b0385166000908152600360205260409020558115610bd05760408051838152602081018390529081018490526001600160a01b038516907f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef19060600160405180910390a2610bd06001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168584610ed2565b50505050565b6000610437610be6600a84610f07565b60015490610ec6565b6040516001600160a01b0380851660248301528316604482015260648101829052610bd09085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f13565b6001600160a01b0382166000908152600360205260408120548190819081805b868311610e3557610c8a83610bd6565b9150814311610c9857610e35565b604051630981b24d60e41b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063981b24d09060240160206040518083038186803b158015610cf857600080fd5b505afa158015610d0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d309190611244565b90508015610e235760405163277166bf60e11b81526001600160a01b03898116600483015260248201849052610e16918391610e10917f000000000000000000000000000000000000000000000000000000000000000090911690634ee2cd7e9060440160206040518083038186803b158015610dac57600080fd5b505afa158015610dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de49190611244565b60028781548110610df757610df761125d565b9060005260206000200154610f0790919063ffffffff16565b90610fe5565b610e209085611273565b93505b82610e2d8161128b565b935050610c7a565b83610e4160018561122d565b95509550505050509250929050565b6000600154431015610eb35760405162461bcd60e51b815260206004820152602660248201527f546865207061796f757420636f6e7472616374206973206e6f742073746172746044820152651959081e595d60d21b6064820152608401610393565b610a12600a60015443610e10919061122d565b6000610b0d8284611273565b6040516001600160a01b038316602482015260448101829052610f0290849063a9059cbb60e01b90606401610c23565b505050565b6000610b0d82846112a6565b6000610f68826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ff19092919063ffffffff16565b805190915015610f025780806020019051810190610f8691906112c5565b610f025760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610393565b6000610b0d82846112e7565b60606110008484600085611008565b949350505050565b6060824710156110695760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610393565b843b6110b75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610393565b600080866001600160a01b031685876040516110d39190611335565b60006040518083038185875af1925050503d8060008114611110576040519150601f19603f3d011682016040523d82523d6000602084013e611115565b606091505b5091509150611125828286611130565b979650505050505050565b6060831561113f575081610b0d565b82511561114f5782518084602001fd5b8160405162461bcd60e51b81526004016103939190611351565b60006020828403121561117b57600080fd5b81356001600160a01b0381168114610b0d57600080fd5b6000602082840312156111a457600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f4163636f756e7420616464726573732063616e6e6f74206265207a65726f0000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561123f5761123f611217565b500390565b60006020828403121561125657600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000821982111561128657611286611217565b500190565b600060001982141561129f5761129f611217565b5060010190565b60008160001904831182151516156112c0576112c0611217565b500290565b6000602082840312156112d757600080fd5b81518015158114610b0d57600080fd5b60008261130457634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101561132457818101518382015260200161130c565b83811115610bd05750506000910152565b60008251611347818460208701611309565b9190910192915050565b6020815260008251806020840152611370816040850160208701611309565b601f01601f1916919091016040019291505056fea264697066735822122094c5231a20fbc30ad0e73ebff800070f8666b375d3f406326c2b32656a9a59c164736f6c63430008090033",
  "bytecodeSha1": "7d54e0fc245000e502f1bf830c2166fed6bda370",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "QuarterlyPayout",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "82": [
            2082,
            2104,
            true
          ]
        }
      },
      "1": {},
      "18": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "83": [
            3550,
            3571,
            false
          ],
          "84": [
            3679,
            3709,
            true
          ]
        }
      },
      "3": {
        "Address._verifyCallResult": {
          "80": [
            7226,
            7233,
            false
          ],
          "81": [
            7367,
            7388,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "79": [
            4759,
            4789,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "8": {
        "QuarterlyPayout._claimUntilEpoch": {
          "75": [
            5215,
            5225,
            false
          ]
        },
        "QuarterlyPayout._getClaimableUntilEpoch": {
          "76": [
            4664,
            4707,
            false
          ],
          "77": [
            4797,
            4812,
            false
          ]
        },
        "QuarterlyPayout._getCurrentEpoch": {
          "78": [
            5701,
            5733,
            true
          ]
        },
        "QuarterlyPayout.addDistributor": {
          "65": [
            1617,
            1638,
            true
          ]
        },
        "QuarterlyPayout.addOperator": {
          "69": [
            2041,
            2062,
            true
          ]
        },
        "QuarterlyPayout.claim": {
          "60": [
            3257,
            3276,
            true
          ],
          "61": [
            3357,
            3366,
            false
          ]
        },
        "QuarterlyPayout.distribute": {
          "66": [
            2623,
            2644,
            true
          ],
          "67": [
            2648,
            2673,
            true
          ],
          "68": [
            2719,
            2729,
            true
          ]
        },
        "QuarterlyPayout.getClaimable": {
          "70": [
            3542,
            3552,
            false
          ]
        },
        "QuarterlyPayout.getCurrentEpoch": {
          "73": [
            3769,
            3790,
            true
          ],
          "74": [
            3794,
            3816,
            true
          ]
        },
        "QuarterlyPayout.getEpochStartBlockHeight": {
          "62": [
            4017,
            4038,
            true
          ],
          "63": [
            4042,
            4064,
            true
          ]
        },
        "QuarterlyPayout.removeDistributor": {
          "64": [
            1831,
            1852,
            true
          ]
        },
        "QuarterlyPayout.removeOperator": {
          "72": [
            2246,
            2267,
            true
          ]
        },
        "QuarterlyPayout.setStartBlockHeight": {
          "71": [
            2462,
            2483,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "1": [
            1133,
            1146
          ]
        },
        "Ownable.renounceOwnership": {
          "10": [
            1764,
            1809
          ],
          "11": [
            1819,
            1838
          ]
        },
        "Ownable.transferOwnership": {
          "31": [
            2074,
            2147
          ],
          "32": [
            2157,
            2200
          ],
          "33": [
            2210,
            2227
          ]
        }
      },
      "1": {},
      "18": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "52": [
            3671,
            3756
          ]
        },
        "SafeERC20.safeTransfer": {
          "50": [
            716,
            802
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "39": [
            915,
            1011
          ]
        }
      },
      "3": {
        "Address._verifyCallResult": {
          "58": [
            7249,
            7266
          ],
          "59": [
            7757,
            7777
          ]
        },
        "Address.functionCall": {
          "54": [
            3700,
            3759
          ]
        },
        "Address.functionCallWithValue": {
          "55": [
            4751,
            4832
          ],
          "56": [
            4842,
            4902
          ],
          "57": [
            5057,
            5116
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "6": [
            658,
            675
          ]
        }
      },
      "5": {
        "SafeMath.add": {
          "49": [
            2749,
            2761
          ]
        },
        "SafeMath.div": {
          "53": [
            3844,
            3856
          ]
        },
        "SafeMath.mul": {
          "51": [
            3459,
            3471
          ]
        },
        "SafeMath.sub": {
          "34": [
            3116,
            3128
          ]
        }
      },
      "8": {
        "QuarterlyPayout._claimUntilEpoch": {
          "35": [
            5158,
            5205
          ],
          "36": [
            5235,
            5291
          ],
          "37": [
            5299,
            5332
          ]
        },
        "QuarterlyPayout._getClaimableUntilEpoch": {
          "40": [
            4520,
            4549
          ],
          "41": [
            4590,
            4652
          ],
          "42": [
            4709,
            4714
          ],
          "43": [
            4722,
            4785
          ],
          "44": [
            4824,
            4932
          ],
          "45": [
            4573,
            4580
          ],
          "46": [
            4952,
            4978
          ]
        },
        "QuarterlyPayout._getCurrentEpoch": {
          "47": [
            5693,
            5776
          ],
          "48": [
            5782,
            5840
          ]
        },
        "QuarterlyPayout._getEpochStartBlockHeight": {
          "38": [
            5514,
            5566
          ]
        },
        "QuarterlyPayout.addDistributor": {
          "12": [
            1609,
            1673
          ],
          "13": [
            1679,
            1708
          ],
          "14": [
            1714,
            1747
          ]
        },
        "QuarterlyPayout.addOperator": {
          "20": [
            2033,
            2097
          ],
          "21": [
            2103,
            2129
          ],
          "22": [
            2135,
            2165
          ]
        },
        "QuarterlyPayout.claim": {
          "2": [
            3249,
            3311
          ],
          "3": [
            3376,
            3413
          ]
        },
        "QuarterlyPayout.currentEpoch": {
          "0": [
            3167,
            3195
          ]
        },
        "QuarterlyPayout.distribute": {
          "15": [
            2615,
            2705
          ],
          "16": [
            2711,
            2785
          ],
          "17": [
            2791,
            2818
          ],
          "18": [
            2824,
            2859
          ],
          "19": [
            2865,
            2922
          ]
        },
        "QuarterlyPayout.getClaimable": {
          "23": [
            3554,
            3562
          ]
        },
        "QuarterlyPayout.getCurrentEpoch": {
          "29": [
            3761,
            3836
          ],
          "30": [
            3842,
            3867
          ]
        },
        "QuarterlyPayout.getEpochStartBlockHeight": {
          "4": [
            4009,
            4084
          ],
          "5": [
            4090,
            4129
          ]
        },
        "QuarterlyPayout.removeDistributor": {
          "7": [
            1823,
            1887
          ],
          "8": [
            1893,
            1923
          ],
          "9": [
            1929,
            1963
          ]
        },
        "QuarterlyPayout.removeOperator": {
          "26": [
            2238,
            2302
          ],
          "27": [
            2308,
            2335
          ],
          "28": [
            2341,
            2372
          ]
        },
        "QuarterlyPayout.setStartBlockHeight": {
          "24": [
            2454,
            2519
          ],
          "25": [
            2525,
            2555
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC20",
    "IVested",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101425760003560e01c80638f0c86fa116100b8578063ac8a584a1161007c578063ac8a584a146102ba578063b97dd9e2146102cd578063f2fde38b146102d5578063fc0c546a146102e8578063fc9dc4ff1461030f578063fea5657c1461031857600080fd5b80638f0c86fa1461024b57806391c05b0b1461026e5780639870d7fe14610281578063a583024b14610294578063ac5432df146102a757600080fd5b8063715018a61161010a578063715018a6146101db5780637250e224146101e357806374c259c6146101f657806376671808146101fe578063828df5ee146102065780638da5cb5b1461022657600080fd5b80631e83409a1461014757806330f3928a1461015c57806357c1f9e2146101825780636aa8405f146101955780636d70f7ae146101a8575b600080fd5b61015a610155366004611169565b61033f565b005b61016f61016a366004611192565b6103c7565b6040519081526020015b60405180910390f35b61015a610190366004611169565b61043d565b61016f6101a3366004611192565b6104e2565b6101cb6101b6366004611169565b60056020526000908152604090205460ff1681565b6040519015158152602001610179565b61015a610503565b61015a6101f1366004611169565b610577565b61016f600a81565b60025461016f565b61016f610214366004611169565b60036020526000908152604090205481565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610179565b6101cb610259366004611169565b60046020526000908152604090205460ff1681565b61015a61027c366004611192565b61061d565b61015a61028f366004611169565b6107a3565b61016f6102a2366004611169565b61084a565b61015a6102b5366004611192565b610885565b61015a6102c8366004611169565b610904565b61016f6109a3565b61015a6102e3366004611169565b610a17565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b61016f60015481565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038116331461039c5760405162461bcd60e51b815260206004820152601e60248201527f43616e206f6e6c7920636c61696d20666f72206f776e206163636f756e74000060448201526064015b60405180910390fd5b60006103a760025490565b905080156103c3576103c3826103be836001610b01565b610b14565b5050565b600080546001600160a01b03163314806103f057503360009081526005602052604090205460ff165b61042e5760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420617574686f72697a65642160881b6044820152606401610393565b61043782610bd6565b92915050565b6000546001600160a01b031633146104675760405162461bcd60e51b8152600401610393906111ab565b6001600160a01b03811661048d5760405162461bcd60e51b8152600401610393906111e0565b6001600160a01b0381166000818152600460209081526040808320805460ff19169055519182527e1c2d2cf3abe61110ec31c39e6b778412525790f022085d2c3318837202ccfe91015b60405180910390a250565b600281815481106104f257600080fd5b600091825260209091200154905081565b6000546001600160a01b0316331461052d5760405162461bcd60e51b8152600401610393906111ab565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105a15760405162461bcd60e51b8152600401610393906111ab565b6001600160a01b0381166105c75760405162461bcd60e51b8152600401610393906111e0565b6001600160a01b038116600081815260046020908152604091829020805460ff1916600190811790915591519182527e1c2d2cf3abe61110ec31c39e6b778412525790f022085d2c3318837202ccfe91016104d7565b6000546001600160a01b031633148061064557503360009081526004602052604090205460ff165b6106915760405162461bcd60e51b815260206004820152601b60248201527f4469737472696275746f72206e6f7420617574686f72697a65642100000000006044820152606401610393565b600081116106fd5760405162461bcd60e51b815260206004820152603360248201527f416d6f756e7420746f206265206469737472696275746564206d7573742062656044820152722067726561746572207468616e207a65726f2160681b6064820152608401610393565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0181905560408051338152602081018390527fc1d32ad5cca423e7dda2123dbf8c482f8e77d00b631c06e903a47f2cec1334df910160405180910390a16107a06001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610bef565b50565b6000546001600160a01b031633146107cd5760405162461bcd60e51b8152600401610393906111ab565b6001600160a01b0381166107f35760405162461bcd60e51b8152600401610393906111e0565b6001600160a01b038116600081815260056020908152604091829020805460ff1916600190811790915591519182527f5dcc54de76a00f463c78ab7c4546b9d243502fb27ac63cc6df71a88b21aad18691016104d7565b60008061085660025490565b9050806108665750600092915050565b600061087c84610877846001610b01565b610c5a565b50949350505050565b6000546001600160a01b031633146108af5760405162461bcd60e51b8152600401610393906111ab565b600154156108ff5760405162461bcd60e51b815260206004820152601f60248201527f537461727420626c6f636b2068656967687420616c72656164792073657421006044820152606401610393565b600155565b6000546001600160a01b0316331461092e5760405162461bcd60e51b8152600401610393906111ab565b6001600160a01b0381166109545760405162461bcd60e51b8152600401610393906111e0565b6001600160a01b0381166000818152600560209081526040808320805460ff19169055519182527f5dcc54de76a00f463c78ab7c4546b9d243502fb27ac63cc6df71a88b21aad18691016104d7565b600080546001600160a01b03163314806109cc57503360009081526005602052604090205460ff165b610a0a5760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420617574686f72697a65642160881b6044820152606401610393565b610a12610e50565b905090565b6000546001600160a01b03163314610a415760405162461bcd60e51b8152600401610393906111ab565b6001600160a01b038116610aa65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610393565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610b0d828461122d565b9392505050565b600080610b218484610c5a565b9092509050610b31816001610ec6565b6001600160a01b0385166000908152600360205260409020558115610bd05760408051838152602081018390529081018490526001600160a01b038516907f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef19060600160405180910390a2610bd06001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168584610ed2565b50505050565b6000610437610be6600a84610f07565b60015490610ec6565b6040516001600160a01b0380851660248301528316604482015260648101829052610bd09085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f13565b6001600160a01b0382166000908152600360205260408120548190819081805b868311610e3557610c8a83610bd6565b9150814311610c9857610e35565b604051630981b24d60e41b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063981b24d09060240160206040518083038186803b158015610cf857600080fd5b505afa158015610d0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d309190611244565b90508015610e235760405163277166bf60e11b81526001600160a01b03898116600483015260248201849052610e16918391610e10917f000000000000000000000000000000000000000000000000000000000000000090911690634ee2cd7e9060440160206040518083038186803b158015610dac57600080fd5b505afa158015610dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de49190611244565b60028781548110610df757610df761125d565b9060005260206000200154610f0790919063ffffffff16565b90610fe5565b610e209085611273565b93505b82610e2d8161128b565b935050610c7a565b83610e4160018561122d565b95509550505050509250929050565b6000600154431015610eb35760405162461bcd60e51b815260206004820152602660248201527f546865207061796f757420636f6e7472616374206973206e6f742073746172746044820152651959081e595d60d21b6064820152608401610393565b610a12600a60015443610e10919061122d565b6000610b0d8284611273565b6040516001600160a01b038316602482015260448101829052610f0290849063a9059cbb60e01b90606401610c23565b505050565b6000610b0d82846112a6565b6000610f68826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ff19092919063ffffffff16565b805190915015610f025780806020019051810190610f8691906112c5565b610f025760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610393565b6000610b0d82846112e7565b60606110008484600085611008565b949350505050565b6060824710156110695760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610393565b843b6110b75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610393565b600080866001600160a01b031685876040516110d39190611335565b60006040518083038185875af1925050503d8060008114611110576040519150601f19603f3d011682016040523d82523d6000602084013e611115565b606091505b5091509150611125828286611130565b979650505050505050565b6060831561113f575081610b0d565b82511561114f5782518084602001fd5b8160405162461bcd60e51b81526004016103939190611351565b60006020828403121561117b57600080fd5b81356001600160a01b0381168114610b0d57600080fd5b6000602082840312156111a457600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f4163636f756e7420616464726573732063616e6e6f74206265207a65726f0000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561123f5761123f611217565b500390565b60006020828403121561125657600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000821982111561128657611286611217565b500190565b600060001982141561129f5761129f611217565b5060010190565b60008160001904831182151516156112c0576112c0611217565b500290565b6000602082840312156112d757600080fd5b81518015158114610b0d57600080fd5b60008261130457634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101561132457818101518382015260200161130c565b83811115610bd05750506000910152565b60008251611347818460208701611309565b9190910192915050565b6020815260008251806020840152611370816040850160208701611309565b601f01601f1916919091016040019291505056fea264697066735822122094c5231a20fbc30ad0e73ebff800070f8666b375d3f406326c2b32656a9a59c164736f6c63430008090033",
  "deployedSourceMap": "328:5519:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3204:220;;;;;;:::i;:::-;;:::i;:::-;;3923:211;;;;;;:::i;:::-;;:::i;:::-;;;636:25:19;;;624:2;609:18;3923:211:8;;;;;;;;1756:212;;;;;;:::i;:::-;;:::i;722:31::-;;;;;;:::i;:::-;;:::i;859:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;837:14:19;;830:22;812:41;;800:2;785:18;859:42:8;672:187:19;1700:145:0;;;:::i;1545:207:8:-;;;;;;:::i;:::-;;:::i;564:41::-;;603:2;564:41;;3108:92;3174:14;:21;3108:92;;757:49;;;;;;:::i;:::-;;;;;;;;;;;;;;1068:85:0;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;1068:85;;;-1:-1:-1;;;;;1028:32:19;;;1010:51;;998:2;983:18;1068:85:0;864:203:19;810:45:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2564:363;;;;;;:::i;:::-;;:::i;1972:198::-;;;;;;:::i;:::-;;:::i;3428:229::-;;;;;;:::i;:::-;;:::i;2381:179::-;;;;;;:::i;:::-;;:::i;2174:203::-;;;;;;:::i;:::-;;:::i;3697:175::-;;;:::i;1994:240:0:-;;;;;;:::i;:::-;;:::i;471:29:8:-;;;;;687:31;;;;;;519;;;;;3204:220;-1:-1:-1;;;;;3257:19:8;;3266:10;3257:19;3249:62;;;;-1:-1:-1;;;3249:62:8;;1721:2:19;3249:62:8;;;1703:21:19;1760:2;1740:18;;;1733:30;1799:32;1779:18;;;1772:60;1849:18;;3249:62:8;;;;;;;;;3317:13;3333:14;3174;:21;;3108:92;3333:14;3317:30;-1:-1:-1;3357:9:8;;3353:67;;3376:37;3393:5;3400:12;:5;3410:1;3400:9;:12::i;:::-;3376:16;:37::i;:::-;3243:181;3204:220;:::o;3923:211::-;3994:7;1140:6:0;;-1:-1:-1;;;;;1140:6:0;4017:10:8;:21;;:47;;-1:-1:-1;4053:10:8;4042:22;;;;:10;:22;;;;;;;;4017:47;4009:75;;;;-1:-1:-1;;;4009:75:8;;2080:2:19;4009:75:8;;;2062:21:19;2119:2;2099:18;;;2092:30;-1:-1:-1;;;2138:18:19;;;2131:45;2193:18;;4009:75:8;1878:339:19;4009:75:8;4097:32;4123:5;4097:25;:32::i;:::-;4090:39;3923:211;-1:-1:-1;;3923:211:8:o;1756:212::-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1831:21:8;::::1;1823:64;;;;-1:-1:-1::0;;;1823:64:8::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1893:22:8;::::1;1918:5;1893:22:::0;;;:13:::1;:22;::::0;;;;;;;:30;;-1:-1:-1;;1893:30:8::1;::::0;;1934:29;812:41:19;;;1934:29:8::1;::::0;785:18:19;1934:29:8::1;;;;;;;;1756:212:::0;:::o;722:31::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;722:31:8;:::o;1700:145:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;1545:207:8:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1617:21:8;::::1;1609:64;;;;-1:-1:-1::0;;;1609:64:8::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1679:22:8;::::1;;::::0;;;:13:::1;:22;::::0;;;;;;;;:29;;-1:-1:-1;;1679:29:8::1;1704:4;1679:29:::0;;::::1;::::0;;;1719:28;;812:41:19;;;1719:28:8::1;::::0;785:18:19;1719:28:8::1;672:187:19::0;2564:363:8;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;2623:10:8;:21;;:50;;-1:-1:-1;2662:10:8;2648:25;;;;:13;:25;;;;;;;;2623:50;2615:90;;;;-1:-1:-1;;;2615:90:8;;3144:2:19;2615:90:8;;;3126:21:19;3183:2;3163:18;;;3156:30;3222:29;3202:18;;;3195:57;3269:18;;2615:90:8;2942:351:19;2615:90:8;2728:1;2719:6;:10;2711:74;;;;-1:-1:-1;;;2711:74:8;;3500:2:19;2711:74:8;;;3482:21:19;3539:2;3519:18;;;3512:30;3578:34;3558:18;;;3551:62;-1:-1:-1;;;3629:18:19;;;3622:49;3688:19;;2711:74:8;3298:415:19;2711:74:8;2791:14;:27;;;;;;;-1:-1:-1;2791:27:8;;;;;;;;;2829:30;;;2840:10;3892:51:19;;3974:2;3959:18;;3952:34;;;2829:30:8;;3865:18:19;2829:30:8;;;;;;;2865:57;-1:-1:-1;;;;;2865:5:8;:22;2888:10;2908:4;2915:6;2865:22;:57::i;:::-;2564:363;:::o;1972:198::-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2041:21:8;::::1;2033:64;;;;-1:-1:-1::0;;;2033:64:8::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2103:19:8;::::1;;::::0;;;:10:::1;:19;::::0;;;;;;;;:26;;-1:-1:-1;;2103:26:8::1;2125:4;2103:26:::0;;::::1;::::0;;;2140:25;;812:41:19;;;2140:25:8::1;::::0;785:18:19;2140:25:8::1;672:187:19::0;3428:229:8;3487:7;3502:13;3518:14;3174;:21;;3108:92;3518:14;3502:30;-1:-1:-1;3542:10:8;3538:24;;-1:-1:-1;3561:1:8;;3428:229;-1:-1:-1;;3428:229:8:o;3538:24::-;3569:14;3589:44;3613:5;3620:12;:5;3630:1;3620:9;:12::i;:::-;3589:23;:44::i;:::-;-1:-1:-1;3568:65:8;3428:229;-1:-1:-1;;;;3428:229:8:o;2381:179::-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;2462:16:8::1;::::0;:21;2454:65:::1;;;::::0;-1:-1:-1;;;2454:65:8;;4199:2:19;2454:65:8::1;::::0;::::1;4181:21:19::0;4238:2;4218:18;;;4211:30;4277:33;4257:18;;;4250:61;4328:18;;2454:65:8::1;3997:355:19::0;2454:65:8::1;2525:16;:30:::0;2381:179::o;2174:203::-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:21:8;::::1;2238:64;;;;-1:-1:-1::0;;;2238:64:8::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2308:19:8;::::1;2330:5;2308:19:::0;;;:10:::1;:19;::::0;;;;;;;:27;;-1:-1:-1;;2308:27:8::1;::::0;;2346:26;812:41:19;;;2346:26:8::1;::::0;785:18:19;2346:26:8::1;672:187:19::0;3697:175:8;3746:7;1140:6:0;;-1:-1:-1;;;;;1140:6:0;3769:10:8;:21;;:47;;-1:-1:-1;3805:10:8;3794:22;;;;:10;:22;;;;;;;;3769:47;3761:75;;;;-1:-1:-1;;;3761:75:8;;2080:2:19;3761:75:8;;;2062:21:19;2119:2;2099:18;;;2092:30;-1:-1:-1;;;2138:18:19;;;2131:45;2193:18;;3761:75:8;1878:339:19;3761:75:8;3849:18;:16;:18::i;:::-;3842:25;;3697:175;:::o;1994:240:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:0;;4559:2:19;2074:73:0::1;::::0;::::1;4541:21:19::0;4598:2;4578:18;;;4571:30;4637:34;4617:18;;;4610:62;-1:-1:-1;;;4688:18:19;;;4681:36;4734:19;;2074:73:0::1;4357:402:19::0;2074:73:0::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;3039:96:5:-;3097:7;3123:5;3127:1;3123;:5;:::i;:::-;3116:12;3039:96;-1:-1:-1;;;3039:96:5:o;4987:356:8:-;5065:14;5081:24;5109:43;5133:5;5140:11;5109:23;:43::i;:::-;5064:88;;-1:-1:-1;5064:88:8;-1:-1:-1;5182:23:8;5064:88;5203:1;5182:20;:23::i;:::-;-1:-1:-1;;;;;5158:21:8;;;;;;:14;:21;;;;;:47;5215:10;;5211:128;;5240:51;;;5228:25:19;;;5284:2;5269:18;;5262:34;;;5312:18;;;5305:34;;;-1:-1:-1;;;;;5240:51:8;;;;;5216:2:19;5201:18;5240:51:8;;;;;;;5299:33;-1:-1:-1;;;;;5299:5:8;:18;5318:5;5325:6;5299:18;:33::i;:::-;5058:285;;4987:356;;:::o;5427:144::-;5499:7;5521:45;5542:23;603:2;5559:5;5542:16;:23::i;:::-;5521:16;;;:20;:45::i;815:203:2:-;942:68;;-1:-1:-1;;;;;5608:15:19;;;942:68:2;;;5590:34:19;5660:15;;5640:18;;;5633:43;5692:18;;;5685:34;;;915:96:2;;935:5;;-1:-1:-1;;;965:27:2;5525:18:19;;942:68:2;;;;-1:-1:-1;;942:68:2;;;;;;;;;;;;;;-1:-1:-1;;;;;942:68:2;-1:-1:-1;;;;;;942:68:2;;;;;;;;;;915:19;:96::i;4287:696:8:-;-1:-1:-1;;;;;4528:21:8;;4378:7;4528:21;;;:14;:21;;;;;;4378:7;;;;;;4515:432;4560:11;4551:5;:20;4515:432;;4620:32;4646:5;4620:25;:32::i;:::-;4590:62;;4680:27;4664:12;:43;4660:54;;4709:5;;4660:54;4736:49;;-1:-1:-1;;;4736:49:8;;;;;636:25:19;;;4736:6:8;-1:-1:-1;;;;;4736:20:8;;;;609:18:19;;4736:49:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4722:63;-1:-1:-1;4797:15:8;;4793:148;;4860:54;;-1:-1:-1;;;4860:54:8;;-1:-1:-1;;;;;3910:32:19;;;4860:54:8;;;3892:51:19;3959:18;;;3952:34;;;4834:98:8;;4920:11;;4834:81;;4860:6;:18;;;;;;3865::19;;4860:54:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4834:14;4849:5;4834:21;;;;;;;;:::i;:::-;;;;;;;;;:25;;:81;;;;:::i;:::-;:85;;:98::i;:::-;4824:108;;;;:::i;:::-;;;4793:148;4573:7;;;;:::i;:::-;;;;4515:432;;;4960:6;4968:9;4976:1;4968:5;:9;:::i;:::-;4952:26;;;;;;;;4287:696;;;;;:::o;5628:217::-;5678:7;5717:16;;5701:12;:32;;5693:83;;;;-1:-1:-1;;;5693:83:8;;6526:2:19;5693:83:8;;;6508:21:19;6565:2;6545:18;;;6538:30;6604:34;6584:18;;;6577:62;-1:-1:-1;;;6655:18:19;;;6648:36;6701:19;;5693:83:8;6324:402:19;5693:83:8;5789:51;603:2;5805:16;;5790:12;:31;;;;:::i;2672:96:5:-;2730:7;2756:5;2760:1;2756;:5;:::i;634:175:2:-;743:58;;-1:-1:-1;;;;;3910:32:19;;743:58:2;;;3892:51:19;3959:18;;;3952:34;;;716:86:2;;736:5;;-1:-1:-1;;;766:23:2;3865:18:19;;743:58:2;3718:274:19;716:86:2;634:175;;;:::o;3382:96:5:-;3440:7;3466:5;3470:1;3466;:5;:::i;3022:751:2:-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;-1:-1:-1;;;;;3467:27:2;;;:69;;;;;:::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:2;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:2;;7388:2:19;3671:85:2;;;7370:21:19;7427:2;7407:18;;;7400:30;7466:34;7446:18;;;7439:62;-1:-1:-1;;;7517:18:19;;;7510:40;7567:19;;3671:85:2;7186:406:19;3767:96:5;3825:7;3851:5;3855:1;3851;:5;:::i;3573:193:3:-;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;3573:193;-1:-1:-1;;;;3573:193:3:o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;-1:-1:-1;;;4751:81:3;;8021:2:19;4751:81:3;;;8003:21:19;8060:2;8040:18;;;8033:30;8099:34;8079:18;;;8072:62;-1:-1:-1;;;8150:18:19;;;8143:36;8196:19;;4751:81:3;7819:402:19;4751:81:3;1078:20;;4842:60;;;;-1:-1:-1;;;4842:60:3;;8428:2:19;4842:60:3;;;8410:21:19;8467:2;8447:18;;;8440:30;8506:31;8486:18;;;8479:59;8555:18;;4842:60:3;8226:353:19;4842:60:3;4973:12;4987:23;5014:6;-1:-1:-1;;;;;5014:11:3;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:3:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:3;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7363:429;7764:12;7757:20;;-1:-1:-1;;;7757:20:3;;;;;;;;:::i;14:286:19:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:19;;210:42;;200:70;;266:1;263;256:12;305:180;364:6;417:2;405:9;396:7;392:23;388:32;385:52;;;433:1;430;423:12;385:52;-1:-1:-1;456:23:19;;305:180;-1:-1:-1;305:180:19:o;2222:356::-;2424:2;2406:21;;;2443:18;;;2436:30;2502:34;2497:2;2482:18;;2475:62;2569:2;2554:18;;2222:356::o;2583:354::-;2785:2;2767:21;;;2824:2;2804:18;;;2797:30;2863:32;2858:2;2843:18;;2836:60;2928:2;2913:18;;2583:354::o;4764:127::-;4825:10;4820:3;4816:20;4813:1;4806:31;4856:4;4853:1;4846:15;4880:4;4877:1;4870:15;4896:125;4936:4;4964:1;4961;4958:8;4955:34;;;4969:18;;:::i;:::-;-1:-1:-1;5006:9:19;;4896:125::o;5730:184::-;5800:6;5853:2;5841:9;5832:7;5828:23;5824:32;5821:52;;;5869:1;5866;5859:12;5821:52;-1:-1:-1;5892:16:19;;5730:184;-1:-1:-1;5730:184:19:o;5919:127::-;5980:10;5975:3;5971:20;5968:1;5961:31;6011:4;6008:1;6001:15;6035:4;6032:1;6025:15;6051:128;6091:3;6122:1;6118:6;6115:1;6112:13;6109:39;;;6128:18;;:::i;:::-;-1:-1:-1;6164:9:19;;6051:128::o;6184:135::-;6223:3;-1:-1:-1;;6244:17:19;;6241:43;;;6264:18;;:::i;:::-;-1:-1:-1;6311:1:19;6300:13;;6184:135::o;6731:168::-;6771:7;6837:1;6833;6829:6;6825:14;6822:1;6819:21;6814:1;6807:9;6800:17;6796:45;6793:71;;;6844:18;;:::i;:::-;-1:-1:-1;6884:9:19;;6731:168::o;6904:277::-;6971:6;7024:2;7012:9;7003:7;6999:23;6995:32;6992:52;;;7040:1;7037;7030:12;6992:52;7072:9;7066:16;7125:5;7118:13;7111:21;7104:5;7101:32;7091:60;;7147:1;7144;7137:12;7597:217;7637:1;7663;7653:132;;7707:10;7702:3;7698:20;7695:1;7688:31;7742:4;7739:1;7732:15;7770:4;7767:1;7760:15;7653:132;-1:-1:-1;7799:9:19;;7597:217::o;8584:258::-;8656:1;8666:113;8680:6;8677:1;8674:13;8666:113;;;8756:11;;;8750:18;8737:11;;;8730:39;8702:2;8695:10;8666:113;;;8797:6;8794:1;8791:13;8788:48;;;-1:-1:-1;;8832:1:19;8814:16;;8807:27;8584:258::o;8847:274::-;8976:3;9014:6;9008:13;9030:53;9076:6;9071:3;9064:4;9056:6;9052:17;9030:53;:::i;:::-;9099:16;;;;;8847:274;-1:-1:-1;;8847:274:19:o;9126:383::-;9275:2;9264:9;9257:21;9238:4;9307:6;9301:13;9350:6;9345:2;9334:9;9330:18;9323:34;9366:66;9425:6;9420:2;9409:9;9405:18;9400:2;9392:6;9388:15;9366:66;:::i;:::-;9493:2;9472:15;-1:-1:-1;;9468:29:19;9453:45;;;;9500:2;9449:54;;9126:383;-1:-1:-1;;9126:383:19:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "currentEpoch()": {
        "details": "   This is not current epoch, but rather the number of claimable epochs.   Name not changed for the sake of compatibility with former implementation."
      },
      "getCurrentEpoch()": {
        "details": "get current epoch"
      },
      "getEpochStartBlockHeight(uint256)": {
        "details": "get epoch start block height"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    328,
    5847
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F0C86FA GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xAC8A584A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAC8A584A EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xB97DD9E2 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xFC9DC4FF EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFEA5657C EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F0C86FA EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x91C05B0B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x9870D7FE EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xA583024B EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xAC5432DF EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x7250E224 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x74C259C6 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x76671808 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x828DF5EE EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x30F3928A EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x57C1F9E2 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x6AA8405F EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x6D70F7AE EQ PUSH2 0x1A8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x1192 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1192 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x179 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x503 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST PUSH2 0x16F PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x16F JUMP JUMPDEST PUSH2 0x16F PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x179 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1192 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH2 0x15A PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1192 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x9A3 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x233 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x16F PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x233 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920636C61696D20666F72206F776E206163636F756E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH2 0x3C3 DUP3 PUSH2 0x3BE DUP4 PUSH1 0x1 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0xB14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x3F0 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F7420617574686F72697A656421 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x437 DUP3 PUSH2 0xBD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH31 0x1C2D2CF3ABE61110EC31C39E6B778412525790F022085D2C3318837202CCFE SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH31 0x1C2D2CF3ABE61110EC31C39E6B778412525790F022085D2C3318837202CCFE SWAP2 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x645 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4469737472696275746F72206E6F7420617574686F72697A6564210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F206265206469737472696275746564206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x2067726561746572207468616E207A65726F21 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xC1D32AD5CCA423E7DDA2123DBF8C482F8E77D00B631C06E903A47F2CEC1334DF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7A0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0xBEF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x5DCC54DE76A00F463C78AB7C4546B9D243502FB27AC63CC6DF71A88B21AAD186 SWAP2 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x856 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x866 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87C DUP5 PUSH2 0x877 DUP5 PUSH1 0x1 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0xC5A JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461727420626C6F636B2068656967687420616C7265616479207365742100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0x5DCC54DE76A00F463C78AB7C4546B9D243502FB27AC63CC6DF71A88B21AAD186 SWAP2 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x9CC JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xA0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F7420617574686F72697A656421 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0xA12 PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0D DUP3 DUP5 PUSH2 0x122D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB21 DUP5 DUP5 PUSH2 0xC5A JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xB31 DUP2 PUSH1 0x1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP2 ISZERO PUSH2 0xBD0 JUMPI PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0x45C072AA05B9853B5A993DE7A28BC332EE01404A628CEC1A23CE0F659F842EF1 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xBD0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP6 DUP5 PUSH2 0xED2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x437 PUSH2 0xBE6 PUSH1 0xA DUP5 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xBD0 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 DUP1 JUMPDEST DUP7 DUP4 GT PUSH2 0xE35 JUMPI PUSH2 0xC8A DUP4 PUSH2 0xBD6 JUMP JUMPDEST SWAP2 POP DUP2 NUMBER GT PUSH2 0xC98 JUMPI PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x981B24D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x981B24D0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD30 SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x277166BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH2 0xE16 SWAP2 DUP4 SWAP2 PUSH2 0xE10 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x4EE2CD7E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE4 SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x2 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xDF7 JUMPI PUSH2 0xDF7 PUSH2 0x125D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0xF07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0xE20 SWAP1 DUP6 PUSH2 0x1273 JUMP JUMPDEST SWAP4 POP JUMPDEST DUP3 PUSH2 0xE2D DUP2 PUSH2 0x128B JUMP JUMPDEST SWAP4 POP POP PUSH2 0xC7A JUMP JUMPDEST DUP4 PUSH2 0xE41 PUSH1 0x1 DUP6 PUSH2 0x122D JUMP JUMPDEST SWAP6 POP SWAP6 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD NUMBER LT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865207061796F757420636F6E7472616374206973206E6F74207374617274 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1959081E595D PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0xA12 PUSH1 0xA PUSH1 0x1 SLOAD NUMBER PUSH2 0xE10 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0D DUP3 DUP5 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xF02 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0xC23 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0D DUP3 DUP5 PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF68 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFF1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF02 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF86 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH2 0xF02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0D DUP3 DUP5 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1000 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1008 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1069 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x10B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x10D3 SWAP2 SWAP1 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1125 DUP3 DUP3 DUP7 PUSH2 0x1130 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x113F JUMPI POP DUP2 PUSH2 0xB0D JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x114F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420616464726573732063616E6E6F74206265207A65726F0000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x123F JUMPI PUSH2 0x123F PUSH2 0x1217 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1286 JUMPI PUSH2 0x1286 PUSH2 0x1217 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x129F JUMPI PUSH2 0x129F PUSH2 0x1217 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12C0 JUMPI PUSH2 0x12C0 PUSH2 0x1217 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1304 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1324 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x130C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xBD0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1347 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1309 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1370 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xC5 0x23 BYTE KECCAK256 0xFB 0xC3 EXP 0xD0 0xE7 RETURNDATACOPY 0xBF 0xF8 STOP SMOD 0xF DUP7 PUSH7 0xB375D3F406326C 0x2B ORIGIN PUSH6 0x6A9A59C16473 PUSH16 0x6C634300080900330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        328,
        5847
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x142"
    },
    "25": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8F0C86FA"
    },
    "38": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "GT",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xAC8A584A"
    },
    "49": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "GT",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xAC8A584A"
    },
    "60": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BA"
    },
    "64": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB97DD9E2"
    },
    "71": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2CD"
    },
    "75": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D5"
    },
    "86": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "87": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "88": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFC0C546A"
    },
    "93": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2E8"
    },
    "97": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "98": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "99": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFC9DC4FF"
    },
    "104": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "105": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30F"
    },
    "108": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "109": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "110": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFEA5657C"
    },
    "115": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "116": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x318"
    },
    "119": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "120": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "123": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "REVERT",
      "path": "8"
    },
    "124": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8F0C86FA"
    },
    "131": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "132": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24B"
    },
    "135": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "137": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x91C05B0B"
    },
    "142": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "143": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x26E"
    },
    "146": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "147": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "148": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x9870D7FE"
    },
    "153": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "154": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x281"
    },
    "157": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "158": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "159": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA583024B"
    },
    "164": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "165": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x294"
    },
    "168": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "169": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "170": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xAC5432DF"
    },
    "175": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "176": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A7"
    },
    "179": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "180": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "183": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "REVERT",
      "path": "8"
    },
    "184": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "185": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "186": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "191": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "GT",
      "path": "8"
    },
    "192": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10A"
    },
    "195": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "196": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "197": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "202": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "203": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DB"
    },
    "206": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "207": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "208": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x7250E224"
    },
    "213": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "214": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E3"
    },
    "217": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "218": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "219": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x74C259C6"
    },
    "224": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "225": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F6"
    },
    "228": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "229": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "230": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x76671808"
    },
    "235": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "236": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1FE"
    },
    "239": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "240": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "241": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x828DF5EE"
    },
    "246": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "247": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x206"
    },
    "250": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "251": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "252": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "257": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "258": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x226"
    },
    "261": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "262": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "264": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "265": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "REVERT",
      "path": "8"
    },
    "266": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "267": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "268": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1E83409A"
    },
    "273": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "274": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x147"
    },
    "277": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "278": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "279": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x30F3928A"
    },
    "284": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "285": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15C"
    },
    "288": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "289": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "290": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x57C1F9E2"
    },
    "295": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "296": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x182"
    },
    "299": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "300": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "301": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6AA8405F"
    },
    "306": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "307": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x195"
    },
    "310": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "311": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "312": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x6D70F7AE"
    },
    "317": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "EQ",
      "path": "8"
    },
    "318": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A8"
    },
    "321": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "322": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "323": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "325": {
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "DUP1",
      "path": "8"
    },
    "326": {
      "first_revert": true,
      "fn": null,
      "offset": [
        328,
        5847
      ],
      "op": "REVERT",
      "path": "8"
    },
    "327": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "328": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15A"
    },
    "331": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x155"
    },
    "334": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "335": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "337": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1169"
    },
    "340": {
      "fn": "QuarterlyPayout.claim",
      "jump": "i",
      "offset": [
        3204,
        3424
      ],
      "op": "JUMP",
      "path": "8"
    },
    "341": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "342": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x33F"
    },
    "345": {
      "fn": "QuarterlyPayout.claim",
      "jump": "i",
      "offset": [
        3204,
        3424
      ],
      "op": "JUMP",
      "path": "8"
    },
    "346": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "347": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "STOP",
      "path": "8"
    },
    "348": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "349": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "352": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A"
    },
    "355": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "356": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "358": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1192"
    },
    "361": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "jump": "i",
      "offset": [
        3923,
        4134
      ],
      "op": "JUMP",
      "path": "8"
    },
    "362": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "363": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C7"
    },
    "366": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "jump": "i",
      "offset": [
        3923,
        4134
      ],
      "op": "JUMP",
      "path": "8"
    },
    "367": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "368": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "370": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "371": {
      "op": "SWAP1"
    },
    "372": {
      "op": "DUP2"
    },
    "373": {
      "op": "MSTORE"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "376": {
      "op": "ADD"
    },
    "377": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "378": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "380": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "381": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "DUP1",
      "path": "8"
    },
    "382": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "383": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "SUB",
      "path": "8"
    },
    "384": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "385": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "RETURN",
      "path": "8"
    },
    "386": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1756,
        1968
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "387": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1756,
        1968
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15A"
    },
    "390": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1756,
        1968
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x190"
    },
    "393": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1756,
        1968
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "394": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1756,
        1968
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "396": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1756,
        1968
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1169"
    },
    "399": {
      "fn": "QuarterlyPayout.removeDistributor",
      "jump": "i",
      "offset": [
        1756,
        1968
      ],
      "op": "JUMP",
      "path": "8"
    },
    "400": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1756,
        1968
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "401": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1756,
        1968
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x43D"
    },
    "404": {
      "fn": "QuarterlyPayout.removeDistributor",
      "jump": "i",
      "offset": [
        1756,
        1968
      ],
      "op": "JUMP",
      "path": "8"
    },
    "405": {
      "offset": [
        722,
        753
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "406": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "409": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A3"
    },
    "412": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "413": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "415": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1192"
    },
    "418": {
      "fn": "QuarterlyPayout.removeDistributor",
      "jump": "i",
      "offset": [
        722,
        753
      ],
      "op": "JUMP",
      "path": "8"
    },
    "419": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "420": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4E2"
    },
    "423": {
      "fn": "QuarterlyPayout.removeDistributor",
      "jump": "i",
      "offset": [
        722,
        753
      ],
      "op": "JUMP",
      "path": "8"
    },
    "424": {
      "offset": [
        859,
        901
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "425": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CB"
    },
    "428": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B6"
    },
    "431": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "432": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "434": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1169"
    },
    "437": {
      "fn": "QuarterlyPayout.removeDistributor",
      "jump": "i",
      "offset": [
        859,
        901
      ],
      "op": "JUMP",
      "path": "8"
    },
    "438": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "439": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "441": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "443": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "444": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "446": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "447": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "DUP2",
      "path": "8"
    },
    "448": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "449": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "451": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "452": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "453": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "454": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "456": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "AND",
      "path": "8"
    },
    "457": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "DUP2",
      "path": "8"
    },
    "458": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "JUMP",
      "path": "8"
    },
    "459": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "460": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "462": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        859,
        901
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "463": {
      "op": "SWAP1"
    },
    "464": {
      "op": "ISZERO"
    },
    "465": {
      "op": "ISZERO"
    },
    "466": {
      "op": "DUP2"
    },
    "467": {
      "op": "MSTORE"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "470": {
      "op": "ADD"
    },
    "471": {
      "offset": [
        859,
        901
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x179"
    },
    "474": {
      "op": "JUMP"
    },
    "475": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "476": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "479": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x503"
    },
    "482": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "483": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1545,
        1752
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "484": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1545,
        1752
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15A"
    },
    "487": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1545,
        1752
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F1"
    },
    "490": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1545,
        1752
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "491": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1545,
        1752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "493": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1545,
        1752
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1169"
    },
    "496": {
      "fn": "QuarterlyPayout.addDistributor",
      "jump": "i",
      "offset": [
        1545,
        1752
      ],
      "op": "JUMP",
      "path": "8"
    },
    "497": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1545,
        1752
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "498": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1545,
        1752
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x577"
    },
    "501": {
      "fn": "QuarterlyPayout.addDistributor",
      "jump": "i",
      "offset": [
        1545,
        1752
      ],
      "op": "JUMP",
      "path": "8"
    },
    "502": {
      "offset": [
        564,
        605
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "503": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        564,
        605
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "506": {
      "offset": [
        603,
        605
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "508": {
      "offset": [
        564,
        605
      ],
      "op": "DUP2",
      "path": "8"
    },
    "509": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        564,
        605
      ],
      "op": "JUMP",
      "path": "8"
    },
    "510": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3108,
        3200
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "511": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3174,
        3188
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 0,
      "value": "0x2"
    },
    "513": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3174,
        3195
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "514": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3108,
        3200
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "517": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3108,
        3200
      ],
      "op": "JUMP",
      "path": "8"
    },
    "518": {
      "offset": [
        757,
        806
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "519": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "522": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x214"
    },
    "525": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "526": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "528": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1169"
    },
    "531": {
      "fn": "QuarterlyPayout.currentEpoch",
      "jump": "i",
      "offset": [
        757,
        806
      ],
      "op": "JUMP",
      "path": "8"
    },
    "532": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "533": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "535": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "537": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "538": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "540": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "541": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "DUP2",
      "path": "8"
    },
    "542": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "543": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "545": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "546": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "547": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "548": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "DUP2",
      "path": "8"
    },
    "549": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        757,
        806
      ],
      "op": "JUMP",
      "path": "8"
    },
    "550": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "551": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "553": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "560": {
      "op": "SHL"
    },
    "561": {
      "op": "SUB"
    },
    "562": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "563": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "564": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "566": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "op": "SUB"
    },
    "575": {
      "op": "SWAP1"
    },
    "576": {
      "op": "SWAP2"
    },
    "577": {
      "op": "AND"
    },
    "578": {
      "op": "DUP2"
    },
    "579": {
      "op": "MSTORE"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "582": {
      "op": "ADD"
    },
    "583": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x179"
    },
    "586": {
      "op": "JUMP"
    },
    "587": {
      "offset": [
        810,
        855
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "588": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CB"
    },
    "591": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x259"
    },
    "594": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "595": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "597": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1169"
    },
    "600": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        810,
        855
      ],
      "op": "JUMP",
      "path": "8"
    },
    "601": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "602": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "604": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "606": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "607": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "609": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "610": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "DUP2",
      "path": "8"
    },
    "611": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "612": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "614": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "615": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "616": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "617": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "619": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "AND",
      "path": "8"
    },
    "620": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "DUP2",
      "path": "8"
    },
    "621": {
      "fn": "Ownable.owner",
      "offset": [
        810,
        855
      ],
      "op": "JUMP",
      "path": "8"
    },
    "622": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2564,
        2927
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "623": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2564,
        2927
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15A"
    },
    "626": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2564,
        2927
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x27C"
    },
    "629": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2564,
        2927
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "630": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2564,
        2927
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "632": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2564,
        2927
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1192"
    },
    "635": {
      "fn": "QuarterlyPayout.distribute",
      "jump": "i",
      "offset": [
        2564,
        2927
      ],
      "op": "JUMP",
      "path": "8"
    },
    "636": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2564,
        2927
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "637": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2564,
        2927
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x61D"
    },
    "640": {
      "fn": "QuarterlyPayout.distribute",
      "jump": "i",
      "offset": [
        2564,
        2927
      ],
      "op": "JUMP",
      "path": "8"
    },
    "641": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        1972,
        2170
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "642": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        1972,
        2170
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15A"
    },
    "645": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        1972,
        2170
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x28F"
    },
    "648": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        1972,
        2170
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "649": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        1972,
        2170
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "651": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        1972,
        2170
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1169"
    },
    "654": {
      "fn": "QuarterlyPayout.addOperator",
      "jump": "i",
      "offset": [
        1972,
        2170
      ],
      "op": "JUMP",
      "path": "8"
    },
    "655": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        1972,
        2170
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "656": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        1972,
        2170
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7A3"
    },
    "659": {
      "fn": "QuarterlyPayout.addOperator",
      "jump": "i",
      "offset": [
        1972,
        2170
      ],
      "op": "JUMP",
      "path": "8"
    },
    "660": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3428,
        3657
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "661": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3428,
        3657
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "664": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3428,
        3657
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A2"
    },
    "667": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3428,
        3657
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "668": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3428,
        3657
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "670": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3428,
        3657
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1169"
    },
    "673": {
      "fn": "QuarterlyPayout.getClaimable",
      "jump": "i",
      "offset": [
        3428,
        3657
      ],
      "op": "JUMP",
      "path": "8"
    },
    "674": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3428,
        3657
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "675": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3428,
        3657
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x84A"
    },
    "678": {
      "fn": "QuarterlyPayout.getClaimable",
      "jump": "i",
      "offset": [
        3428,
        3657
      ],
      "op": "JUMP",
      "path": "8"
    },
    "679": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2381,
        2560
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "680": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2381,
        2560
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15A"
    },
    "683": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2381,
        2560
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B5"
    },
    "686": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2381,
        2560
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "687": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2381,
        2560
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "689": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2381,
        2560
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1192"
    },
    "692": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "jump": "i",
      "offset": [
        2381,
        2560
      ],
      "op": "JUMP",
      "path": "8"
    },
    "693": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2381,
        2560
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "694": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2381,
        2560
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x885"
    },
    "697": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "jump": "i",
      "offset": [
        2381,
        2560
      ],
      "op": "JUMP",
      "path": "8"
    },
    "698": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2174,
        2377
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "699": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2174,
        2377
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15A"
    },
    "702": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2174,
        2377
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C8"
    },
    "705": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2174,
        2377
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "706": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2174,
        2377
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "708": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2174,
        2377
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1169"
    },
    "711": {
      "fn": "QuarterlyPayout.removeOperator",
      "jump": "i",
      "offset": [
        2174,
        2377
      ],
      "op": "JUMP",
      "path": "8"
    },
    "712": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2174,
        2377
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "713": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2174,
        2377
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x904"
    },
    "716": {
      "fn": "QuarterlyPayout.removeOperator",
      "jump": "i",
      "offset": [
        2174,
        2377
      ],
      "op": "JUMP",
      "path": "8"
    },
    "717": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3697,
        3872
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "718": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3697,
        3872
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "721": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3697,
        3872
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9A3"
    },
    "724": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "jump": "i",
      "offset": [
        3697,
        3872
      ],
      "op": "JUMP",
      "path": "8"
    },
    "725": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "732": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "733": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "735": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1169"
    },
    "738": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "739": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA17"
    },
    "743": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "744": {
      "offset": [
        471,
        500
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        471,
        500
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x233"
    },
    "748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        471,
        500
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "781": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        471,
        500
      ],
      "op": "DUP2",
      "path": "8"
    },
    "782": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        471,
        500
      ],
      "op": "JUMP",
      "path": "8"
    },
    "783": {
      "offset": [
        687,
        718
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        687,
        718
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        687,
        718
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "789": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        687,
        718
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        687,
        718
      ],
      "op": "DUP2",
      "path": "8"
    },
    "791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        687,
        718
      ],
      "op": "JUMP",
      "path": "8"
    },
    "792": {
      "offset": [
        519,
        550
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "793": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        519,
        550
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x233"
    },
    "796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        519,
        550
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "829": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        519,
        550
      ],
      "op": "DUP2",
      "path": "8"
    },
    "830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        519,
        550
      ],
      "op": "JUMP",
      "path": "8"
    },
    "831": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "838": {
      "op": "SHL"
    },
    "839": {
      "op": "SUB"
    },
    "840": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3257,
        3276
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 2
    },
    "841": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3257,
        3276
      ],
      "op": "AND",
      "path": "8"
    },
    "842": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3266,
        3276
      ],
      "op": "CALLER",
      "path": "8"
    },
    "843": {
      "branch": 60,
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3257,
        3276
      ],
      "op": "EQ",
      "path": "8"
    },
    "844": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x39C"
    },
    "847": {
      "branch": 60,
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "848": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "850": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "851": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "855": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "857": {
      "op": "SHL"
    },
    "858": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "DUP2",
      "path": "8"
    },
    "859": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "862": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "864": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "DUP3",
      "path": "8"
    },
    "865": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "ADD",
      "path": "8"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "871": {
      "op": "DUP3"
    },
    "872": {
      "op": "ADD"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "PUSH32",
      "value": "0x43616E206F6E6C7920636C61696D20666F72206F776E206163636F756E740000"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "909": {
      "op": "DUP3"
    },
    "910": {
      "op": "ADD"
    },
    "911": {
      "op": "MSTORE"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "914": {
      "op": "ADD"
    },
    "915": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "916": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "918": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "919": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "920": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "921": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "SUB",
      "path": "8"
    },
    "922": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "923": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "8"
    },
    "924": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3249,
        3311
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "925": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3317,
        3330
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "927": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3333,
        3347
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3A7"
    },
    "930": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3174,
        3188
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "932": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3174,
        3195
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "933": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3174,
        3195
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "934": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3108,
        3200
      ],
      "op": "JUMP",
      "path": "8"
    },
    "935": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3333,
        3347
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "936": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3317,
        3347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "937": {
      "op": "POP"
    },
    "938": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3357,
        3366
      ],
      "op": "DUP1",
      "path": "8"
    },
    "939": {
      "branch": 61,
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3357,
        3366
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "940": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3353,
        3420
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C3"
    },
    "943": {
      "branch": 61,
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3353,
        3420
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "944": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3376,
        3413
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 3,
      "value": "0x3C3"
    },
    "947": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3393,
        3398
      ],
      "op": "DUP3",
      "path": "8"
    },
    "948": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3400,
        3412
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3BE"
    },
    "951": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3400,
        3405
      ],
      "op": "DUP4",
      "path": "8"
    },
    "952": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3410,
        3411
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "954": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3400,
        3409
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB01"
    },
    "957": {
      "fn": "QuarterlyPayout.claim",
      "jump": "i",
      "offset": [
        3400,
        3412
      ],
      "op": "JUMP",
      "path": "8"
    },
    "958": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3400,
        3412
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "959": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3376,
        3392
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB14"
    },
    "962": {
      "fn": "QuarterlyPayout.claim",
      "jump": "i",
      "offset": [
        3376,
        3413
      ],
      "op": "JUMP",
      "path": "8"
    },
    "963": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3376,
        3413
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "964": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3243,
        3424
      ],
      "op": "POP",
      "path": "8"
    },
    "965": {
      "fn": "QuarterlyPayout.claim",
      "offset": [
        3204,
        3424
      ],
      "op": "POP",
      "path": "8"
    },
    "966": {
      "fn": "QuarterlyPayout.claim",
      "jump": "o",
      "offset": [
        3204,
        3424
      ],
      "op": "JUMP",
      "path": "8"
    },
    "967": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "968": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3994,
        4001
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "970": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "DUP1",
      "path": "0"
    },
    "971": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "978": {
      "op": "SHL"
    },
    "979": {
      "op": "SUB"
    },
    "980": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "981": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4017,
        4027
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 4
    },
    "982": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4017,
        4038
      ],
      "op": "EQ",
      "path": "8"
    },
    "983": {
      "branch": 62,
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4017,
        4038
      ],
      "op": "DUP1",
      "path": "8"
    },
    "984": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4017,
        4064
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F0"
    },
    "987": {
      "branch": 62,
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4017,
        4064
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "988": {
      "op": "POP"
    },
    "989": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4053,
        4063
      ],
      "op": "CALLER",
      "path": "8"
    },
    "990": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "992": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "993": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "DUP2",
      "path": "8"
    },
    "994": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "995": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4052
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "997": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "999": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1000": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1002": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1003": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1004": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1005": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1007": {
      "branch": 63,
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4042,
        4064
      ],
      "op": "AND",
      "path": "8"
    },
    "1008": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4017,
        4064
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1009": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4009,
        4084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x42E"
    },
    "1012": {
      "branch": 63,
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4009,
        4084
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1013": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4009,
        4084
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1015": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4009,
        4084
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1016": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1022": {
      "op": "SHL"
    },
    "1023": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4009,
        4084
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1024": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4009,
        4084
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1027": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4009,
        4084
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1029": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4009,
        4084
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1030": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4009,
        4084
      ],
      "op": "ADD",
      "path": "8"
    },
    "1031": {
      "op": "MSTORE"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1036": {
      "op": "DUP3"
    },
    "1037": {
      "op": "ADD"
    },
    "1038": {
      "op": "MSTORE"
    },
    "1039": {
      "op": "PUSH15",
      "value": "0x4E6F7420617574686F72697A656421"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1057": {
      "op": "SHL"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1060": {
      "op": "DUP3"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4009,
        4084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "1069": {
      "op": "JUMP"
    },
    "1070": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4009,
        4084
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1071": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4097,
        4129
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 5,
      "value": "0x437"
    },
    "1074": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4123,
        4128
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1075": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4097,
        4122
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBD6"
    },
    "1078": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "jump": "i",
      "offset": [
        4097,
        4129
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1079": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4097,
        4129
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1080": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        4090,
        4129
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1081": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "offset": [
        3923,
        4134
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "POP"
    },
    "1084": {
      "fn": "QuarterlyPayout.getEpochStartBlockHeight",
      "jump": "o",
      "offset": [
        3923,
        4134
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1085": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1756,
        1968
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1086": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1088": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1095": {
      "op": "SHL"
    },
    "1096": {
      "op": "SUB"
    },
    "1097": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "1098": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 6
    },
    "1099": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "1100": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x467"
    },
    "1103": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1104": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1106": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1113": {
      "op": "SHL"
    },
    "1114": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1115": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1116": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1118": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "1119": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "1122": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1123": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11AB"
    },
    "1126": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1127": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1134": {
      "op": "SHL"
    },
    "1135": {
      "op": "SUB"
    },
    "1136": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1831,
        1852
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 7
    },
    "1137": {
      "branch": 64,
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1831,
        1852
      ],
      "op": "AND",
      "path": "8"
    },
    "1138": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x48D"
    },
    "1141": {
      "branch": 64,
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1142": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1144": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1145": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1151": {
      "op": "SHL"
    },
    "1152": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1153": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1154": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1156": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "ADD",
      "path": "8"
    },
    "1157": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "1160": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1161": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11E0"
    },
    "1164": {
      "fn": "QuarterlyPayout.removeDistributor",
      "jump": "i",
      "offset": [
        1823,
        1887
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1165": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1823,
        1887
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1172": {
      "op": "SHL"
    },
    "1173": {
      "op": "SUB"
    },
    "1174": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 8
    },
    "1175": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "AND",
      "path": "8"
    },
    "1176": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1918,
        1923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1178": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1179": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1180": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1181": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1906
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1183": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1185": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1186": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1187": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1188": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1190": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1191": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1192": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1915
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1193": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1923
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1194": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1923
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1197": {
      "op": "NOT"
    },
    "1198": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1923
      ],
      "op": "AND",
      "path": "8"
    },
    "1199": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1200": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1893,
        1923
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1201": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1934,
        1963
      ],
      "op": "MLOAD",
      "path": "8",
      "statement": 9
    },
    "1202": {
      "op": "SWAP2"
    },
    "1203": {
      "op": "DUP3"
    },
    "1204": {
      "op": "MSTORE"
    },
    "1205": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1934,
        1963
      ],
      "op": "PUSH31",
      "path": "8",
      "value": "0x1C2D2CF3ABE61110EC31C39E6B778412525790F022085D2C3318837202CCFE"
    },
    "1237": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1934,
        1963
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1238": {
      "op": "ADD"
    },
    "1239": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1934,
        1963
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1240": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1934,
        1963
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1242": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1934,
        1963
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1243": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1934,
        1963
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1244": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1934,
        1963
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1245": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1934,
        1963
      ],
      "op": "SUB",
      "path": "8"
    },
    "1246": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1934,
        1963
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1247": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1934,
        1963
      ],
      "op": "LOG2",
      "path": "8"
    },
    "1248": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        1756,
        1968
      ],
      "op": "POP",
      "path": "8"
    },
    "1249": {
      "fn": "QuarterlyPayout.removeDistributor",
      "jump": "o",
      "offset": [
        1756,
        1968
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1250": {
      "offset": [
        722,
        753
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1251": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1253": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1254": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1255": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1256": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1257": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "LT",
      "path": "8"
    },
    "1258": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4F2"
    },
    "1261": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1262": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1264": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1265": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1266": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1267": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1269": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1270": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1271": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1272": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1274": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1275": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1276": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1277": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "ADD",
      "path": "8"
    },
    "1278": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1279": {
      "fn": "QuarterlyPayout.removeDistributor",
      "offset": [
        722,
        753
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1280": {
      "op": "POP"
    },
    "1281": {
      "offset": [
        722,
        753
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1282": {
      "fn": "QuarterlyPayout.removeDistributor",
      "jump": "o",
      "offset": [
        722,
        753
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1283": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1284": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1286": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1293": {
      "op": "SHL"
    },
    "1294": {
      "op": "SUB"
    },
    "1295": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "1296": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1297": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "1298": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52D"
    },
    "1301": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1302": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1304": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1305": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1313": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1314": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1316": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "1317": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "1320": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1321": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11AB"
    },
    "1324": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1325": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1326": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "1328": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1329": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1330": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1332": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1339": {
      "op": "SHL"
    },
    "1340": {
      "op": "SUB"
    },
    "1341": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1342": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1343": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "AND",
      "path": "0"
    },
    "1344": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1345": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1378": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1379": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1380": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1381": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1382": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1837
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x0"
    },
    "1384": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1385": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1392": {
      "op": "SHL"
    },
    "1393": {
      "op": "SUB"
    },
    "1394": {
      "op": "NOT"
    },
    "1395": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "AND",
      "path": "0"
    },
    "1396": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1397": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1398": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1399": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1545,
        1752
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1400": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1402": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1409": {
      "op": "SHL"
    },
    "1410": {
      "op": "SUB"
    },
    "1411": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "1412": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1413": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "1414": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A1"
    },
    "1417": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1418": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1420": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1421": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1427": {
      "op": "SHL"
    },
    "1428": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1429": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1430": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1432": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "1433": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "1436": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1437": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11AB"
    },
    "1440": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1441": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "op": "SUB"
    },
    "1450": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1617,
        1638
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 12
    },
    "1451": {
      "branch": 65,
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1617,
        1638
      ],
      "op": "AND",
      "path": "8"
    },
    "1452": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5C7"
    },
    "1455": {
      "branch": 65,
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1456": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1458": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1467": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1468": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1470": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "ADD",
      "path": "8"
    },
    "1471": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "1474": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1475": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11E0"
    },
    "1478": {
      "fn": "QuarterlyPayout.addDistributor",
      "jump": "i",
      "offset": [
        1609,
        1673
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1479": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1609,
        1673
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1486": {
      "op": "SHL"
    },
    "1487": {
      "op": "SUB"
    },
    "1488": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 13
    },
    "1489": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "AND",
      "path": "8"
    },
    "1490": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1492": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1493": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1494": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1495": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1497": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1499": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1500": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1501": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1502": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1504": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1505": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1506": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1507": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1701
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1508": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1708
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1509": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1708
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1512": {
      "op": "NOT"
    },
    "1513": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1708
      ],
      "op": "AND",
      "path": "8"
    },
    "1514": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1704,
        1708
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1516": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1708
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1517": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1708
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1518": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1708
      ],
      "op": "OR",
      "path": "8"
    },
    "1519": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1708
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1520": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1708
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1521": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1679,
        1708
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1522": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1719,
        1747
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 14
    },
    "1523": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1719,
        1747
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1524": {
      "op": "SWAP2"
    },
    "1525": {
      "op": "DUP3"
    },
    "1526": {
      "op": "MSTORE"
    },
    "1527": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1719,
        1747
      ],
      "op": "PUSH31",
      "path": "8",
      "value": "0x1C2D2CF3ABE61110EC31C39E6B778412525790F022085D2C3318837202CCFE"
    },
    "1559": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1719,
        1747
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1560": {
      "op": "ADD"
    },
    "1561": {
      "fn": "QuarterlyPayout.addDistributor",
      "offset": [
        1719,
        1747
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D7"
    },
    "1564": {
      "op": "JUMP"
    },
    "1565": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2564,
        2927
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1566": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1568": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "op": "SUB"
    },
    "1577": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "1578": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2623,
        2633
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 15
    },
    "1579": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2623,
        2644
      ],
      "op": "EQ",
      "path": "8"
    },
    "1580": {
      "branch": 66,
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2623,
        2644
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1581": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2623,
        2673
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x645"
    },
    "1584": {
      "branch": 66,
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2623,
        2673
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1585": {
      "op": "POP"
    },
    "1586": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2662,
        2672
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1587": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1589": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1590": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1591": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1592": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2661
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1594": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1596": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1597": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1599": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1600": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1601": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1602": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "1604": {
      "branch": 67,
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2648,
        2673
      ],
      "op": "AND",
      "path": "8"
    },
    "1605": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2623,
        2673
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1606": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2615,
        2705
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x691"
    },
    "1609": {
      "branch": 67,
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2615,
        2705
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1610": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2615,
        2705
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1612": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2615,
        2705
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1619": {
      "op": "SHL"
    },
    "1620": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2615,
        2705
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1621": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2615,
        2705
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1624": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2615,
        2705
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1626": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2615,
        2705
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1627": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2615,
        2705
      ],
      "op": "ADD",
      "path": "8"
    },
    "1628": {
      "op": "MSTORE"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1633": {
      "op": "DUP3"
    },
    "1634": {
      "op": "ADD"
    },
    "1635": {
      "op": "MSTORE"
    },
    "1636": {
      "op": "PUSH32",
      "value": "0x4469737472696275746F72206E6F7420617574686F72697A6564210000000000"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1671": {
      "op": "DUP3"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "MSTORE"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1676": {
      "op": "ADD"
    },
    "1677": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2615,
        2705
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "1680": {
      "op": "JUMP"
    },
    "1681": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2615,
        2705
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1682": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2728,
        2729
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 16,
      "value": "0x0"
    },
    "1684": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2719,
        2725
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1685": {
      "branch": 68,
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2719,
        2729
      ],
      "op": "GT",
      "path": "8"
    },
    "1686": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2711,
        2785
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6FD"
    },
    "1689": {
      "branch": 68,
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2711,
        2785
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1690": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2711,
        2785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1692": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2711,
        2785
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1693": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2711,
        2785
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1701": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2711,
        2785
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1704": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2711,
        2785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1706": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2711,
        2785
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1707": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2711,
        2785
      ],
      "op": "ADD",
      "path": "8"
    },
    "1708": {
      "op": "MSTORE"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1713": {
      "op": "DUP3"
    },
    "1714": {
      "op": "ADD"
    },
    "1715": {
      "op": "MSTORE"
    },
    "1716": {
      "op": "PUSH32",
      "value": "0x416D6F756E7420746F206265206469737472696275746564206D757374206265"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1751": {
      "op": "DUP3"
    },
    "1752": {
      "op": "ADD"
    },
    "1753": {
      "op": "MSTORE"
    },
    "1754": {
      "op": "PUSH19",
      "value": "0x2067726561746572207468616E207A65726F21"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1779": {
      "op": "DUP3"
    },
    "1780": {
      "op": "ADD"
    },
    "1781": {
      "op": "MSTORE"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1784": {
      "op": "ADD"
    },
    "1785": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2711,
        2785
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "1788": {
      "op": "JUMP"
    },
    "1789": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2711,
        2785
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1790": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 17,
      "value": "0x2"
    },
    "1792": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1793": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1794": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1796": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1797": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "ADD",
      "path": "8"
    },
    "1798": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1799": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1802": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1803": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1804": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1805": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1806": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "1839": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "ADD",
      "path": "8"
    },
    "1840": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1841": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1842": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2791,
        2818
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1843": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 18,
      "value": "0x40"
    },
    "1845": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1846": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1847": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2840,
        2850
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1848": {
      "op": "DUP2"
    },
    "1849": {
      "op": "MSTORE"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1852": {
      "op": "DUP2"
    },
    "1853": {
      "op": "ADD"
    },
    "1854": {
      "op": "DUP4"
    },
    "1855": {
      "op": "SWAP1"
    },
    "1856": {
      "op": "MSTORE"
    },
    "1857": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xC1D32AD5CCA423E7DDA2123DBF8C482F8E77D00B631C06E903A47F2CEC1334DF"
    },
    "1890": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1891": {
      "op": "ADD"
    },
    "1892": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1894": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1895": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1896": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1897": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "SUB",
      "path": "8"
    },
    "1898": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1899": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2829,
        2859
      ],
      "op": "LOG1",
      "path": "8"
    },
    "1900": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2865,
        2922
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 19,
      "value": "0x7A0"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1909": {
      "op": "SHL"
    },
    "1910": {
      "op": "SUB"
    },
    "1911": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2865,
        2870
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "1944": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2865,
        2887
      ],
      "op": "AND",
      "path": "8"
    },
    "1945": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2888,
        2898
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1946": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2908,
        2912
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "1947": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2915,
        2921
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1948": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2865,
        2887
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBEF"
    },
    "1951": {
      "fn": "QuarterlyPayout.distribute",
      "jump": "i",
      "offset": [
        2865,
        2922
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1952": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2865,
        2922
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1953": {
      "fn": "QuarterlyPayout.distribute",
      "offset": [
        2564,
        2927
      ],
      "op": "POP",
      "path": "8"
    },
    "1954": {
      "fn": "QuarterlyPayout.distribute",
      "jump": "o",
      "offset": [
        2564,
        2927
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1955": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        1972,
        2170
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1956": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1958": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1965": {
      "op": "SHL"
    },
    "1966": {
      "op": "SUB"
    },
    "1967": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "1968": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1969": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "1970": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CD"
    },
    "1973": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1974": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1976": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1983": {
      "op": "SHL"
    },
    "1984": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1985": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1986": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1988": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "1989": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "1992": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1993": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11AB"
    },
    "1996": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1997": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2004": {
      "op": "SHL"
    },
    "2005": {
      "op": "SUB"
    },
    "2006": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2041,
        2062
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 20
    },
    "2007": {
      "branch": 69,
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2041,
        2062
      ],
      "op": "AND",
      "path": "8"
    },
    "2008": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7F3"
    },
    "2011": {
      "branch": 69,
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2012": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2014": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2015": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2021": {
      "op": "SHL"
    },
    "2022": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2023": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2024": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2026": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "ADD",
      "path": "8"
    },
    "2027": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "2030": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2031": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11E0"
    },
    "2034": {
      "fn": "QuarterlyPayout.addOperator",
      "jump": "i",
      "offset": [
        2033,
        2097
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2035": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2033,
        2097
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2042": {
      "op": "SHL"
    },
    "2043": {
      "op": "SUB"
    },
    "2044": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 21
    },
    "2045": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "AND",
      "path": "8"
    },
    "2046": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2048": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2049": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2050": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2051": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2113
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "2053": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2055": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2056": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2057": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2058": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2060": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2061": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2062": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2063": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2122
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2064": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2129
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2065": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2129
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2068": {
      "op": "NOT"
    },
    "2069": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2129
      ],
      "op": "AND",
      "path": "8"
    },
    "2070": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2125,
        2129
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2072": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2129
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2073": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2129
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2074": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2129
      ],
      "op": "OR",
      "path": "8"
    },
    "2075": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2129
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2076": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2129
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2077": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2103,
        2129
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2078": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2140,
        2165
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 22
    },
    "2079": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2140,
        2165
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2080": {
      "op": "SWAP2"
    },
    "2081": {
      "op": "DUP3"
    },
    "2082": {
      "op": "MSTORE"
    },
    "2083": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2140,
        2165
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x5DCC54DE76A00F463C78AB7C4546B9D243502FB27AC63CC6DF71A88B21AAD186"
    },
    "2116": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2140,
        2165
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2117": {
      "op": "ADD"
    },
    "2118": {
      "fn": "QuarterlyPayout.addOperator",
      "offset": [
        2140,
        2165
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D7"
    },
    "2121": {
      "op": "JUMP"
    },
    "2122": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3428,
        3657
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2123": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3487,
        3494
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2125": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3502,
        3515
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2126": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3518,
        3532
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x856"
    },
    "2129": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3174,
        3188
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2131": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3174,
        3195
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2132": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3174,
        3195
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2133": {
      "fn": "QuarterlyPayout.currentEpoch",
      "offset": [
        3108,
        3200
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2134": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3518,
        3532
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2135": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3502,
        3532
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "branch": 70,
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3542,
        3552
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2138": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3538,
        3562
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x866"
    },
    "2141": {
      "branch": 70,
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3538,
        3562
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2142": {
      "op": "POP"
    },
    "2143": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3561,
        3562
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 23,
      "value": "0x0"
    },
    "2145": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3561,
        3562
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2146": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3428,
        3657
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2147": {
      "op": "POP"
    },
    "2148": {
      "op": "POP"
    },
    "2149": {
      "fn": "QuarterlyPayout.getClaimable",
      "jump": "o",
      "offset": [
        3428,
        3657
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2150": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3538,
        3562
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2151": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3569,
        3583
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2153": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3589,
        3633
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x87C"
    },
    "2156": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3613,
        3618
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2157": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3620,
        3632
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x877"
    },
    "2160": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3620,
        3625
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2161": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3630,
        3631
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2163": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3620,
        3629
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB01"
    },
    "2166": {
      "fn": "QuarterlyPayout.getClaimable",
      "jump": "i",
      "offset": [
        3620,
        3632
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2167": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3620,
        3632
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2168": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3589,
        3612
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC5A"
    },
    "2171": {
      "fn": "QuarterlyPayout.getClaimable",
      "jump": "i",
      "offset": [
        3589,
        3633
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2172": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3589,
        3633
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2173": {
      "op": "POP"
    },
    "2174": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3568,
        3633
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "2175": {
      "fn": "QuarterlyPayout.getClaimable",
      "offset": [
        3428,
        3657
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2176": {
      "op": "POP"
    },
    "2177": {
      "op": "POP"
    },
    "2178": {
      "op": "POP"
    },
    "2179": {
      "op": "POP"
    },
    "2180": {
      "fn": "QuarterlyPayout.getClaimable",
      "jump": "o",
      "offset": [
        3428,
        3657
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2181": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2381,
        2560
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2182": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2184": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2191": {
      "op": "SHL"
    },
    "2192": {
      "op": "SUB"
    },
    "2193": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "2194": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2195": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "2196": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AF"
    },
    "2199": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2200": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2202": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2203": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2209": {
      "op": "SHL"
    },
    "2210": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2211": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2212": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2214": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "2215": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "2218": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2219": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11AB"
    },
    "2222": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2223": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2224": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2462,
        2478
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 24,
      "value": "0x1"
    },
    "2226": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2462,
        2478
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2227": {
      "branch": 71,
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2462,
        2483
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2228": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2454,
        2519
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8FF"
    },
    "2231": {
      "branch": 71,
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2454,
        2519
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2232": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2454,
        2519
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2234": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2454,
        2519
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2241": {
      "op": "SHL"
    },
    "2242": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2454,
        2519
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2243": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2454,
        2519
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2246": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2454,
        2519
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2248": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2454,
        2519
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2249": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2454,
        2519
      ],
      "op": "ADD",
      "path": "8"
    },
    "2250": {
      "op": "MSTORE"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2255": {
      "op": "DUP3"
    },
    "2256": {
      "op": "ADD"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "op": "PUSH32",
      "value": "0x537461727420626C6F636B2068656967687420616C7265616479207365742100"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2293": {
      "op": "DUP3"
    },
    "2294": {
      "op": "ADD"
    },
    "2295": {
      "op": "MSTORE"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2298": {
      "op": "ADD"
    },
    "2299": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2454,
        2519
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "2302": {
      "op": "JUMP"
    },
    "2303": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2454,
        2519
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2304": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2525,
        2541
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 25,
      "value": "0x1"
    },
    "2306": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "offset": [
        2525,
        2555
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2307": {
      "fn": "QuarterlyPayout.setStartBlockHeight",
      "jump": "o",
      "offset": [
        2381,
        2560
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2308": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2174,
        2377
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2309": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2311": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2318": {
      "op": "SHL"
    },
    "2319": {
      "op": "SUB"
    },
    "2320": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "2321": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2322": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "2323": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92E"
    },
    "2326": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2327": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2329": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2330": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2336": {
      "op": "SHL"
    },
    "2337": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2338": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2339": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2341": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "2342": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "2345": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2346": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11AB"
    },
    "2349": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2350": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2357": {
      "op": "SHL"
    },
    "2358": {
      "op": "SUB"
    },
    "2359": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2246,
        2267
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 26
    },
    "2360": {
      "branch": 72,
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2246,
        2267
      ],
      "op": "AND",
      "path": "8"
    },
    "2361": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x954"
    },
    "2364": {
      "branch": 72,
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2365": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2367": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2376": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2377": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2379": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "ADD",
      "path": "8"
    },
    "2380": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "2383": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2384": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11E0"
    },
    "2387": {
      "fn": "QuarterlyPayout.removeOperator",
      "jump": "i",
      "offset": [
        2238,
        2302
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2388": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2238,
        2302
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2395": {
      "op": "SHL"
    },
    "2396": {
      "op": "SUB"
    },
    "2397": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 27
    },
    "2398": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "AND",
      "path": "8"
    },
    "2399": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2330,
        2335
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2401": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2402": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2403": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2404": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2318
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "2406": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2408": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2409": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2410": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2411": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2413": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2414": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2415": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2327
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2416": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2335
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2417": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2335
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2420": {
      "op": "NOT"
    },
    "2421": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2335
      ],
      "op": "AND",
      "path": "8"
    },
    "2422": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2335
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2423": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2308,
        2335
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2424": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2346,
        2372
      ],
      "op": "MLOAD",
      "path": "8",
      "statement": 28
    },
    "2425": {
      "op": "SWAP2"
    },
    "2426": {
      "op": "DUP3"
    },
    "2427": {
      "op": "MSTORE"
    },
    "2428": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2346,
        2372
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x5DCC54DE76A00F463C78AB7C4546B9D243502FB27AC63CC6DF71A88B21AAD186"
    },
    "2461": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2346,
        2372
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2462": {
      "op": "ADD"
    },
    "2463": {
      "fn": "QuarterlyPayout.removeOperator",
      "offset": [
        2346,
        2372
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D7"
    },
    "2466": {
      "op": "JUMP"
    },
    "2467": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3697,
        3872
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2468": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3746,
        3753
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2470": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2471": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2478": {
      "op": "SHL"
    },
    "2479": {
      "op": "SUB"
    },
    "2480": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "2481": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3769,
        3779
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 29
    },
    "2482": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3769,
        3790
      ],
      "op": "EQ",
      "path": "8"
    },
    "2483": {
      "branch": 73,
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3769,
        3790
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2484": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3769,
        3816
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9CC"
    },
    "2487": {
      "branch": 73,
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3769,
        3816
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2488": {
      "op": "POP"
    },
    "2489": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3805,
        3815
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2490": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2492": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2493": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2494": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2495": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "2497": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2499": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2500": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2502": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2503": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2504": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2505": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "2507": {
      "branch": 74,
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3794,
        3816
      ],
      "op": "AND",
      "path": "8"
    },
    "2508": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3769,
        3816
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2509": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3761,
        3836
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA0A"
    },
    "2512": {
      "branch": 74,
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3761,
        3836
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2513": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3761,
        3836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2515": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3761,
        3836
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2522": {
      "op": "SHL"
    },
    "2523": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3761,
        3836
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2524": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3761,
        3836
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2527": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3761,
        3836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2529": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3761,
        3836
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2530": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3761,
        3836
      ],
      "op": "ADD",
      "path": "8"
    },
    "2531": {
      "op": "MSTORE"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2536": {
      "op": "DUP3"
    },
    "2537": {
      "op": "ADD"
    },
    "2538": {
      "op": "MSTORE"
    },
    "2539": {
      "op": "PUSH15",
      "value": "0x4E6F7420617574686F72697A656421"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2557": {
      "op": "SHL"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2560": {
      "op": "DUP3"
    },
    "2561": {
      "op": "ADD"
    },
    "2562": {
      "op": "MSTORE"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2565": {
      "op": "ADD"
    },
    "2566": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3761,
        3836
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "2569": {
      "op": "JUMP"
    },
    "2570": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3761,
        3836
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2571": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3849,
        3867
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 30,
      "value": "0xA12"
    },
    "2574": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3849,
        3865
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE50"
    },
    "2577": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "jump": "i",
      "offset": [
        3849,
        3867
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2578": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3849,
        3867
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2579": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3842,
        3867
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2580": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3842,
        3867
      ],
      "op": "POP",
      "path": "8"
    },
    "2581": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "offset": [
        3697,
        3872
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2582": {
      "fn": "QuarterlyPayout.getCurrentEpoch",
      "jump": "o",
      "offset": [
        3697,
        3872
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2584": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2586": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2593": {
      "op": "SHL"
    },
    "2594": {
      "op": "SUB"
    },
    "2595": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "2596": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2597": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "2598": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA41"
    },
    "2601": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2602": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2604": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2605": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2611": {
      "op": "SHL"
    },
    "2612": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2613": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2614": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2616": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "2617": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "2620": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2621": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11AB"
    },
    "2624": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2625": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2632": {
      "op": "SHL"
    },
    "2633": {
      "op": "SUB"
    },
    "2634": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 31
    },
    "2635": {
      "branch": 82,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "AND",
      "path": "0"
    },
    "2636": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA6"
    },
    "2639": {
      "branch": 82,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2640": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2642": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2649": {
      "op": "SHL"
    },
    "2650": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2651": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2654": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2656": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2657": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "ADD",
      "path": "0"
    },
    "2658": {
      "op": "MSTORE"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2663": {
      "op": "DUP3"
    },
    "2664": {
      "op": "ADD"
    },
    "2665": {
      "op": "MSTORE"
    },
    "2666": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2701": {
      "op": "DUP3"
    },
    "2702": {
      "op": "ADD"
    },
    "2703": {
      "op": "MSTORE"
    },
    "2704": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2713": {
      "op": "SHL"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2716": {
      "op": "DUP3"
    },
    "2717": {
      "op": "ADD"
    },
    "2718": {
      "op": "MSTORE"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2721": {
      "op": "ADD"
    },
    "2722": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "2725": {
      "op": "JUMP"
    },
    "2726": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2727": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x0"
    },
    "2729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2731": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2733": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2740": {
      "op": "SHL"
    },
    "2741": {
      "op": "SUB"
    },
    "2742": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2743": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2744": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "AND",
      "path": "0"
    },
    "2745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2746": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2747": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "AND",
      "path": "0"
    },
    "2748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2749": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2782": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2783": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2216
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x0"
    },
    "2786": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2794": {
      "op": "SHL"
    },
    "2795": {
      "op": "SUB"
    },
    "2796": {
      "op": "NOT"
    },
    "2797": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2804": {
      "op": "SHL"
    },
    "2805": {
      "op": "SUB"
    },
    "2806": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2807": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2808": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2809": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "2810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2811": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2812": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2813": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "OR",
      "path": "0"
    },
    "2814": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2815": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2816": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2817": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2818": {
      "fn": "SafeMath.sub",
      "offset": [
        3097,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2820": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 34,
      "value": "0xB0D"
    },
    "2823": {
      "fn": "SafeMath.sub",
      "offset": [
        3127,
        3128
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2824": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3124
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2825": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x122D"
    },
    "2828": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2829": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2830": {
      "fn": "SafeMath.sub",
      "offset": [
        3116,
        3128
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2831": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2832": {
      "op": "POP"
    },
    "2833": {
      "op": "POP"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2836": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        4987,
        5343
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2837": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5065,
        5079
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2839": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5081,
        5105
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2840": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5109,
        5152
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB21"
    },
    "2843": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5133,
        5138
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2844": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5140,
        5151
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2845": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5109,
        5132
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC5A"
    },
    "2848": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "jump": "i",
      "offset": [
        5109,
        5152
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2849": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5109,
        5152
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2850": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5064,
        5152
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2851": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5064,
        5152
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2852": {
      "op": "POP"
    },
    "2853": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5064,
        5152
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2854": {
      "op": "POP"
    },
    "2855": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5182,
        5205
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 35,
      "value": "0xB31"
    },
    "2858": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5064,
        5152
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2859": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5203,
        5204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2861": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5182,
        5202
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEC6"
    },
    "2864": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "jump": "i",
      "offset": [
        5182,
        5205
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2865": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5182,
        5205
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2872": {
      "op": "SHL"
    },
    "2873": {
      "op": "SUB"
    },
    "2874": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5179
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2875": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5179
      ],
      "op": "AND",
      "path": "8"
    },
    "2876": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5179
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2878": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5179
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2879": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5179
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2880": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5179
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2881": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5172
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2883": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5179
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2885": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5179
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2886": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5179
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2888": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5179
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2889": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5179
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2890": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5158,
        5205
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2891": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5215,
        5225
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2892": {
      "branch": 75,
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5215,
        5225
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2893": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5211,
        5339
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBD0"
    },
    "2896": {
      "branch": 75,
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5211,
        5339
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2897": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 36,
      "value": "0x40"
    },
    "2899": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2900": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2901": {
      "op": "DUP4"
    },
    "2902": {
      "op": "DUP2"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2906": {
      "op": "DUP2"
    },
    "2907": {
      "op": "ADD"
    },
    "2908": {
      "op": "DUP4"
    },
    "2909": {
      "op": "SWAP1"
    },
    "2910": {
      "op": "MSTORE"
    },
    "2911": {
      "op": "SWAP1"
    },
    "2912": {
      "op": "DUP2"
    },
    "2913": {
      "op": "ADD"
    },
    "2914": {
      "op": "DUP5"
    },
    "2915": {
      "op": "SWAP1"
    },
    "2916": {
      "op": "MSTORE"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2923": {
      "op": "SHL"
    },
    "2924": {
      "op": "SUB"
    },
    "2925": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2926": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "AND",
      "path": "8"
    },
    "2927": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2928": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x45C072AA05B9853B5A993DE7A28BC332EE01404A628CEC1A23CE0F659F842EF1"
    },
    "2961": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2964": {
      "op": "ADD"
    },
    "2965": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2967": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2968": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2969": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2970": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "SUB",
      "path": "8"
    },
    "2971": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2972": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5240,
        5291
      ],
      "op": "LOG2",
      "path": "8"
    },
    "2973": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5299,
        5332
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 37,
      "value": "0xBD0"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2982": {
      "op": "SHL"
    },
    "2983": {
      "op": "SUB"
    },
    "2984": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5299,
        5304
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "3017": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5299,
        5317
      ],
      "op": "AND",
      "path": "8"
    },
    "3018": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5318,
        5323
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3019": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5325,
        5331
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3020": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5299,
        5317
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xED2"
    },
    "3023": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "jump": "i",
      "offset": [
        5299,
        5332
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3024": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5299,
        5332
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3025": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5058,
        5343
      ],
      "op": "POP",
      "path": "8"
    },
    "3026": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        5058,
        5343
      ],
      "op": "POP",
      "path": "8"
    },
    "3027": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        4987,
        5343
      ],
      "op": "POP",
      "path": "8"
    },
    "3028": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "offset": [
        4987,
        5343
      ],
      "op": "POP",
      "path": "8"
    },
    "3029": {
      "fn": "QuarterlyPayout._claimUntilEpoch",
      "jump": "o",
      "offset": [
        4987,
        5343
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3030": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "offset": [
        5427,
        5571
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3031": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "offset": [
        5499,
        5506
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3033": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "offset": [
        5521,
        5566
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 38,
      "value": "0x437"
    },
    "3036": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "offset": [
        5542,
        5565
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBE6"
    },
    "3039": {
      "offset": [
        603,
        605
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "3041": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "offset": [
        5559,
        5564
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3042": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "offset": [
        5542,
        5558
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF07"
    },
    "3045": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "jump": "i",
      "offset": [
        5542,
        5565
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3046": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "offset": [
        5542,
        5565
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3047": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "offset": [
        5521,
        5537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3049": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "offset": [
        5521,
        5537
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3050": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "offset": [
        5521,
        5537
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3051": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "offset": [
        5521,
        5541
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEC6"
    },
    "3054": {
      "fn": "QuarterlyPayout._getEpochStartBlockHeight",
      "jump": "i",
      "offset": [
        5521,
        5566
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3055": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3056": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 39,
      "value": "0x40"
    },
    "3058": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3065": {
      "op": "SHL"
    },
    "3066": {
      "op": "SUB"
    },
    "3067": {
      "op": "DUP1"
    },
    "3068": {
      "op": "DUP6"
    },
    "3069": {
      "op": "AND"
    },
    "3070": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3072": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3073": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "2"
    },
    "3074": {
      "op": "MSTORE"
    },
    "3075": {
      "op": "DUP4"
    },
    "3076": {
      "op": "AND"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3079": {
      "op": "DUP3"
    },
    "3080": {
      "op": "ADD"
    },
    "3081": {
      "op": "MSTORE"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3084": {
      "op": "DUP2"
    },
    "3085": {
      "op": "ADD"
    },
    "3086": {
      "op": "DUP3"
    },
    "3087": {
      "op": "SWAP1"
    },
    "3088": {
      "op": "MSTORE"
    },
    "3089": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD0"
    },
    "3092": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3093": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3094": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3095": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3102": {
      "op": "SHL"
    },
    "3103": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        965,
        992
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3106": {
      "op": "ADD"
    },
    "3107": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3108": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3110": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3111": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3114": {
      "op": "NOT"
    },
    "3115": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3116": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3117": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SUB",
      "path": "2"
    },
    "3118": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "2"
    },
    "3119": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3120": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3121": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3122": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3123": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3124": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3126": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3127": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "2"
    },
    "3128": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3129": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3136": {
      "op": "SHL"
    },
    "3137": {
      "op": "SUB"
    },
    "3138": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "AND",
      "path": "2"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3145": {
      "op": "SHL"
    },
    "3146": {
      "op": "SUB"
    },
    "3147": {
      "op": "NOT"
    },
    "3148": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3149": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3150": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "AND",
      "path": "2"
    },
    "3151": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3152": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3153": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3154": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "OR",
      "path": "2"
    },
    "3155": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3156": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3157": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3158": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF13"
    },
    "3161": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        915,
        1011
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3162": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4287,
        4983
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3169": {
      "op": "SHL"
    },
    "3170": {
      "op": "SUB"
    },
    "3171": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4549
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 40
    },
    "3172": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4549
      ],
      "op": "AND",
      "path": "8"
    },
    "3173": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4378,
        4385
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3175": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4549
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3176": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4549
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3177": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4549
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3178": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4542
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3180": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4549
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3182": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4549
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3183": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4549
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3185": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4549
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3186": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4549
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3187": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4528,
        4549
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3188": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4378,
        4385
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3189": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4378,
        4385
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3190": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4378,
        4385
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3191": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4378,
        4385
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3192": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4378,
        4385
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3193": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4378,
        4385
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3194": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4515,
        4947
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3195": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4560,
        4571
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3196": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4551,
        4556
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3197": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4551,
        4571
      ],
      "op": "GT",
      "path": "8"
    },
    "3198": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4515,
        4947
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE35"
    },
    "3201": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4515,
        4947
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3202": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4620,
        4652
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 41,
      "value": "0xC8A"
    },
    "3205": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4646,
        4651
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3206": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4620,
        4645
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBD6"
    },
    "3209": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "jump": "i",
      "offset": [
        4620,
        4652
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3210": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4620,
        4652
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3211": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4590,
        4652
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3212": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4590,
        4652
      ],
      "op": "POP",
      "path": "8"
    },
    "3213": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4680,
        4707
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3214": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4664,
        4676
      ],
      "op": "NUMBER",
      "path": "8"
    },
    "3215": {
      "branch": 76,
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4664,
        4707
      ],
      "op": "GT",
      "path": "8"
    },
    "3216": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4660,
        4714
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC98"
    },
    "3219": {
      "branch": 76,
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4660,
        4714
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3220": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4709,
        4714
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 42,
      "value": "0xE35"
    },
    "3223": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4709,
        4714
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3224": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4660,
        4714
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3225": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 43,
      "value": "0x40"
    },
    "3227": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3228": {
      "op": "PUSH4",
      "value": "0x981B24D"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3235": {
      "op": "SHL"
    },
    "3236": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3237": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3238": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3240": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3241": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "ADD",
      "path": "8"
    },
    "3242": {
      "op": "DUP4"
    },
    "3243": {
      "op": "SWAP1"
    },
    "3244": {
      "op": "MSTORE"
    },
    "3245": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4742
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3284": {
      "op": "SHL"
    },
    "3285": {
      "op": "SUB"
    },
    "3286": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4756
      ],
      "op": "AND",
      "path": "8"
    },
    "3287": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4756
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3288": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4756
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x981B24D0"
    },
    "3293": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4756
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3296": {
      "op": "ADD"
    },
    "3297": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3299": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3301": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3302": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3303": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3304": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "SUB",
      "path": "8"
    },
    "3305": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3306": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3307": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3308": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "3309": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3310": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3311": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3312": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCF8"
    },
    "3315": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3316": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3318": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3319": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3320": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3321": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "POP",
      "path": "8"
    },
    "3322": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "GAS",
      "path": "8"
    },
    "3323": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "3324": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3325": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3326": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3327": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD0C"
    },
    "3330": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3331": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3332": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3334": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3335": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3336": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3337": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3339": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3340": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3341": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "POP",
      "path": "8"
    },
    "3342": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "POP",
      "path": "8"
    },
    "3343": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "POP",
      "path": "8"
    },
    "3344": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "POP",
      "path": "8"
    },
    "3345": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3347": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3348": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3349": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3351": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "NOT",
      "path": "8"
    },
    "3352": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3354": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3355": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "ADD",
      "path": "8"
    },
    "3356": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "AND",
      "path": "8"
    },
    "3357": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3358": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "ADD",
      "path": "8"
    },
    "3359": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3360": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3362": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3363": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "POP",
      "path": "8"
    },
    "3364": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3365": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "ADD",
      "path": "8"
    },
    "3366": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3367": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD30"
    },
    "3370": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3371": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3372": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1244"
    },
    "3375": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "jump": "i",
      "offset": [
        4736,
        4785
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3376": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4736,
        4785
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3377": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4722,
        4785
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3378": {
      "op": "POP"
    },
    "3379": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4797,
        4812
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3380": {
      "branch": 77,
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4797,
        4812
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3381": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4793,
        4941
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE23"
    },
    "3384": {
      "branch": 77,
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4793,
        4941
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3385": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 44,
      "value": "0x40"
    },
    "3387": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3388": {
      "op": "PUSH4",
      "value": "0x277166BF"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3395": {
      "op": "SHL"
    },
    "3396": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3397": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3404": {
      "op": "SHL"
    },
    "3405": {
      "op": "SUB"
    },
    "3406": {
      "op": "DUP10"
    },
    "3407": {
      "op": "DUP2"
    },
    "3408": {
      "op": "AND"
    },
    "3409": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3411": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3412": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "ADD",
      "path": "8"
    },
    "3413": {
      "op": "MSTORE"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3416": {
      "op": "DUP3"
    },
    "3417": {
      "op": "ADD"
    },
    "3418": {
      "op": "DUP5"
    },
    "3419": {
      "op": "SWAP1"
    },
    "3420": {
      "op": "MSTORE"
    },
    "3421": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4932
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE16"
    },
    "3424": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4932
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3425": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4920,
        4931
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3426": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4920,
        4931
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3427": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4915
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE10"
    },
    "3430": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4915
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3431": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4866
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "3464": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4878
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3465": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4878
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3466": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4878
      ],
      "op": "AND",
      "path": "8"
    },
    "3467": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4878
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3468": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4878
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x4EE2CD7E"
    },
    "3473": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4878
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3476": {
      "op": "ADD"
    },
    "3477": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3479": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3481": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3482": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3483": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3484": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "SUB",
      "path": "8"
    },
    "3485": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3486": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3487": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3488": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "3489": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3490": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3491": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3492": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDAC"
    },
    "3495": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3496": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3498": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3499": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3500": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3501": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "POP",
      "path": "8"
    },
    "3502": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "GAS",
      "path": "8"
    },
    "3503": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "3504": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3505": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3506": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3507": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDC0"
    },
    "3510": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3511": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3512": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3514": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3515": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3516": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3517": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3519": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3520": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3521": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "POP",
      "path": "8"
    },
    "3522": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "POP",
      "path": "8"
    },
    "3523": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "POP",
      "path": "8"
    },
    "3524": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "POP",
      "path": "8"
    },
    "3525": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3527": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3528": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3529": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3531": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "NOT",
      "path": "8"
    },
    "3532": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3534": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3535": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "ADD",
      "path": "8"
    },
    "3536": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "AND",
      "path": "8"
    },
    "3537": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3538": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "ADD",
      "path": "8"
    },
    "3539": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3540": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3542": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3543": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "POP",
      "path": "8"
    },
    "3544": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3545": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "ADD",
      "path": "8"
    },
    "3546": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3547": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDE4"
    },
    "3550": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3551": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3552": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1244"
    },
    "3555": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "jump": "i",
      "offset": [
        4860,
        4914
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3556": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4860,
        4914
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3557": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4848
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3559": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4849,
        4854
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3560": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3561": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3562": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3563": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "LT",
      "path": "8"
    },
    "3564": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDF7"
    },
    "3567": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3568": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDF7"
    },
    "3571": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x125D"
    },
    "3574": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "jump": "i",
      "offset": [
        4834,
        4855
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3575": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3576": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3577": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3579": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3580": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3582": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3584": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3585": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "ADD",
      "path": "8"
    },
    "3586": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4855
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3587": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4859
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF07"
    },
    "3590": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4859
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3591": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4915
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3592": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4915
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3593": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4915
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "3598": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4915
      ],
      "op": "AND",
      "path": "8"
    },
    "3599": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "jump": "i",
      "offset": [
        4834,
        4915
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3600": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4915
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3601": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4919
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3602": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4919
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFE5"
    },
    "3605": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "jump": "i",
      "offset": [
        4834,
        4932
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3606": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4834,
        4932
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3607": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4824,
        4932
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE20"
    },
    "3610": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4824,
        4932
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3611": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4824,
        4932
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3612": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4824,
        4932
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1273"
    },
    "3615": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "jump": "i",
      "offset": [
        4824,
        4932
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3616": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4824,
        4932
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3617": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4824,
        4932
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3618": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4824,
        4932
      ],
      "op": "POP",
      "path": "8"
    },
    "3619": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4793,
        4941
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3620": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4573,
        4580
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 45
    },
    "3621": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4573,
        4580
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE2D"
    },
    "3624": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4573,
        4580
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3625": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4573,
        4580
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x128B"
    },
    "3628": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "jump": "i",
      "offset": [
        4573,
        4580
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3629": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4573,
        4580
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3630": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4573,
        4580
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3631": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4573,
        4580
      ],
      "op": "POP",
      "path": "8"
    },
    "3632": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4573,
        4580
      ],
      "op": "POP",
      "path": "8"
    },
    "3633": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4515,
        4947
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC7A"
    },
    "3636": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4515,
        4947
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3637": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4515,
        4947
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3638": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4960,
        4966
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 46
    },
    "3639": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4968,
        4977
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE41"
    },
    "3642": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4976,
        4977
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3644": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4968,
        4973
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3645": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4968,
        4977
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x122D"
    },
    "3648": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "jump": "i",
      "offset": [
        4968,
        4977
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3649": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4968,
        4977
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3650": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4952,
        4978
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "3651": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4952,
        4978
      ],
      "op": "POP",
      "path": "8"
    },
    "3652": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4952,
        4978
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "3653": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4952,
        4978
      ],
      "op": "POP",
      "path": "8"
    },
    "3654": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4952,
        4978
      ],
      "op": "POP",
      "path": "8"
    },
    "3655": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4952,
        4978
      ],
      "op": "POP",
      "path": "8"
    },
    "3656": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4952,
        4978
      ],
      "op": "POP",
      "path": "8"
    },
    "3657": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4952,
        4978
      ],
      "op": "POP",
      "path": "8"
    },
    "3658": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4287,
        4983
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3659": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4287,
        4983
      ],
      "op": "POP",
      "path": "8"
    },
    "3660": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4287,
        4983
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3661": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4287,
        4983
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3662": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "offset": [
        4287,
        4983
      ],
      "op": "POP",
      "path": "8"
    },
    "3663": {
      "fn": "QuarterlyPayout._getClaimableUntilEpoch",
      "jump": "o",
      "offset": [
        4287,
        4983
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3664": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5628,
        5845
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3665": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5678,
        5685
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3667": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5717,
        5733
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 47,
      "value": "0x1"
    },
    "3669": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5717,
        5733
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3670": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5701,
        5713
      ],
      "op": "NUMBER",
      "path": "8"
    },
    "3671": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5701,
        5733
      ],
      "op": "LT",
      "path": "8"
    },
    "3672": {
      "branch": 78,
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5701,
        5733
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3673": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5693,
        5776
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEB3"
    },
    "3676": {
      "branch": 78,
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5693,
        5776
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3677": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5693,
        5776
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3679": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5693,
        5776
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3680": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3686": {
      "op": "SHL"
    },
    "3687": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5693,
        5776
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3688": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5693,
        5776
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3691": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5693,
        5776
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3693": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5693,
        5776
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3694": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5693,
        5776
      ],
      "op": "ADD",
      "path": "8"
    },
    "3695": {
      "op": "MSTORE"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3700": {
      "op": "DUP3"
    },
    "3701": {
      "op": "ADD"
    },
    "3702": {
      "op": "MSTORE"
    },
    "3703": {
      "op": "PUSH32",
      "value": "0x546865207061796F757420636F6E7472616374206973206E6F74207374617274"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3738": {
      "op": "DUP3"
    },
    "3739": {
      "op": "ADD"
    },
    "3740": {
      "op": "MSTORE"
    },
    "3741": {
      "op": "PUSH6",
      "value": "0x1959081E595D"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "3750": {
      "op": "SHL"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3753": {
      "op": "DUP3"
    },
    "3754": {
      "op": "ADD"
    },
    "3755": {
      "op": "MSTORE"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3758": {
      "op": "ADD"
    },
    "3759": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5693,
        5776
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x393"
    },
    "3762": {
      "op": "JUMP"
    },
    "3763": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5693,
        5776
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3764": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5789,
        5840
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 48,
      "value": "0xA12"
    },
    "3767": {
      "offset": [
        603,
        605
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "3769": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5805,
        5821
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3771": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5805,
        5821
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3772": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5790,
        5802
      ],
      "op": "NUMBER",
      "path": "8"
    },
    "3773": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5790,
        5821
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE10"
    },
    "3776": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5790,
        5821
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3777": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5790,
        5821
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3778": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "offset": [
        5790,
        5821
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x122D"
    },
    "3781": {
      "fn": "QuarterlyPayout._getCurrentEpoch",
      "jump": "i",
      "offset": [
        5790,
        5821
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3782": {
      "fn": "SafeMath.add",
      "offset": [
        2672,
        2768
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3783": {
      "fn": "SafeMath.add",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3785": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 49,
      "value": "0xB0D"
    },
    "3788": {
      "fn": "SafeMath.add",
      "offset": [
        2760,
        2761
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3789": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2757
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3790": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1273"
    },
    "3793": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2756,
        2761
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3794": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3795": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x40"
    },
    "3797": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3804": {
      "op": "SHL"
    },
    "3805": {
      "op": "SUB"
    },
    "3806": {
      "op": "DUP4"
    },
    "3807": {
      "op": "AND"
    },
    "3808": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3810": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3811": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "2"
    },
    "3812": {
      "op": "MSTORE"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3815": {
      "op": "DUP2"
    },
    "3816": {
      "op": "ADD"
    },
    "3817": {
      "op": "DUP3"
    },
    "3818": {
      "op": "SWAP1"
    },
    "3819": {
      "op": "MSTORE"
    },
    "3820": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF02"
    },
    "3823": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3824": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3825": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3826": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3833": {
      "op": "SHL"
    },
    "3834": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3837": {
      "op": "ADD"
    },
    "3838": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC23"
    },
    "3841": {
      "op": "JUMP"
    },
    "3842": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3843": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "3844": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "3845": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "3846": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        634,
        809
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3847": {
      "fn": "SafeMath.mul",
      "offset": [
        3382,
        3478
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3848": {
      "fn": "SafeMath.mul",
      "offset": [
        3440,
        3447
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3850": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 51,
      "value": "0xB0D"
    },
    "3853": {
      "fn": "SafeMath.mul",
      "offset": [
        3470,
        3471
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3854": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3467
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3855": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12A6"
    },
    "3858": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3466,
        3471
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3859": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3022,
        3773
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3860": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3862": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF68"
    },
    "3865": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3499
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3868": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3869": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3870": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3872": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "2"
    },
    "3873": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3875": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3879": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3880": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3881": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3883": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "2"
    },
    "3884": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3918": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3919": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "POP",
      "path": "2"
    },
    "3920": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3475,
        3480
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3927": {
      "op": "SHL"
    },
    "3928": {
      "op": "SUB"
    },
    "3929": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "AND",
      "path": "2"
    },
    "3930": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF1"
    },
    "3933": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3934": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3935": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3936": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3937": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3942": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "AND",
      "path": "2"
    },
    "3943": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3944": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3946": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3947": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3948": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3949": {
      "op": "POP"
    },
    "3950": {
      "branch": 83,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3571
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3951": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF02"
    },
    "3954": {
      "branch": 83,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3955": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3690,
        3700
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 52
    },
    "3956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3957": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3959": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "2"
    },
    "3960": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3961": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3962": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3963": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "2"
    },
    "3964": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3965": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF86"
    },
    "3968": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3969": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3970": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C5"
    },
    "3973": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3974": {
      "branch": 84,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3975": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF02"
    },
    "3978": {
      "branch": 84,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3979": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3981": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3982": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3988": {
      "op": "SHL"
    },
    "3989": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3990": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3993": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3995": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3996": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "ADD",
      "path": "2"
    },
    "3997": {
      "op": "MSTORE"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4002": {
      "op": "DUP3"
    },
    "4003": {
      "op": "ADD"
    },
    "4004": {
      "op": "MSTORE"
    },
    "4005": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4040": {
      "op": "DUP3"
    },
    "4041": {
      "op": "ADD"
    },
    "4042": {
      "op": "MSTORE"
    },
    "4043": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "4056": {
      "op": "SHL"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4059": {
      "op": "DUP3"
    },
    "4060": {
      "op": "ADD"
    },
    "4061": {
      "op": "MSTORE"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4064": {
      "op": "ADD"
    },
    "4065": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x393"
    },
    "4068": {
      "op": "JUMP"
    },
    "4069": {
      "fn": "SafeMath.div",
      "offset": [
        3767,
        3863
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4070": {
      "fn": "SafeMath.div",
      "offset": [
        3825,
        3832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4072": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 53,
      "value": "0xB0D"
    },
    "4075": {
      "fn": "SafeMath.div",
      "offset": [
        3855,
        3856
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4076": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3852
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4077": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E7"
    },
    "4080": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3851,
        3856
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4081": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4082": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4084": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 54,
      "value": "0x1000"
    },
    "4087": {
      "fn": "Address.functionCall",
      "offset": [
        3729,
        3735
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4088": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3741
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4089": {
      "fn": "Address.functionCall",
      "offset": [
        3743,
        3744
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4091": {
      "fn": "Address.functionCall",
      "offset": [
        3746,
        3758
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4092": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1008"
    },
    "4095": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4096": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4097": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3759
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4098": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4099": {
      "op": "POP"
    },
    "4100": {
      "op": "POP"
    },
    "4101": {
      "op": "POP"
    },
    "4102": {
      "op": "POP"
    },
    "4103": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4105": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4727,
        4739
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4107": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4784,
        4789
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 55
    },
    "4108": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4780
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "4109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "LT",
      "path": "3"
    },
    "4110": {
      "branch": 79,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4111": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1069"
    },
    "4114": {
      "branch": 79,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4124": {
      "op": "SHL"
    },
    "4125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4126": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4129": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4131": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4132": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "ADD",
      "path": "3"
    },
    "4133": {
      "op": "MSTORE"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4138": {
      "op": "DUP3"
    },
    "4139": {
      "op": "ADD"
    },
    "4140": {
      "op": "MSTORE"
    },
    "4141": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4176": {
      "op": "DUP3"
    },
    "4177": {
      "op": "ADD"
    },
    "4178": {
      "op": "MSTORE"
    },
    "4179": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "4188": {
      "op": "SHL"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4191": {
      "op": "DUP3"
    },
    "4192": {
      "op": "ADD"
    },
    "4193": {
      "op": "MSTORE"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4196": {
      "op": "ADD"
    },
    "4197": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x393"
    },
    "4200": {
      "op": "JUMP"
    },
    "4201": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4202": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4203": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "4204": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 56,
      "value": "0x10B7"
    },
    "4207": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4208": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4210": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4211": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4217": {
      "op": "SHL"
    },
    "4218": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4219": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4222": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4224": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4225": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "ADD",
      "path": "3"
    },
    "4226": {
      "op": "MSTORE"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4231": {
      "op": "DUP3"
    },
    "4232": {
      "op": "ADD"
    },
    "4233": {
      "op": "MSTORE"
    },
    "4234": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4269": {
      "op": "DUP3"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "op": "MSTORE"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4274": {
      "op": "ADD"
    },
    "4275": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x393"
    },
    "4278": {
      "op": "JUMP"
    },
    "4279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4985
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4987,
        5010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5020
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4290": {
      "op": "SHL"
    },
    "4291": {
      "op": "SUB"
    },
    "4292": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5025
      ],
      "op": "AND",
      "path": "3"
    },
    "4293": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5034,
        5039
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5046
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4295": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4297": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D3"
    },
    "4301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4302": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4303": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1335"
    },
    "4306": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4307": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4312": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SUB",
      "path": "3"
    },
    "4316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4317": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4318": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4319": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "GAS",
      "path": "3"
    },
    "4320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "CALL",
      "path": "3"
    },
    "4321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4323": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4324": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4325": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4326": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4329": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4330": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "EQ",
      "path": "3"
    },
    "4331": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1110"
    },
    "4334": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4335": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4337": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4338": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4339": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4340": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4342": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "NOT",
      "path": "3"
    },
    "4343": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "4345": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4346": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "4347": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "AND",
      "path": "3"
    },
    "4348": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4349": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "4350": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4352": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4353": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4354": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4355": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4356": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4357": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4359": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4361": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4362": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "4363": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4364": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1115"
    },
    "4367": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4368": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4369": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4371": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4372": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4373": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4374": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4375": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4376": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4377": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4378": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4379": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 57,
      "value": "0x1125"
    },
    "4382": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5082,
        5089
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4383": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5091,
        5101
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4384": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5103,
        5115
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4385": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5081
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1130"
    },
    "4388": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4389": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4390": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5057,
        5116
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "4391": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "4392": {
      "op": "POP"
    },
    "4393": {
      "op": "POP"
    },
    "4394": {
      "op": "POP"
    },
    "4395": {
      "op": "POP"
    },
    "4396": {
      "op": "POP"
    },
    "4397": {
      "op": "POP"
    },
    "4398": {
      "op": "POP"
    },
    "4399": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4400": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7083,
        7808
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4401": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4403": {
      "branch": 80,
      "fn": "Address._verifyCallResult",
      "offset": [
        7226,
        7233
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4404": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4405": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x113F"
    },
    "4408": {
      "branch": 80,
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4409": {
      "op": "POP"
    },
    "4410": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7256,
        7266
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 58
    },
    "4411": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB0D"
    },
    "4414": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4415": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4416": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4417": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4418": {
      "branch": 81,
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7388
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4419": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x114F"
    },
    "4422": {
      "branch": 81,
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4423": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7635
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4424": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7619,
        7636
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4425": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7685,
        7700
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4426": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7682
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4427": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7668,
        7670
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4429": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7664,
        7683
      ],
      "op": "ADD",
      "path": "3"
    },
    "4430": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7657,
        7701
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4431": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4432": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 59
    },
    "4433": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4435": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4442": {
      "op": "SHL"
    },
    "4443": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4444": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4445": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4447": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "ADD",
      "path": "3"
    },
    "4448": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x393"
    },
    "4451": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4452": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4453": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1351"
    },
    "4456": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4457": {
      "op": "JUMPDEST"
    },
    "4458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4462": {
      "op": "DUP3"
    },
    "4463": {
      "op": "DUP5"
    },
    "4464": {
      "op": "SUB"
    },
    "4465": {
      "op": "SLT"
    },
    "4466": {
      "op": "ISZERO"
    },
    "4467": {
      "op": "PUSH2",
      "value": "0x117B"
    },
    "4470": {
      "op": "JUMPI"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4473": {
      "op": "DUP1"
    },
    "4474": {
      "op": "REVERT"
    },
    "4475": {
      "op": "JUMPDEST"
    },
    "4476": {
      "op": "DUP2"
    },
    "4477": {
      "op": "CALLDATALOAD"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4484": {
      "op": "SHL"
    },
    "4485": {
      "op": "SUB"
    },
    "4486": {
      "op": "DUP2"
    },
    "4487": {
      "op": "AND"
    },
    "4488": {
      "op": "DUP2"
    },
    "4489": {
      "op": "EQ"
    },
    "4490": {
      "op": "PUSH2",
      "value": "0xB0D"
    },
    "4493": {
      "op": "JUMPI"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4496": {
      "op": "DUP1"
    },
    "4497": {
      "op": "REVERT"
    },
    "4498": {
      "op": "JUMPDEST"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4503": {
      "op": "DUP3"
    },
    "4504": {
      "op": "DUP5"
    },
    "4505": {
      "op": "SUB"
    },
    "4506": {
      "op": "SLT"
    },
    "4507": {
      "op": "ISZERO"
    },
    "4508": {
      "op": "PUSH2",
      "value": "0x11A4"
    },
    "4511": {
      "op": "JUMPI"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4514": {
      "op": "DUP1"
    },
    "4515": {
      "op": "REVERT"
    },
    "4516": {
      "op": "JUMPDEST"
    },
    "4517": {
      "op": "POP"
    },
    "4518": {
      "op": "CALLDATALOAD"
    },
    "4519": {
      "op": "SWAP2"
    },
    "4520": {
      "op": "SWAP1"
    },
    "4521": {
      "op": "POP"
    },
    "4522": {
      "jump": "o",
      "op": "JUMP"
    },
    "4523": {
      "op": "JUMPDEST"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4526": {
      "op": "DUP1"
    },
    "4527": {
      "op": "DUP3"
    },
    "4528": {
      "op": "MSTORE"
    },
    "4529": {
      "op": "DUP2"
    },
    "4530": {
      "op": "DUP2"
    },
    "4531": {
      "op": "ADD"
    },
    "4532": {
      "op": "MSTORE"
    },
    "4533": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4568": {
      "op": "DUP3"
    },
    "4569": {
      "op": "ADD"
    },
    "4570": {
      "op": "MSTORE"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4573": {
      "op": "ADD"
    },
    "4574": {
      "op": "SWAP1"
    },
    "4575": {
      "jump": "o",
      "op": "JUMP"
    },
    "4576": {
      "op": "JUMPDEST"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4579": {
      "op": "DUP1"
    },
    "4580": {
      "op": "DUP3"
    },
    "4581": {
      "op": "MSTORE"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4584": {
      "op": "SWAP1"
    },
    "4585": {
      "op": "DUP3"
    },
    "4586": {
      "op": "ADD"
    },
    "4587": {
      "op": "MSTORE"
    },
    "4588": {
      "op": "PUSH32",
      "value": "0x4163636F756E7420616464726573732063616E6E6F74206265207A65726F0000"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4623": {
      "op": "DUP3"
    },
    "4624": {
      "op": "ADD"
    },
    "4625": {
      "op": "MSTORE"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4628": {
      "op": "ADD"
    },
    "4629": {
      "op": "SWAP1"
    },
    "4630": {
      "jump": "o",
      "op": "JUMP"
    },
    "4631": {
      "op": "JUMPDEST"
    },
    "4632": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4639": {
      "op": "SHL"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4642": {
      "op": "MSTORE"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4647": {
      "op": "MSTORE"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4652": {
      "op": "REVERT"
    },
    "4653": {
      "op": "JUMPDEST"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4656": {
      "op": "DUP3"
    },
    "4657": {
      "op": "DUP3"
    },
    "4658": {
      "op": "LT"
    },
    "4659": {
      "op": "ISZERO"
    },
    "4660": {
      "op": "PUSH2",
      "value": "0x123F"
    },
    "4663": {
      "op": "JUMPI"
    },
    "4664": {
      "op": "PUSH2",
      "value": "0x123F"
    },
    "4667": {
      "op": "PUSH2",
      "value": "0x1217"
    },
    "4670": {
      "jump": "i",
      "op": "JUMP"
    },
    "4671": {
      "op": "JUMPDEST"
    },
    "4672": {
      "op": "POP"
    },
    "4673": {
      "op": "SUB"
    },
    "4674": {
      "op": "SWAP1"
    },
    "4675": {
      "jump": "o",
      "op": "JUMP"
    },
    "4676": {
      "op": "JUMPDEST"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4681": {
      "op": "DUP3"
    },
    "4682": {
      "op": "DUP5"
    },
    "4683": {
      "op": "SUB"
    },
    "4684": {
      "op": "SLT"
    },
    "4685": {
      "op": "ISZERO"
    },
    "4686": {
      "op": "PUSH2",
      "value": "0x1256"
    },
    "4689": {
      "op": "JUMPI"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4692": {
      "op": "DUP1"
    },
    "4693": {
      "op": "REVERT"
    },
    "4694": {
      "op": "JUMPDEST"
    },
    "4695": {
      "op": "POP"
    },
    "4696": {
      "op": "MLOAD"
    },
    "4697": {
      "op": "SWAP2"
    },
    "4698": {
      "op": "SWAP1"
    },
    "4699": {
      "op": "POP"
    },
    "4700": {
      "jump": "o",
      "op": "JUMP"
    },
    "4701": {
      "op": "JUMPDEST"
    },
    "4702": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4709": {
      "op": "SHL"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4712": {
      "op": "MSTORE"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4717": {
      "op": "MSTORE"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4722": {
      "op": "REVERT"
    },
    "4723": {
      "op": "JUMPDEST"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4726": {
      "op": "DUP3"
    },
    "4727": {
      "op": "NOT"
    },
    "4728": {
      "op": "DUP3"
    },
    "4729": {
      "op": "GT"
    },
    "4730": {
      "op": "ISZERO"
    },
    "4731": {
      "op": "PUSH2",
      "value": "0x1286"
    },
    "4734": {
      "op": "JUMPI"
    },
    "4735": {
      "op": "PUSH2",
      "value": "0x1286"
    },
    "4738": {
      "op": "PUSH2",
      "value": "0x1217"
    },
    "4741": {
      "jump": "i",
      "op": "JUMP"
    },
    "4742": {
      "op": "JUMPDEST"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "op": "ADD"
    },
    "4745": {
      "op": "SWAP1"
    },
    "4746": {
      "jump": "o",
      "op": "JUMP"
    },
    "4747": {
      "op": "JUMPDEST"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4752": {
      "op": "NOT"
    },
    "4753": {
      "op": "DUP3"
    },
    "4754": {
      "op": "EQ"
    },
    "4755": {
      "op": "ISZERO"
    },
    "4756": {
      "op": "PUSH2",
      "value": "0x129F"
    },
    "4759": {
      "op": "JUMPI"
    },
    "4760": {
      "op": "PUSH2",
      "value": "0x129F"
    },
    "4763": {
      "op": "PUSH2",
      "value": "0x1217"
    },
    "4766": {
      "jump": "i",
      "op": "JUMP"
    },
    "4767": {
      "op": "JUMPDEST"
    },
    "4768": {
      "op": "POP"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4771": {
      "op": "ADD"
    },
    "4772": {
      "op": "SWAP1"
    },
    "4773": {
      "jump": "o",
      "op": "JUMP"
    },
    "4774": {
      "op": "JUMPDEST"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4777": {
      "op": "DUP2"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4780": {
      "op": "NOT"
    },
    "4781": {
      "op": "DIV"
    },
    "4782": {
      "op": "DUP4"
    },
    "4783": {
      "op": "GT"
    },
    "4784": {
      "op": "DUP3"
    },
    "4785": {
      "op": "ISZERO"
    },
    "4786": {
      "op": "ISZERO"
    },
    "4787": {
      "op": "AND"
    },
    "4788": {
      "op": "ISZERO"
    },
    "4789": {
      "op": "PUSH2",
      "value": "0x12C0"
    },
    "4792": {
      "op": "JUMPI"
    },
    "4793": {
      "op": "PUSH2",
      "value": "0x12C0"
    },
    "4796": {
      "op": "PUSH2",
      "value": "0x1217"
    },
    "4799": {
      "jump": "i",
      "op": "JUMP"
    },
    "4800": {
      "op": "JUMPDEST"
    },
    "4801": {
      "op": "POP"
    },
    "4802": {
      "op": "MUL"
    },
    "4803": {
      "op": "SWAP1"
    },
    "4804": {
      "jump": "o",
      "op": "JUMP"
    },
    "4805": {
      "op": "JUMPDEST"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4810": {
      "op": "DUP3"
    },
    "4811": {
      "op": "DUP5"
    },
    "4812": {
      "op": "SUB"
    },
    "4813": {
      "op": "SLT"
    },
    "4814": {
      "op": "ISZERO"
    },
    "4815": {
      "op": "PUSH2",
      "value": "0x12D7"
    },
    "4818": {
      "op": "JUMPI"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4821": {
      "op": "DUP1"
    },
    "4822": {
      "op": "REVERT"
    },
    "4823": {
      "op": "JUMPDEST"
    },
    "4824": {
      "op": "DUP2"
    },
    "4825": {
      "op": "MLOAD"
    },
    "4826": {
      "op": "DUP1"
    },
    "4827": {
      "op": "ISZERO"
    },
    "4828": {
      "op": "ISZERO"
    },
    "4829": {
      "op": "DUP2"
    },
    "4830": {
      "op": "EQ"
    },
    "4831": {
      "op": "PUSH2",
      "value": "0xB0D"
    },
    "4834": {
      "op": "JUMPI"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4837": {
      "op": "DUP1"
    },
    "4838": {
      "op": "REVERT"
    },
    "4839": {
      "op": "JUMPDEST"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4842": {
      "op": "DUP3"
    },
    "4843": {
      "op": "PUSH2",
      "value": "0x1304"
    },
    "4846": {
      "op": "JUMPI"
    },
    "4847": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4854": {
      "op": "SHL"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4857": {
      "op": "MSTORE"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4862": {
      "op": "MSTORE"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4867": {
      "op": "REVERT"
    },
    "4868": {
      "op": "JUMPDEST"
    },
    "4869": {
      "op": "POP"
    },
    "4870": {
      "op": "DIV"
    },
    "4871": {
      "op": "SWAP1"
    },
    "4872": {
      "jump": "o",
      "op": "JUMP"
    },
    "4873": {
      "op": "JUMPDEST"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4876": {
      "op": "JUMPDEST"
    },
    "4877": {
      "op": "DUP4"
    },
    "4878": {
      "op": "DUP2"
    },
    "4879": {
      "op": "LT"
    },
    "4880": {
      "op": "ISZERO"
    },
    "4881": {
      "op": "PUSH2",
      "value": "0x1324"
    },
    "4884": {
      "op": "JUMPI"
    },
    "4885": {
      "op": "DUP2"
    },
    "4886": {
      "op": "DUP2"
    },
    "4887": {
      "op": "ADD"
    },
    "4888": {
      "op": "MLOAD"
    },
    "4889": {
      "op": "DUP4"
    },
    "4890": {
      "op": "DUP3"
    },
    "4891": {
      "op": "ADD"
    },
    "4892": {
      "op": "MSTORE"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4895": {
      "op": "ADD"
    },
    "4896": {
      "op": "PUSH2",
      "value": "0x130C"
    },
    "4899": {
      "op": "JUMP"
    },
    "4900": {
      "op": "JUMPDEST"
    },
    "4901": {
      "op": "DUP4"
    },
    "4902": {
      "op": "DUP2"
    },
    "4903": {
      "op": "GT"
    },
    "4904": {
      "op": "ISZERO"
    },
    "4905": {
      "op": "PUSH2",
      "value": "0xBD0"
    },
    "4908": {
      "op": "JUMPI"
    },
    "4909": {
      "op": "POP"
    },
    "4910": {
      "op": "POP"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4913": {
      "op": "SWAP2"
    },
    "4914": {
      "op": "ADD"
    },
    "4915": {
      "op": "MSTORE"
    },
    "4916": {
      "jump": "o",
      "op": "JUMP"
    },
    "4917": {
      "op": "JUMPDEST"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4920": {
      "op": "DUP3"
    },
    "4921": {
      "op": "MLOAD"
    },
    "4922": {
      "op": "PUSH2",
      "value": "0x1347"
    },
    "4925": {
      "op": "DUP2"
    },
    "4926": {
      "op": "DUP5"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4929": {
      "op": "DUP8"
    },
    "4930": {
      "op": "ADD"
    },
    "4931": {
      "op": "PUSH2",
      "value": "0x1309"
    },
    "4934": {
      "jump": "i",
      "op": "JUMP"
    },
    "4935": {
      "op": "JUMPDEST"
    },
    "4936": {
      "op": "SWAP2"
    },
    "4937": {
      "op": "SWAP1"
    },
    "4938": {
      "op": "SWAP2"
    },
    "4939": {
      "op": "ADD"
    },
    "4940": {
      "op": "SWAP3"
    },
    "4941": {
      "op": "SWAP2"
    },
    "4942": {
      "op": "POP"
    },
    "4943": {
      "op": "POP"
    },
    "4944": {
      "jump": "o",
      "op": "JUMP"
    },
    "4945": {
      "op": "JUMPDEST"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4948": {
      "op": "DUP2"
    },
    "4949": {
      "op": "MSTORE"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4952": {
      "op": "DUP3"
    },
    "4953": {
      "op": "MLOAD"
    },
    "4954": {
      "op": "DUP1"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4957": {
      "op": "DUP5"
    },
    "4958": {
      "op": "ADD"
    },
    "4959": {
      "op": "MSTORE"
    },
    "4960": {
      "op": "PUSH2",
      "value": "0x1370"
    },
    "4963": {
      "op": "DUP2"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4966": {
      "op": "DUP6"
    },
    "4967": {
      "op": "ADD"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4970": {
      "op": "DUP8"
    },
    "4971": {
      "op": "ADD"
    },
    "4972": {
      "op": "PUSH2",
      "value": "0x1309"
    },
    "4975": {
      "jump": "i",
      "op": "JUMP"
    },
    "4976": {
      "op": "JUMPDEST"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4979": {
      "op": "ADD"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4982": {
      "op": "NOT"
    },
    "4983": {
      "op": "AND"
    },
    "4984": {
      "op": "SWAP2"
    },
    "4985": {
      "op": "SWAP1"
    },
    "4986": {
      "op": "SWAP2"
    },
    "4987": {
      "op": "ADD"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4990": {
      "op": "ADD"
    },
    "4991": {
      "op": "SWAP3"
    },
    "4992": {
      "op": "SWAP2"
    },
    "4993": {
      "op": "POP"
    },
    "4994": {
      "op": "POP"
    },
    "4995": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "aad4fdaddb4231f7ab463d20ac2f369b14db1722",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '../interfaces/IVested.sol';\n\ncontract QuarterlyPayout is Ownable\n{\n  using SafeERC20 for IERC20;\n  using SafeMath for uint256;\n\n  /* =========  MEMBER VARS ========== */\n  IERC20 immutable public token;  // FLEX token\n  IVested immutable public vested; // veFLEX\n  uint256 public constant EPOCH_BLOCKS = 10; // 10 is for test and 17280 is average blocks in 1 day with 5s block interval\n  uint256 public startBlockHeight;\n  uint256[] public payoutForEpoch;\n  mapping(address => uint256) public claimedEpoches;\n  mapping(address => bool) public isDistributor;\n  mapping(address => bool) public isOperator;\n\n  /* ===========   EVENTS  =========== */\n  event Claim(address indexed from, uint256 amount, uint256 lastClaimedEpoch, uint256 endingEpoch);\n  event IsDistributor(address indexed account, bool status);\n  event IsOperator(address indexed account, bool status);\n  event Distribute(address distributor, uint256 amount);\n  /* ========== CONSTRUCTOR ========== */\n  constructor(address tknAddr, address veAddr)\n  {\n    require(tknAddr != address(0), 'Token address cannot be zero.');  // FLEX token\n    require(veAddr != address(0) , 'Vested address cannot be zero.'); // veFLEX\n    token = IERC20(tknAddr);\n    vested = IVested(veAddr);\n  }\n\n  function addDistributor(address account) public onlyOwner {\n    require(account != address(0), 'Account address cannot be zero');\n    isDistributor[account] = true;\n    emit IsDistributor(account, true);\n  }\n\n  function removeDistributor(address account) public onlyOwner {\n    require(account != address(0), 'Account address cannot be zero');\n    isDistributor[account] = false;\n    emit IsDistributor(account, false);\n  }\n\n  function addOperator(address account) public onlyOwner {\n    require(account != address(0), 'Account address cannot be zero');\n    isOperator[account] = true;\n    emit IsOperator(account, true);\n  }\n\n  function removeOperator(address account) public onlyOwner {\n    require(account != address(0), 'Account address cannot be zero');\n    isOperator[account] = false;\n    emit IsOperator(account, false);\n  }\n\n  function setStartBlockHeight(uint256 blockHeight) public onlyOwner {\n    require(startBlockHeight == 0, \"Start block height already set!\");\n    startBlockHeight = blockHeight;\n  }\n\n  function distribute(uint256 amount) external {\n    require(msg.sender == owner() || isDistributor[msg.sender], \"Distributor not authorized!\");\n    require(amount > 0, \"Amount to be distributed must be greater than zero!\");\n    payoutForEpoch.push(amount);\n    emit Distribute(msg.sender, amount);\n    token.safeTransferFrom(msg.sender, address(this), amount);\n  }\n\n /**\n  * @dev \n  *   This is not current epoch, but rather the number of claimable epochs.\n  *   Name not changed for the sake of compatibility with former implementation.\n  */\n  function currentEpoch() public view returns(uint256) {\n    return payoutForEpoch.length;\n  }\n\n  function claim(address owner) external {\n    require(owner == msg.sender, \"Can only claim for own account\");\n    uint256 epoch = currentEpoch();\n    if (epoch > 0) {\n      _claimUntilEpoch(owner, epoch.sub(1));\n    }\n  }\n\n  function getClaimable(address owner) external view returns(uint256) {\n    uint256 epoch = currentEpoch();\n    if (epoch == 0) return 0;\n    (uint256 amount, ) = _getClaimableUntilEpoch(owner, epoch.sub(1));\n    return amount;\n  }\n\n/**\n  * @dev get current epoch\n  */\n  function getCurrentEpoch() external view returns(uint256) {\n    require(msg.sender == owner() || isOperator[msg.sender], \"Not authorized!\");\n    return _getCurrentEpoch();\n  }\n\n/**\n  * @dev get epoch start block height\n  */\n  function getEpochStartBlockHeight(uint256 epoch) external view returns(uint256) {\n    require(msg.sender == owner() || isOperator[msg.sender], \"Not authorized!\");\n    return _getEpochStartBlockHeight(epoch);\n  }\n\n\n/**\n  * @dev \n  *   Rewarded epochs might extend to the future, but can only \n  *   claim until epochs no later than the current actual epoch.\n  */\n  function _getClaimableUntilEpoch(address owner, uint256 endingEpoch) internal view returns(uint256, uint256) {\n    uint256 amount = 0;\n    uint256 epoch = 0;\n    uint256 blockHeightAtEpochStartTime;\n    uint256 totalSupply;\n    for (epoch = claimedEpoches[owner]; epoch <= endingEpoch; epoch++) {\n      blockHeightAtEpochStartTime = _getEpochStartBlockHeight(epoch);\n      if (block.number <= blockHeightAtEpochStartTime) break;\n      totalSupply = vested.totalSupplyAt(blockHeightAtEpochStartTime);\n      if (totalSupply > 0) {\n        amount += payoutForEpoch[epoch].mul(vested.balanceOfAt(owner, blockHeightAtEpochStartTime)).div(totalSupply);\n      }\n    }\n    return (amount, epoch - 1);\n  }\n\n  function _claimUntilEpoch(address owner, uint256 endingEpoch) internal {\n    (uint256 amount, uint256 lastClaimedEpoch) = _getClaimableUntilEpoch(owner, endingEpoch);\n    claimedEpoches[owner] = lastClaimedEpoch.add(1);\n    if (amount > 0) {\n      emit Claim(owner, amount, lastClaimedEpoch, endingEpoch);\n      token.safeTransfer(owner, amount);\n    }\n  }\n\n /**\n  * @dev \n  *   Given epoch number, get the epoch start block height.\n  */\n  function _getEpochStartBlockHeight(uint256 epoch) internal view returns(uint256) {\n    return startBlockHeight.add(EPOCH_BLOCKS.mul(epoch));\n  }\n\n /**\n  * @dev This is the actual current epoch.\n  */\n  function _getCurrentEpoch() internal view returns(uint256) {\n    require(block.number >= startBlockHeight, 'The payout contract is not started yet');\n    return (block.number - startBlockHeight).div(EPOCH_BLOCKS);\n  }\n} ",
  "sourceMap": "328:5519:8:-:0;;;1266:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:0;909:18;;-1:-1:-1;;;;;;909:18:0;665:10:4;909:18:0;;;;;942:43;;665:10:4;;;;942:43:0;;867:17;;942:43;-1:-1:-1;;;;;;1327:21:8;;1319:63;;;;-1:-1:-1;;;1319:63:8;;696:2:19;1319:63:8;;;678:21:19;735:2;715:18;;;708:30;774:31;754:18;;;747:59;823:18;;1319:63:8;;;;;;;;;-1:-1:-1;;;;;1411:20:8;;1403:64;;;;-1:-1:-1;;;1403:64:8;;1054:2:19;1403:64:8;;;1036:21:19;1093:2;1073:18;;;1066:30;1132:32;1112:18;;;1105:60;1182:18;;1403:64:8;852:354:19;1403:64:8;-1:-1:-1;;;;;1483:23:8;;;;;1512:24;;;328:5519;;14:177:19;93:13;;-1:-1:-1;;;;;135:31:19;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;852:354::-;328:5519:8;;;;;;;;;;;;;;",
  "sourcePath": "contracts/QuarterlyPayout.sol",
  "type": "contract"
}